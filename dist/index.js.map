{"version":3,"file":"index.js","mappings":"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","sources":["webpack://toru/webpack/universalModuleDefinition","webpack://toru/webpack/bootstrap","webpack://toru/webpack/runtime/define property getters","webpack://toru/webpack/runtime/hasOwnProperty shorthand","webpack://toru/webpack/runtime/make namespace object","webpack://toru/./src/geom.ts","webpack://toru/./src/mesh.ts","webpack://toru/./src/material.ts","webpack://toru/./src/component.ts","webpack://toru/./src/components/static_mesh.ts","webpack://toru/./src/actor.ts","webpack://toru/./src/camera.ts","webpack://toru/./src/renderer/renderer.ts","webpack://toru/./src/renderer/webgl_shader.ts","webpack://toru/./src/renderer/webgl_mesh.ts","webpack://toru/./src/texture.ts","webpack://toru/./src/render_texture.ts","webpack://toru/./src/renderer/webgl_texture.ts","webpack://toru/./src/renderer/webgl_render_target.ts","webpack://toru/./src/components/light.ts","webpack://toru/./src/renderer/webgl_renderer.ts","webpack://toru/./src/shaders/wireframe.vert.glsl","webpack://toru/./src/shaders/wireframe.frag.glsl","webpack://toru/./src/scene.ts","webpack://toru/./src/light.ts","webpack://toru/./src/shaders/material.ts","webpack://toru/./src/shaders/material.vert.glsl","webpack://toru/./src/shaders/material.frag.glsl","webpack://toru/./src/shaders/material_sphere.vert.glsl","webpack://toru/./src/shaders/material_sphere.frag.glsl","webpack://toru/./src/shaders/sprite.ts","webpack://toru/./src/shaders/sprite.vert.glsl","webpack://toru/./src/shaders/sprite.frag.glsl","webpack://toru/./src/shaders/simple.ts","webpack://toru/./src/shaders/simple.vert.glsl","webpack://toru/./src/shaders/simple.frag.glsl","webpack://toru/./src/meshes/obj.ts","webpack://toru/./src/meshes/cube.ts","webpack://toru/./src/meshes/sphere.ts","webpack://toru/./src/meshes/quad.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"toru\"] = factory();\n\telse\n\t\troot[\"toru\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export type Point4 = [number, number, number, number];\nexport type Point3 = [number, number, number];\nexport type Point2 = [number, number];\nexport type Vector4 = [number, number, number, number];\nexport type Vector3 = [number, number, number];\nexport type Vector2 = [number, number];\nexport type Rect = [number, number, number, number];\nexport type LonLat = [number, number];\n\nexport type Columns = [Vector4, Vector4, Vector4, Vector4];\nexport type Rows = [Vector4, Vector4, Vector4, Vector4];\n\n// prettier-ignore\nexport class Matrix4 {\n\tprivate _data: Float32Array;\n\n\tconstructor(data?: number[] | Float32Array) {\n\t\tthis._data = new Float32Array(16);\n\t\tif (data) {\n\t\t\tfor (let i = 0; i < 16; i++) {\n\t\t\t\tthis._data[i] = data[i];\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic identity(): Matrix4 {\n\t\treturn new Matrix4([\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t]);\n\t}\n\n\tstatic fromColumns(cols: Columns): Matrix4 {\n\t\treturn new Matrix4([\n\t\t\tcols[0][0], cols[1][0], cols[2][0], cols[3][0],\n\t\t\tcols[0][1], cols[1][1], cols[2][1], cols[3][1],\n\t\t\tcols[0][2], cols[1][2], cols[2][2], cols[3][2],\n\t\t\tcols[0][3], cols[1][3], cols[2][3], cols[3][3],\n\t\t]);\n\t}\n\n\tstatic perspective(aspect: number, fov: number, near: number, far: number): Matrix4 {\n\t\tconst fovRad = fov * (Math.PI / 180);\n\t\tconst f = 1.0 / Math.tan(fovRad / 2.0);\n\t\tconst range = 1.0 / (near - far);\n\t\treturn new Matrix4([\n\t\t\tf / aspect, 0,                    0,                      0,\n\t\t\t0,          f,                    0,                      0,\n\t\t\t0,          0, (near + far) * range, near * far * range * 2,\n\t\t\t0,          0,                   -1,                      0,\n\t\t]);\n\t}\n\n\tstatic rotation(x: number, y: number, z: number): Matrix4 {\n\t\tconst axisangle: Vector3 = [x, y, z];\n\n\t\tfunction cosSin(axis: number): [number, number] {\n\t\t\treturn [Math.cos(axisangle[axis]), Math.sin(axisangle[axis])];\n\t\t}\n\n\n\t\tconst [cosx, sinx] = cosSin(0);\n\t\tconst [cosy, siny] = cosSin(1);\n\t\tconst [cosz, sinz] = cosSin(2);\n\t\tconst rotx = new Matrix4([\n\t\t\t1,    0,     0, 0,\n\t\t\t0, cosx, -sinx, 0,\n\t\t\t0, sinx,  cosx, 0,\n\t\t\t0,    0,     0, 1,\n\t\t]);\n\t\tconst roty = new Matrix4([\n\t\t\tcosy,  0, siny, 0,\n\t\t\t   0,  1,    0, 0,\n\t\t\t-siny, 0, cosy, 0,\n\t\t\t    0, 0,    0, 1,\n\t\t]);\n\t\tconst rotz = new Matrix4([\n\t\t\tcosz, -sinz, 0, 0,\n\t\t\tsinz,  cosz, 0, 0,\n\t\t\t   0,     0, 1, 0,\n\t\t\t   0,     0, 0, 1,\n\t\t]);\n\n\t\treturn rotx.multiply(roty.multiply(rotz));\n\t}\n\n\tstatic translation(x: number, y: number, z: number): Matrix4 {\n\t\treturn new Matrix4([\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1,\n\t\t]);\n\t}\n\n\tstatic scaling(x: number, y?: number, z?: number): Matrix4 {\n\t\tif (y == null) y = x;\n\t\tif (z == null) z = y;\n\n\t\treturn new Matrix4([\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1,\n\t\t]);\n\t}\n\n\tstatic lookAt(from: Point3, to: Point3) {\n\t\tconst forward = normalize([\n\t\t\tfrom[0] - to[0],\n\t\t\tfrom[1] - to[1],\n\t\t\tfrom[2] - to[2],\n\t\t]);\n\n\t\tconst right = cross([0.0, 1.0, 0.0], forward);\n\n\t\tconst up = cross(forward, right);\n\n\t\tconst view = new Matrix4([\n\t\t\tright[0], up[0], forward[0], from[0],\n\t\t\tright[1], up[1], forward[1], from[1],\n\t\t\tright[2], up[2], forward[2], from[2],\n\t\t         0,      0,         0,       1,\n\t\t]);\n\n\t\treturn view;\n\t}\n\n\tclone(): Matrix4 {\n\t\treturn new Matrix4(this._data);\n\t}\n\n\ttoArray(): number[] {\n\t\treturn Array.from(this._data);\n\t}\n\n\tat(col: number, row: number): number {\n\t\tconst idx = row * 4 + col;\n\t\treturn this._data[idx];\n\t}\n\n\tcolumn(axis: number): Vector4 {\n\t\tconst d = this._data;\n\t\treturn [\n\t\t\td[axis + 0],\n\t\t\td[axis + 4],\n\t\t\td[axis + 8],\n\t\t\td[axis + 12],\n\t\t];\n\t}\n\n\trow(axis: number): Vector4 {\n\t\tconst d = this._data;\n\t\tconst o = 4 * axis;\n\t\treturn [\n\t\t\td[o + 0],\n\t\t\td[o + 1],\n\t\t\td[o + 2],\n\t\t\td[o + 3],\n\t\t];\n\t}\n\n\tget columns(): Columns {\n\t\treturn [\n\t\t\tthis.column(0),\n\t\t\tthis.column(1),\n\t\t\tthis.column(2),\n\t\t\tthis.column(3),\n\t\t];\n\t}\n\n\tget rows(): Rows {\n\t\treturn [\n\t\t\tthis.row(0),\n\t\t\tthis.row(1),\n\t\t\tthis.row(2),\n\t\t\tthis.row(3),\n\t\t];\n\t}\n\n\tmultiply(other: Matrix4): Matrix4 {\n\t\tconst [colx, coly, colz, colw] = other.columns;\n\t\tconst columns: Columns = [\n\t\t\tthis.multiplyVector4(colx),\n\t\t\tthis.multiplyVector4(coly),\n\t\t\tthis.multiplyVector4(colz),\n\t\t\tthis.multiplyVector4(colw),\n\t\t];\n\t\treturn Matrix4.fromColumns(columns);\n\t}\n\n\tmultiplyVector4(vec: Vector4): Vector4 {\n\t\tconst cols = this.columns;\n\n\t\tconst x = scaleVector4(cols[0], vec[0]);\n\t\tconst y = scaleVector4(cols[1], vec[1]);\n\t\tconst z = scaleVector4(cols[2], vec[2]);\n\t\tconst w = scaleVector4(cols[3], vec[3]);\n\t\treturn [\n\t\t\t(x[0] + y[0] + z[0] + w[0]),\n\t\t\t(x[1] + y[1] + z[1] + w[1]),\n\t\t\t(x[2] + y[2] + z[2] + w[2]),\n\t\t\t(x[3] + y[3] + z[3] + w[3]),\n\t\t];\n\t}\n\n\ttransformPoint3(point: Point3): Point3 {\n\t\tconst vec = this.multiplyVector4([point[0], point[1], point[2], 1]);\n\n\t\treturn [\n\t\t\tvec[0] / vec[3],\n\t\t\tvec[1] / vec[3],\n\t\t\tvec[2] / vec[3],\n\t\t];\n\t}\n\n\tinverse(): Matrix4 {\n\t\tconst inv = new Array(16);\n\t\tconst m = this.toArray();\n\n\t\tinv[0] = m[5]*m[10]*m[15] -\n\t\t\tm[5]*m[14]*m[11] -\n\t\t\tm[6]*m[9]*m[15] +\n\t\t\tm[6]*m[13]*m[11] +\n\t\t\tm[7]*m[9]*m[14] -\n\t\t\tm[7]*m[13]*m[10];\n\n\t\tinv[1] = -m[1]*m[10]*m[15] +\n\t\t\tm[1]*m[14]*m[11] +\n\t\t\tm[2]*m[9]*m[15] -\n\t\t\tm[2]*m[13]*m[11] -\n\t\t\tm[3]*m[9]*m[14] +\n\t\t\tm[3]*m[13]*m[10];\n\n\t\tinv[2] = m[1]*m[6]*m[15] -\n\t\t\tm[1]*m[14]*m[7] -\n\t\t\tm[2]*m[5]*m[15] +\n\t\t\tm[2]*m[13]*m[7] +\n\t\t\tm[3]*m[5]*m[14] -\n\t\t\tm[3]*m[13]*m[6];\n\n\t\tinv[3] = -m[1]*m[6]*m[11] +\n\t\t\tm[1]*m[10]*m[7] +\n\t\t\tm[2]*m[5]*m[11] -\n\t\t\tm[2]*m[9]*m[7] -\n\t\t\tm[3]*m[5]*m[10] +\n\t\t\tm[3]*m[9]*m[6];\n\n\t\tinv[4] = -m[4]*m[10]*m[15] +\n\t\t\tm[4]*m[14]*m[11] +\n\t\t\tm[6]*m[8]*m[15] -\n\t\t\tm[6]*m[12]*m[11] -\n\t\t\tm[7]*m[8]*m[14] +\n\t\t\tm[7]*m[12]*m[10];\n\n\t\tinv[5] = m[0]*m[10]*m[15] -\n\t\t\tm[0]*m[14]*m[11] -\n\t\t\tm[2]*m[8]*m[15] +\n\t\t\tm[2]*m[12]*m[11] +\n\t\t\tm[3]*m[8]*m[14] -\n\t\t\tm[3]*m[12]*m[10];\n\n\t\tinv[6] = -m[0]*m[6]*m[15] +\n\t\t\tm[0]*m[14]*m[7] +\n\t\t\tm[2]*m[4]*m[15] -\n\t\t\tm[2]*m[12]*m[7] -\n\t\t\tm[3]*m[4]*m[14] +\n\t\t\tm[3]*m[12]*m[6];\n\n\t\tinv[7] = m[0]*m[6]*m[11] -\n\t\t\tm[0]*m[10]*m[7] -\n\t\t\tm[2]*m[4]*m[11] +\n\t\t\tm[2]*m[8]*m[7] +\n\t\t\tm[3]*m[4]*m[10] -\n\t\t\tm[3]*m[8]*m[6];\n\n\t\tinv[8] = m[4]*m[9]*m[15] -\n\t\t\tm[4]*m[13]*m[11] -\n\t\t\tm[5]*m[8]*m[15] +\n\t\t\tm[5]*m[12]*m[11] +\n\t\t\tm[7]*m[8]*m[13] -\n\t\t\tm[7]*m[12]*m[9];\n\n\t\tinv[9] = -m[0]*m[9]*m[15] +\n\t\t\tm[0]*m[13]*m[11] +\n\t\t\tm[1]*m[8]*m[15] -\n\t\t\tm[1]*m[12]*m[11] -\n\t\t\tm[3]*m[8]*m[13] +\n\t\t\tm[3]*m[12]*m[9];\n\n\t\tinv[10] = m[0]*m[5]*m[15] -\n\t\t\tm[0]*m[13]*m[7] -\n\t\t\tm[1]*m[4]*m[15] +\n\t\t\tm[1]*m[12]*m[7] +\n\t\t\tm[3]*m[4]*m[13] -\n\t\t\tm[3]*m[12]*m[5];\n\n\t\tinv[11] = -m[0]*m[5]*m[11] +\n\t\t\tm[0]*m[9]*m[7] +\n\t\t\tm[1]*m[4]*m[11] -\n\t\t\tm[1]*m[8]*m[7] -\n\t\t\tm[3]*m[4]*m[9] +\n\t\t\tm[3]*m[8]*m[5];\n\n\t\tinv[12] = -m[4]*m[9]*m[14] +\n\t\t\tm[4]*m[13]*m[10] +\n\t\t\tm[5]*m[8]*m[14] -\n\t\t\tm[5]*m[12]*m[10] -\n\t\t\tm[6]*m[8]*m[13] +\n\t\t\tm[6]*m[12]*m[9];\n\n\t\tinv[13] = m[0]*m[9]*m[14] -\n\t\t\tm[0]*m[13]*m[10] -\n\t\t\tm[1]*m[8]*m[14] +\n\t\t\tm[1]*m[12]*m[10] +\n\t\t\tm[2]*m[8]*m[13] -\n\t\t\tm[2]*m[12]*m[9];\n\n\t\tinv[14] = -m[0]*m[5]*m[14] +\n\t\t\tm[0]*m[13]*m[6] +\n\t\t\tm[1]*m[4]*m[14] -\n\t\t\tm[1]*m[12]*m[6] -\n\t\t\tm[2]*m[4]*m[13] +\n\t\t\tm[2]*m[12]*m[5];\n\n\t\tinv[15] = m[0]*m[5]*m[10] -\n\t\t\tm[0]*m[9]*m[6] -\n\t\t\tm[1]*m[4]*m[10] +\n\t\t\tm[1]*m[8]*m[6] +\n\t\t\tm[2]*m[4]*m[9] -\n\t\t\tm[2]*m[8]*m[5];\n\n\t\tconst det = m[0]*inv[0] + m[4]*inv[4] + m[8]*inv[8] + m[12]*inv[12];\n\t\tif (det == 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn new Matrix4(inv);\n\t}\n\n\textractTranslation(): Matrix4 {\n\t\tconst x = this._data[3];\n\t\tconst y = this._data[7];\n\t\tconst z = this._data[11];\n\t\treturn Matrix4.translation(x, y, z);\n\t}\n\n\textractScaling(): Matrix4 {\n\t\tconst x = 0;\n\t\tconst y = 0;\n\t\tconst z = 0;\n\t\treturn Matrix4.scaling(x, y, z);\n\t}\n\n\textractRotation(): Matrix4 {\n\t\tconst x = 0;\n\t\tconst y = 0;\n\t\tconst z = 0;\n\t\treturn Matrix4.rotation(x, y, z);\n\t}\n\n\teulerAngles(): Vector3 {\n\t\tconst sy = Math.sqrt(this.at(0, 0) * this.at(0, 0) + this.at(1, 0) * this.at(1, 0));\n\t\tconst singular = sy < 1e-6;\n\n\t\tlet x = 0.0;\n\t\tlet y = 0.0;\n\t\tlet z = 0.0;\n\n\t\tif (singular) {\n\t\t\tx = Math.atan2(this.at(1, 2), this.at(1, 1));\n\t\t\ty = Math.atan2(this.at(2, 0), sy);\n\t\t\tz = 0;\n\t\t} else {\n\t\t\tx = Math.atan2(-this.at(2, 1), this.at(2, 2));\n\t\t\ty = Math.atan2(this.at(2, 0), sy);\n\t\t\tz = Math.atan2(-this.at(1, 0), this.at(0, 0));\n\t\t}\n\n\t\treturn [x, y, z];\n\t}\n}\n\nexport function scaleVector4(vec: Vector4, scale: number): Vector4 {\n\treturn [vec[0] * scale, vec[1] * scale, vec[2] * scale, vec[3] * scale];\n}\n\nexport function addVector4(vec: Vector4, other: Vector4): Vector4 {\n\treturn [vec[0] + other[0], vec[1] + other[1], vec[2] + other[2], vec[3] + other[3]];\n}\n\nexport function subtractVector4(vec: Vector4, other: Vector4): Vector4 {\n\treturn [vec[0] - other[0], vec[1] - other[1], vec[2] - other[2], vec[3] - other[3]];\n}\n\nexport function multiplyVector4(vec: Vector4, other: Vector4): Vector4 {\n\treturn [vec[0] * other[0], vec[1] * other[1], vec[2] * other[2], vec[3] * other[3]];\n}\n\nexport function scaleVector3(vec: Vector3, scale: number): Vector3 {\n\treturn [vec[0] * scale, vec[1] * scale, vec[2] * scale];\n}\n\nexport function addVector3(vec: Vector3, other: Vector3): Vector3 {\n\treturn [vec[0] + other[0], vec[1] + other[1], vec[2] + other[2]];\n}\n\nexport function subtractVector3(vec: Vector3, other: Vector3): Vector3 {\n\treturn [vec[0] - other[0], vec[1] - other[1], vec[2] - other[2]];\n}\n\nexport function multiplyVector3(vec: Vector3, other: Vector3): Vector3 {\n\treturn [vec[0] * other[0], vec[1] * other[1], vec[2] * other[2]];\n}\n\nexport function distanceVector3(vec: Vector3, other: Vector3): number {\n\tconst diff = subtractVector3(vec, other);\n\treturn Math.abs(magnitude(diff));\n}\n\nexport function cross(p0: Vector3, p1: Vector3): Vector3 {\n\tconst x = p0[1] * p1[2] - p0[2] * p1[1];\n\tconst y = p0[2] * p1[0] - p0[0] * p1[2];\n\tconst z = p0[0] * p1[1] - p0[1] * p1[0];\n\treturn [x, y, z];\n}\n\nexport function dot(p0: Vector3, p1: Vector3): number {\n\tconst x = p0[0] * p1[0];\n\tconst y = p0[1] * p1[1];\n\tconst z = p0[2] * p1[2];\n\treturn x + y + z;\n}\n\nexport function normalize(v: Vector3): Vector3 {\n\tconst norm = magnitude(v);\n\treturn [v[0] / norm, v[1] / norm, v[2] / norm];\n}\n\nexport function magnitude(v: Vector3): number {\n\treturn Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n}\n\nexport function raySphereIntersection(\n\tcenter: Point3,\n\tradius: number,\n\torigin: Point3,\n\tdirection: Vector3\n): Point3 | null {\n\tconst p: Vector3 = [origin[0] - center[0], origin[1] - center[1], origin[2] - center[2]];\n\n\tconst a = Math.pow(magnitude(direction), 2);\n\tconst b = dot(direction, p);\n\tconst c = Math.pow(magnitude(p), 2) - radius * radius;\n\tconst delta = b * b - a * c;\n\tif (delta < 0) {\n\t\treturn null;\n\t}\n\n\tconst deltaSqrt = Math.sqrt(delta);\n\n\tconst tmin = (-b - deltaSqrt) / a;\n\tconst tmax = (-b + deltaSqrt) / a;\n\n\tif (tmax < 0) {\n\t\treturn null;\n\t}\n\n\tconst t = tmin >= 0 ? tmin : tmax;\n\n\treturn [origin[0] + t * direction[0], origin[1] + t * direction[1], origin[2] + t * direction[2]];\n}\n\nexport function pointToLonLat(point: Point3): LonLat {\n\tconst v = normalize(point);\n\tconst p = normalize([v[0], 0, v[2]]);\n\tlet lat = Math.acos(dot(p, v));\n\tif (v[1] < 0) {\n\t\tlat *= -1;\n\t}\n\tlet lon = -Math.atan2(-v[2], -v[0]) - Math.PI / 2;\n\tif (lon < -Math.PI) {\n\t\tlon += Math.PI * 2;\n\t}\n\n\treturn [lon, lat];\n}\n\nexport function lonLatToPoint(ll: LonLat, radius: number = 1): Point3 {\n\tconst lon = ll[0] - Math.PI;\n\tconst lat = ll[1] - Math.PI / 2;\n\n\tconst x = radius * Math.sin(lat) * Math.sin(lon);\n\tconst y = radius * Math.cos(lat);\n\tconst z = radius * Math.sin(lat) * Math.cos(lon);\n\n\treturn [x, y, z];\n}\n","import { Matrix4, Point3, Vector3, normalize, cross } from './geom';\nimport { Vertex } from './renderer/vertex';\nexport { Vertex };\n\nexport interface GeometryOptions {\n\ttransform?: Matrix4;\n}\n\nexport class Geometry<V extends Vertex> {\n\tvertices: V[] = [];\n\ttransform: Matrix4 = Matrix4.identity();\n\n\tconstructor(vertices?: V[], options?: GeometryOptions) {\n\t\tif (vertices) {\n\t\t\tthis.vertices = [...vertices];\n\t\t}\n\t\tif (options?.transform) {\n\t\t\tthis.transform = options.transform;\n\t\t}\n\t}\n\n\tclone(): Geometry<V> {\n\t\treturn new Geometry(\n\t\t\tthis.vertices.map(v => ({ ...v })),\n\t\t\t{ transform: this.transform.clone() }\n\t\t);\n\t}\n\n\tcalculateNormals() {\n\t\tif (this.vertices.length === 0) return;\n\t\tconst vertices = (this.vertices as any[]) as { position: Point3; normal: Vector3 }[];\n\n\t\tif (!('normal' in vertices[0])) {\n\t\t\tthrow `Geometry Vertex doesn't have a 'normal' attribute`;\n\t\t}\n\n\t\tfor (let i = 0; i < this.vertices.length; i += 3) {\n\t\t\tconst p0 = vertices[i + 0].position;\n\t\t\tconst p1 = vertices[i + 1].position;\n\t\t\tconst p2 = vertices[i + 2].position;\n\n\t\t\tconst v0: Vector3 = [p1[0] - p0[0], p1[1] - p0[1], p1[2] - p0[2]];\n\t\t\tconst v1: Vector3 = [p2[0] - p0[0], p2[1] - p0[1], p2[2] - p0[2]];\n\t\t\tconst normal = normalize(cross(v0, v1));\n\t\t\tvertices[i + 0].normal = normal;\n\t\t\tvertices[i + 1].normal = normal;\n\t\t\tvertices[i + 2].normal = normal;\n\t\t}\n\t}\n}\n\nexport class Mesh<V extends Vertex = Vertex> {\n\tgeometries: Geometry<V>[] = [];\n\n\tconstructor(geom?: Geometry<V> | Geometry<V>[] | V[]) {\n\t\tif (geom) {\n\t\t\tif (Array.isArray(geom)) {\n\t\t\t\tif (geom.length === 0 || geom[0] instanceof Geometry) {\n\t\t\t\t\tthis.geometries = [...geom] as Geometry<V>[];\n\t\t\t\t} else {\n\t\t\t\t\tthis.geometries = [new Geometry(geom as V[])];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.geometries = [geom];\n\t\t\t}\n\t\t}\n\t}\n\n\tclone(): Mesh<V> {\n\t\treturn new Mesh(this.geometries.map(g => g.clone()));\n\t}\n\n\tget vertexCount(): number {\n\t\tlet count = 0;\n\t\tfor (const geom of this.geometries) {\n\t\t\tcount += geom.vertices.length;\n\t\t}\n\t\treturn count;\n\t}\n\n\tget vertices(): V[] {\n\t\t// Preallocate the array as it's much faster than a bunch of `Array.concat`\n\t\tconst data: V[] = new Array(this.vertexCount);\n\n\t\tlet i = 0;\n\t\tfor (const geom of this.geometries) {\n\t\t\tfor (const vertex of geom.vertices) {\n\t\t\t\tdata[i] = {\n\t\t\t\t\t...vertex,\n\t\t\t\t\tposition: geom.transform.transformPoint3(vertex.position),\n\t\t\t\t};\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tcalculateNormals() {\n\t\tfor (const geom of this.geometries) {\n\t\t\tgeom.calculateNormals();\n\t\t}\n\t}\n}\n","import { Texture } from './texture';\n\nexport type Color = [number, number, number, number?];\n\nexport interface MaterialOptions {\n\tcolor?: Color;\n\ttexture?: Texture;\n\tnormalMap?: Texture;\n\tspecularMap?: Texture;\n\tdisplacementMap?: Texture;\n\tdisplacementMultiplier?: number;\n\treceivesShadows?: boolean;\n\tcastsShadows?: boolean;\n\temissive?: boolean;\n\twireframe?: boolean;\n}\n\nexport class Material {\n\tcolor: Color = [1.0, 0.0, 0.0, 0.0];\n\ttexture?: Texture = null;\n\tnormalMap?: Texture = null;\n\tspecularMap?: Texture = null;\n\tdisplacementMap?: Texture = null;\n\tdisplacementMultiplier = 1.0;\n\treceivesShadows = true;\n\tcastsShadows = true;\n\temissive = false;\n\twireframe = false;\n\n\tconstructor(props?: MaterialOptions) {\n\t\tif (props?.color != null) {\n\t\t\tthis.color = props.color;\n\t\t}\n\t\tif (props?.texture != null) {\n\t\t\tthis.texture = props.texture;\n\t\t}\n\t\tif (props?.normalMap != null) {\n\t\t\tthis.normalMap = props.normalMap;\n\t\t}\n\t\tif (props?.specularMap != null) {\n\t\t\tthis.specularMap = props.specularMap;\n\t\t}\n\t\tif (props?.displacementMap != null) {\n\t\t\tthis.displacementMap = props.displacementMap;\n\t\t}\n\t\tif (props?.displacementMultiplier != null) {\n\t\t\tthis.displacementMultiplier = props.displacementMultiplier;\n\t\t}\n\t\tif (props?.receivesShadows != null) {\n\t\t\tthis.receivesShadows = props.receivesShadows;\n\t\t}\n\t\tif (props?.castsShadows != null) {\n\t\t\tthis.castsShadows = props.castsShadows;\n\t\t}\n\t\tif (props?.emissive != null) {\n\t\t\tthis.emissive = props.emissive;\n\t\t}\n\t\tif (props?.wireframe != null) {\n\t\t\tthis.wireframe = props.wireframe;\n\t\t}\n\t}\n}\n","export class Component {}\n","import { Component } from '../component';\nimport { Mesh } from '../mesh';\n\nexport class StaticMesh extends Component {\n\tmesh: Mesh;\n\n\tconstructor(mesh: Mesh) {\n\t\tsuper();\n\t\tthis.mesh = mesh;\n\t}\n}\n","import { Matrix4, Point3, Vector3 } from './geom';\nimport { Mesh, Vertex } from './mesh';\nimport { Material, Color } from './material';\nimport { Shader, UniformValues } from './shader';\nimport { Component } from './component';\nimport { StaticMesh } from './components/static_mesh';\n\nexport interface Instance {\n\t[key: string]: number | number[] | Matrix4;\n}\n\nexport type ActorInstance<I extends Instance = Instance> = {\n\tpawn: Actor;\n\tdata: I;\n};\n\nexport interface ActorOptions {\n\tcolor?: Color;\n\tmaterial?: Material;\n\tmodel?: Matrix4;\n\tshader?: Shader;\n\tuniforms?: UniformValues;\n\tcomponents?: Component[];\n}\n\nexport class Actor<I extends Instance = Instance> {\n\tvisible: boolean = true;\n\tcomponents: Component[] = [];\n\tmodel: Matrix4 = Matrix4.identity();\n\tmaterial: Material;\n\tshader?: Shader;\n\tuniforms: UniformValues = {};\n\tchildren: Actor[] = [];\n\tinstances: Map<number, ActorInstance> = new Map();\n\tprivate nextInstanceId = 1;\n\n\tconstructor(meshOrOptions?: Mesh<Vertex> | Actor[] | ActorOptions, options: ActorOptions = {}) {\n\t\tif (meshOrOptions instanceof Array) {\n\t\t\tthis.children = meshOrOptions;\n\t\t} else if (meshOrOptions instanceof Mesh) {\n\t\t\tthis.components.push(new StaticMesh(meshOrOptions));\n\t\t} else if (typeof meshOrOptions === 'object') {\n\t\t\toptions = meshOrOptions;\n\t\t}\n\n\t\tconst material = options.material || new Material();\n\t\tmaterial.color = options.color || material.color;\n\n\t\tthis.material = material;\n\n\t\tif (options.model) {\n\t\t\tthis.model = options.model;\n\t\t}\n\n\t\tif (options.shader) {\n\t\t\tthis.shader = options.shader;\n\t\t}\n\n\t\tif (options.uniforms) {\n\t\t\tthis.uniforms = {\n\t\t\t\t...this.uniforms,\n\t\t\t\t...options.uniforms,\n\t\t\t};\n\t\t}\n\n\t\tif (options.components) {\n\t\t\tthis.components = [...this.components, ...options.components];\n\t\t}\n\t}\n\n\tinstance(data: I): number {\n\t\tconst id = this.nextInstanceId++;\n\n\t\tconst instance = {\n\t\t\tid,\n\t\t\tpawn: this,\n\t\t\tdata: { ...data },\n\t\t};\n\t\tthis.instances.set(id, instance);\n\n\t\treturn id;\n\t}\n\n\tget hasInstances(): boolean {\n\t\treturn this.instances.size !== 0;\n\t}\n\n\tget translationMatrix(): Matrix4 {\n\t\treturn this.model.extractTranslation();\n\t}\n\n\tget rotationMatrix(): Matrix4 {\n\t\treturn this.model.extractRotation();\n\t}\n\n\tget position(): Point3 {\n\t\treturn this.model.transformPoint3([0.0, 0.0, 0.0]);\n\t}\n\n\tset position(pos: Point3) {\n\t\tconst mat = this.model.toArray();\n\t\tmat[3] = pos[0];\n\t\tmat[7] = pos[1];\n\t\tmat[11] = pos[2];\n\t\tthis.model = new Matrix4(mat);\n\t}\n\n\tget rotationVector(): Vector3 {\n\t\tconst vec = this.model.multiplyVector4([0.0, 0.0, 1.0, 0.0]);\n\t\treturn [vec[0], vec[1], vec[2]];\n\t}\n\n\tgetComponentsOfType<C extends Component>(klass: Constructable<C>): C[] {\n\t\treturn this.components.filter(c => c instanceof klass) as C[];\n\t}\n\n\thasComponentOfType<C extends Component>(klass: Constructable<C>): boolean {\n\t\treturn Boolean(this.components.find(c => c instanceof klass));\n\t}\n}\n","import { Matrix4, Point3, Vector3 } from './geom';\nimport { Actor } from './actor';\n\nexport interface Camera {\n\twidth: number;\n\theight: number;\n\tview: Matrix4;\n\tprojection: Matrix4;\n\tresize(width: number, height: number): void;\n}\n\nexport class OrbitCamera extends Actor implements Camera {\n\twidth: number;\n\theight: number;\n\tnear: number = 0.1;\n\tfar: number = 1000.0;\n\tprojection: Matrix4;\n\tdistance: number = 10.0;\n\ttarget: Point3 = [0.0, 0.0, 0.0];\n\trotation = { lon: 0.0, lat: 0.0 };\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.resize(1024, 768);\n\t}\n\n\tget view(): Matrix4 {\n\t\tconst pos = this.target;\n\t\treturn Matrix4.identity()\n\t\t\t.multiply(Matrix4.translation(pos[0], pos[1], pos[2]))\n\t\t\t.multiply(Matrix4.rotation(0.0, this.rotation.lon, 0.0))\n\t\t\t.multiply(Matrix4.rotation(this.rotation.lat, 0.0, 0.0))\n\t\t\t.multiply(Matrix4.translation(0.0, 0.0, this.distance));\n\t}\n\n\tresize(width: number, height: number): void {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.projection = Matrix4.perspective(width / height, 45.0, this.near, this.far);\n\t}\n\n\tzoom(amount: number) {\n\t\tthis.distance += amount;\n\t}\n\n\trotate(lon: number, lat: number) {\n\t\tthis.rotation = {\n\t\t\tlon: this.rotation.lon + lon,\n\t\t\tlat: this.rotation.lat + lat,\n\t\t};\n\t\tif (this.rotation.lat < -Math.PI / 2) {\n\t\t\tthis.rotation.lat = -Math.PI / 2;\n\t\t}\n\t\tif (this.rotation.lat > Math.PI / 2) {\n\t\t\tthis.rotation.lat = Math.PI / 2;\n\t\t}\n\t}\n}\n\nexport class BasicCamera extends Actor implements Camera {\n\twidth: number;\n\theight: number;\n\tnear: number = 1.0;\n\tfar: number = 2000.0;\n\tprojection: Matrix4;\n\tposition: Point3 = [0.0, 1.0, 0.0];\n\trotation: Vector3 = [0.0, 0.0, 0.0];\n\tscaling: Vector3 = [1.0, 1.0, 1.0];\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.resize(1024, 768);\n\t}\n\n\tget view(): Matrix4 {\n\t\treturn Matrix4.identity()\n\t\t\t.multiply(Matrix4.translation(...this.position))\n\t\t\t.multiply(this.rotationMatrix)\n\t\t\t.multiply(Matrix4.scaling(...this.scaling));\n\t}\n\n\tget rotationMatrix(): Matrix4 {\n\t\treturn Matrix4.identity()\n\t\t\t.multiply(Matrix4.rotation(0, 0, this.rotation[2]))\n\t\t\t.multiply(Matrix4.rotation(0, this.rotation[1], 0))\n\t\t\t.multiply(Matrix4.rotation(this.rotation[0], 0, 0));\n\t}\n\tupdateModel() {\n\t\tthis.model = this.view;\n\t}\n\n\trotate(x: number, y: number) {\n\t\tthis.rotation[0] -= Math.PI * x;\n\t\tthis.rotation[1] -= Math.PI * y;\n\n\t\tif (this.rotation[0] < -Math.PI / 2 + 0.01) {\n\t\t\tthis.rotation[0] = -Math.PI / 2 + 0.01;\n\t\t}\n\t\tif (this.rotation[0] > Math.PI / 2 - 0.01) {\n\t\t\tthis.rotation[0] = Math.PI / 2 - 0.01;\n\t\t}\n\n\t\tthis.updateModel();\n\t}\n\n\ttranslate(x: number, y: number, z: number) {\n\t\tconst trans = Matrix4.translation(x, y, z);\n\t\tconst rotation = this.rotationVector;\n\n\t\t// Ignore tilt\n\t\tconst oldX = rotation[0];\n\t\trotation[0] = 0.0;\n\t\tconst rot = this.rotationMatrix;\n\t\trotation[0] = oldX;\n\t\tconst invRot = rot.inverse();\n\n\t\tlet newPosition = trans.multiply(invRot).transformPoint3(this.position);\n\t\tnewPosition = rot.transformPoint3(newPosition);\n\t\tthis.position = newPosition;\n\t\tthis.updateModel();\n\t}\n\n\tresize(width: number, height: number) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.projection = Matrix4.perspective(width / height, 45.0, this.near, this.far);\n\t\tthis.updateModel();\n\t}\n}\n","import { Mesh } from '../mesh';\nimport { Instance } from '../actor';\nimport { Scene } from '../scene';\nimport { Texture } from '../texture';\nimport { Camera, BasicCamera } from '../camera';\nimport { RenderTexture } from '../render_texture';\nimport { Color } from '../material';\n\nexport abstract class Renderer {\n\tcamera: Camera = new BasicCamera();\n\tmousePosition = [0.0, 0.0];\n\tmouseMovement = [0.0, 0.0];\n\twheelMovement = [0.0, 0.0];\n\tmouseButtons = new Set();\n\theldKeys = new Set();\n\tbackgroundColor: Color = [0.0, 0.0, 0.0, 1.0];\n\tupdateSize(_width?: number, _height?: number): void {}\n\tresetMouseMovement() {\n\t\tthis.mouseMovement[0] = 0;\n\t\tthis.mouseMovement[1] = 0;\n\t\tthis.wheelMovement[0] = 0;\n\t\tthis.wheelMovement[1] = 0;\n\t}\n\taddEventListener(\n\t\t_type: string,\n\t\t_listener: EventListenerOrEventListenerObject,\n\t\t_options?: AddEventListenerOptions\n\t): void {}\n\tremoveEventListener(\n\t\t_type: string,\n\t\t_listener: EventListenerOrEventListenerObject,\n\t\t_options?: EventListenerOptions\n\t): void {}\n\tget isDragging(): boolean {\n\t\treturn false;\n\t}\n\tabstract uploadMesh(mesh: Mesh): void;\n\tabstract uploadMeshInstances<I extends Instance = Instance>(mesh: Mesh, instances: I[]): void;\n\tabstract uploadTexture(texture: Texture, unit?: number): number;\n\tabstract bindTexture(texture: Texture): number;\n\tabstract unbindTexture(texture: Texture): void;\n\tabstract async drawScene(scene: Scene, target?: RenderTexture): Promise<number>;\n\tabstract get width(): number;\n\tabstract get height(): number;\n}\n","import { Matrix4 } from '../geom';\nimport { WebGLMesh } from './webgl_mesh';\n\nexport interface ShaderOptions {\n\tattributes?: { [key: string]: WebGLAttribute };\n\tinstanceAttributes?: { [key: string]: WebGLAttribute };\n\tuniforms?: { [key: string]: WebGLUniform };\n}\n\nexport interface WebGLAttribute {\n\tlocation?: number;\n\tsize: number;\n\ttype: number;\n}\n\nexport interface WebGLUniform {\n\tlocation?: WebGLUniformLocation;\n\ttype: number;\n}\n\nexport type WebGLUniformMap = { [key: string]: WebGLUniform };\nexport type WebGLAttributeMap = { [key: string]: WebGLAttribute };\n\nexport class WebGLShader {\n\tgl: WebGLRenderingContext;\n\tcompiled = false;\n\tprogram: WebGLProgram;\n\tattributes: WebGLAttributeMap = {\n\t\tposition: {\n\t\t\ttype: WebGLRenderingContext.FLOAT,\n\t\t\tsize: 3,\n\t\t\tlocation: null,\n\t\t},\n\t};\n\tinstanceAttributes: WebGLAttributeMap = {};\n\tuniforms: WebGLUniformMap = {\n\t\tuTime: {\n\t\t\ttype: WebGLRenderingContext.FLOAT,\n\t\t\tlocation: null,\n\t\t},\n\t\tuViewProj: {\n\t\t\ttype: WebGLRenderingContext.FLOAT_MAT4,\n\t\t\tlocation: null,\n\t\t},\n\t\tuView: {\n\t\t\ttype: WebGLRenderingContext.FLOAT_MAT4,\n\t\t\tlocation: null,\n\t\t},\n\t\tuModel: {\n\t\t\ttype: WebGLRenderingContext.FLOAT_MAT4,\n\t\t\tlocation: null,\n\t\t},\n\t\tuFillColor: {\n\t\t\ttype: WebGLRenderingContext.FLOAT_VEC4,\n\t\t\tlocation: null,\n\t\t},\n\t\tuFogColor: {\n\t\t\ttype: WebGLRenderingContext.FLOAT_VEC4,\n\t\t\tlocation: null,\n\t\t},\n\t\tuLineWidth: {\n\t\t\ttype: WebGLRenderingContext.FLOAT,\n\t\t\tlocation: null,\n\t\t},\n\t\tuResolution: {\n\t\t\ttype: WebGLRenderingContext.FLOAT_VEC2,\n\t\t\tlocation: null,\n\t\t},\n\t\tuSeed: {\n\t\t\ttype: WebGLRenderingContext.FLOAT,\n\t\t\tlocation: null,\n\t\t},\n\t};\n\n\tconstructor(gl?: WebGLRenderingContext, vertSource?: string, fragSource?: string, options?: ShaderOptions) {\n\t\tif (gl) {\n\t\t\tthis.make(gl, vertSource, fragSource, options);\n\t\t}\n\t}\n\n\tmake(gl: WebGLRenderingContext, vertSource?: string, fragSource?: string, options?: ShaderOptions) {\n\t\tthis.gl = gl;\n\t\tif (!vertSource) {\n\t\t\tthrow 'You must provide vertex shader source code';\n\t\t}\n\t\tif (!fragSource) {\n\t\t\tthrow 'You must provide fragment shader source code';\n\t\t}\n\n\t\tconst program = gl.createProgram();\n\n\t\tif (options?.attributes) {\n\t\t\tthis.attributes = {\n\t\t\t\t...this.attributes,\n\t\t\t\t...options.attributes,\n\t\t\t};\n\t\t}\n\n\t\tif (options?.instanceAttributes) {\n\t\t\tthis.instanceAttributes = {\n\t\t\t\t...this.instanceAttributes,\n\t\t\t\t...options.instanceAttributes,\n\t\t\t};\n\t\t}\n\n\t\tif (options?.uniforms) {\n\t\t\tthis.uniforms = {\n\t\t\t\t...this.uniforms,\n\t\t\t\t...options.uniforms,\n\t\t\t};\n\t\t}\n\n\t\t// Enable `fwidth` in shader\n\t\tgl.getExtension('OES_standard_derivatives');\n\n\t\tconst vert = gl.createShader(gl.VERTEX_SHADER);\n\t\tgl.shaderSource(vert, vertSource);\n\t\tgl.attachShader(program, vert);\n\t\tgl.compileShader(vert);\n\t\t// Did the vertex shader compile?\n\t\tif (!gl.getShaderParameter(vert, gl.COMPILE_STATUS)) {\n\t\t\tconst info = gl.getShaderInfoLog(vert);\n\t\t\tthrow `Could not compile Vertex shader: ${info}`;\n\t\t}\n\n\t\tconst frag = gl.createShader(gl.FRAGMENT_SHADER);\n\t\tgl.shaderSource(frag, fragSource);\n\t\tgl.attachShader(program, frag);\n\t\tgl.compileShader(frag);\n\t\t// Did the fragment shader compile?\n\t\tif (!gl.getShaderParameter(frag, gl.COMPILE_STATUS)) {\n\t\t\tconst info = gl.getShaderInfoLog(frag);\n\t\t\tthrow `Could not compile Fragment shader: ${info}`;\n\t\t}\n\n\t\tgl.linkProgram(program);\n\t\t// Did the program link successfully?\n\t\tif (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n\t\t\tconst info = gl.getProgramInfoLog(program);\n\t\t\tconst shaderName = this.constructor.name;\n\t\t\tthrow `Could not link WebGL program (${shaderName}): ${info}`;\n\t\t}\n\n\t\t// Uniform locations\n\t\tfor (const uniformName in this.uniforms) {\n\t\t\tthis.uniforms[uniformName].location = gl.getUniformLocation(program, uniformName);\n\t\t}\n\n\t\t// Attribute locations\n\t\tfor (const attributeName in this.attributes) {\n\t\t\tthis.attributes[attributeName].location = gl.getAttribLocation(program, attributeName);\n\t\t}\n\t\tfor (const attributeName in this.instanceAttributes) {\n\t\t\tthis.instanceAttributes[attributeName].location = gl.getAttribLocation(program, attributeName);\n\t\t}\n\n\t\tgl.enable(gl.CULL_FACE);\n\t\tgl.cullFace(gl.BACK);\n\n\t\tthis.program = program;\n\t\tthis.compiled = true;\n\t}\n\n\tuse() {\n\t\tthis.gl.useProgram(this.program);\n\t}\n\n\tbind(mesh: WebGLMesh) {\n\t\tconst gl = this.gl;\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, mesh.buffer);\n\t\tconst ext = gl.getExtension('ANGLE_instanced_arrays');\n\t\tfor (const attributeName in this.attributes) {\n\t\t\tconst attribute = this.attributes[attributeName];\n\t\t\tif (attribute.location == null || attribute.location === -1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\text.vertexAttribDivisorANGLE(attribute.location, 0);\n\n\t\t\tconst stride = mesh.stride;\n\t\t\tconst offset = mesh.offsets.get(attributeName);\n\t\t\tif (offset == null) {\n\t\t\t\tif (!PRODUCTION) {\n\t\t\t\t\tconsole.warn(`Unable to find attribute offset for ${attributeName}`);\n\t\t\t\t}\n\t\t\t\tgl.disableVertexAttribArray(attribute.location);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tgl.enableVertexAttribArray(attribute.location);\n\t\t\tgl.vertexAttribPointer(attribute.location, attribute.size, attribute.type, false, stride, offset);\n\t\t}\n\t}\n\n\tunbind() {\n\t\tconst gl = this.gl;\n\t\tfor (const attributeName in this.attributes) {\n\t\t\tconst attribute = this.attributes[attributeName];\n\t\t\tif (attribute.location == null || attribute.location === -1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tgl.disableVertexAttribArray(attribute.location);\n\t\t}\n\t}\n\n\tbindInstances(gl: WebGLRenderingContext, mesh: WebGLMesh) {\n\t\tconst ext = gl.getExtension('ANGLE_instanced_arrays');\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, mesh.instanceBuffer);\n\t\tfor (const attributeName in this.instanceAttributes) {\n\t\t\tconst attribute = this.instanceAttributes[attributeName];\n\t\t\tif (attribute.location == null || attribute.location === -1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst stride = mesh.instanceStride;\n\t\t\tlet offset = mesh.instanceOffsets.get(attributeName);\n\t\t\tif (offset == null) {\n\t\t\t\tthrow `Unable to find instanceOffset for ${attributeName}`;\n\t\t\t}\n\t\t\t// mat4 is really 4x vec4\n\t\t\tif (attribute.size === 4 * 4) {\n\t\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\t\tconst location = attribute.location + i;\n\t\t\t\t\tgl.enableVertexAttribArray(location);\n\t\t\t\t\tgl.vertexAttribPointer(location, 4, attribute.type, false, stride, offset);\n\t\t\t\t\text.vertexAttribDivisorANGLE(location, 1);\n\t\t\t\t\toffset += 4 * 4;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tgl.enableVertexAttribArray(attribute.location);\n\t\t\t\tgl.vertexAttribPointer(attribute.location, attribute.size, attribute.type, false, stride, offset);\n\t\t\t\text.vertexAttribDivisorANGLE(attribute.location, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tunbindInstances(gl: WebGLRenderingContext) {\n\t\tconst ext = gl.getExtension('ANGLE_instanced_arrays');\n\t\tfor (const attributeName in this.instanceAttributes) {\n\t\t\tconst attribute = this.instanceAttributes[attributeName];\n\t\t\tif (attribute.location == null || attribute.location === -1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// mat4 is really 4x vec4\n\t\t\tif (attribute.size === 4 * 4) {\n\t\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\t\tconst location = attribute.location + i;\n\t\t\t\t\tgl.disableVertexAttribArray(location);\n\t\t\t\t\text.vertexAttribDivisorANGLE(location, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tsetUniform(name: string, value: boolean | number | number[] | Matrix4) {\n\t\tif (value == null) return;\n\t\tconst gl = this.gl;\n\n\t\tconst uniform = this.uniforms[name];\n\t\tif (!uniform) {\n\t\t\treturn;\n\t\t}\n\t\tswitch (uniform.type) {\n\t\t\tcase WebGLRenderingContext.BOOL:\n\t\t\t\tif (typeof value !== 'boolean') {\n\t\t\t\t\tthrow `Uniform '${name}' expected boolean but got: ${typeof value}`;\n\t\t\t\t}\n\t\t\t\tgl.uniform1i(uniform.location, value ? 1 : 0);\n\t\t\t\tbreak;\n\n\t\t\tcase WebGLRenderingContext.FLOAT:\n\t\t\t\tif (typeof value === 'number') {\n\t\t\t\t\tgl.uniform1f(uniform.location, value);\n\t\t\t\t} else if (Array.isArray(value) && typeof value[0] === 'number') {\n\t\t\t\t\tgl.uniform1fv(uniform.location, value);\n\t\t\t\t} else {\n\t\t\t\t\tthrow `Uniform '${name}' expected number but got: ${typeof value}`;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase WebGLRenderingContext.INT:\n\t\t\t\tif (typeof value === 'number') {\n\t\t\t\t\tgl.uniform1i(uniform.location, value);\n\t\t\t\t} else if (Array.isArray(value) && typeof value[0] === 'number') {\n\t\t\t\t\tgl.uniform1iv(uniform.location, value);\n\t\t\t\t} else {\n\t\t\t\t\tthrow `Uniform '${name}' expected number but got: ${typeof value}`;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase WebGLRenderingContext.FLOAT_VEC2:\n\t\t\t\tif (\n\t\t\t\t\t!Array.isArray(value) ||\n\t\t\t\t\tvalue.length !== 2 ||\n\t\t\t\t\ttypeof value[0] !== 'number' ||\n\t\t\t\t\ttypeof value[1] !== 'number'\n\t\t\t\t) {\n\t\t\t\t\tthrow `Uniform '${name}' expected an array of 2 numbers but got something else`;\n\t\t\t\t}\n\t\t\t\tgl.uniform2fv(uniform.location, value);\n\t\t\t\tbreak;\n\n\t\t\tcase WebGLRenderingContext.FLOAT_VEC3:\n\t\t\t\tif (\n\t\t\t\t\t!Array.isArray(value) ||\n\t\t\t\t\tvalue.length !== 3 ||\n\t\t\t\t\ttypeof value[0] !== 'number' ||\n\t\t\t\t\ttypeof value[1] !== 'number' ||\n\t\t\t\t\ttypeof value[2] !== 'number'\n\t\t\t\t) {\n\t\t\t\t\tthrow `Uniform '${name}' expected an array of 3 numbers but got something else`;\n\t\t\t\t}\n\t\t\t\tgl.uniform3fv(uniform.location, value);\n\t\t\t\tbreak;\n\n\t\t\tcase WebGLRenderingContext.FLOAT_VEC4:\n\t\t\t\tif (\n\t\t\t\t\t!Array.isArray(value) ||\n\t\t\t\t\tvalue.length !== 4 ||\n\t\t\t\t\ttypeof value[0] !== 'number' ||\n\t\t\t\t\ttypeof value[1] !== 'number' ||\n\t\t\t\t\ttypeof value[2] !== 'number' ||\n\t\t\t\t\ttypeof value[3] !== 'number'\n\t\t\t\t) {\n\t\t\t\t\tthrow `Uniform '${name}' expected an array of 4 numbers but got something else`;\n\t\t\t\t}\n\t\t\t\tgl.uniform4fv(uniform.location, value);\n\t\t\t\tbreak;\n\n\t\t\tcase WebGLRenderingContext.FLOAT_MAT4:\n\t\t\t\tif (!(value instanceof Matrix4)) {\n\t\t\t\t\tthrow `Uniform '${name}' expected a Matrix4 but got something else`;\n\t\t\t\t}\n\t\t\t\tgl.uniformMatrix4fv(uniform.location, false, value.toArray());\n\t\t\t\tbreak;\n\n\t\t\t// TODO other uniform types\n\t\t\tdefault:\n\t\t\t\tthrow `Unsupported uniform type: ${uniform.type}`;\n\t\t}\n\t}\n}\n","import { Matrix4 } from '../geom';\nimport { Vertex } from './vertex';\nimport { Mesh } from '../mesh';\nimport { Instance } from '../actor';\n\nconst FLOAT32_SIZE: number = 4;\n\nexport class WebGLMesh<T extends Vertex = Vertex> {\n\tbuffer: WebGLBuffer;\n\tstride: number;\n\toffsets: Map<keyof T, number> = new Map();\n\tlength: number;\n\tinstanceBuffer: WebGLBuffer;\n\tinstanceStride: number;\n\tinstanceOffsets: Map<keyof T, number> = new Map();\n\tinstanceLength: number;\n\tgl: WebGLRenderingContext;\n\n\tconstructor(gl: WebGLRenderingContext) {\n\t\tthis.gl = gl;\n\t}\n\n\tupload(mesh: Mesh<T>): Promise<void> {\n\t\tconst gl = this.gl;\n\t\tif (!this.buffer) {\n\t\t\tthis.buffer = gl.createBuffer();\n\t\t}\n\n\t\tconst vertices = mesh.vertices;\n\t\tthis.length = vertices.length;\n\t\tif (vertices.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst attributeNames = Object.keys(vertices[0]).sort();\n\n\t\t// Calculate offsets, stride, and vertex size\n\t\tlet vertexSize = 0;\n\t\tfor (const name of attributeNames) {\n\t\t\tconst attr = vertices[0][name];\n\t\t\tthis.offsets.set(name, vertexSize * FLOAT32_SIZE);\n\t\t\tif (Array.isArray(attr)) {\n\t\t\t\tvertexSize += attr.length;\n\t\t\t} else {\n\t\t\t\tvertexSize += 1;\n\t\t\t}\n\t\t}\n\t\tthis.stride = vertexSize * FLOAT32_SIZE;\n\n\t\t// Convert Array<Vertex> into Float32Array\n\t\tlet i = 0;\n\t\tconst data = new Float32Array(vertices.length * vertexSize);\n\t\tfor (const vertex of vertices) {\n\t\t\tfor (const attr of attributeNames) {\n\t\t\t\tconst value = vertex[attr];\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tfor (const num of value) {\n\t\t\t\t\t\tdata[i] = num;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdata[i] = value;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Upload data to the GPU\n\t\tthis.bind();\n\t\tgl.bufferData(gl.ARRAY_BUFFER, data, gl.DYNAMIC_DRAW);\n\t}\n\n\tuploadInstances<I extends Instance>(instances: I[]) {\n\t\tif (instances.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst gl = this.gl;\n\n\t\tconst attributeNames = Object.keys(instances[0]).sort();\n\n\t\t// Calculate offsets, stride, and instance size\n\t\tlet instanceSize = 0;\n\t\tfor (const name of attributeNames) {\n\t\t\tconst attr = instances[0][name];\n\t\t\tthis.instanceOffsets.set(name, instanceSize * FLOAT32_SIZE);\n\t\t\tif (Array.isArray(attr)) {\n\t\t\t\tinstanceSize += attr.length;\n\t\t\t} else if (attr instanceof Matrix4) {\n\t\t\t\tinstanceSize += attr.toArray().length;\n\t\t\t} else {\n\t\t\t\tinstanceSize += 1;\n\t\t\t}\n\t\t}\n\t\tthis.instanceStride = instanceSize * FLOAT32_SIZE;\n\n\t\t// Convert Array<Instance> into Float32Array\n\t\tlet i = 0;\n\t\tconst data = new Float32Array(instances.length * instanceSize);\n\t\tfor (const instance of instances) {\n\t\t\tfor (const attr of attributeNames) {\n\t\t\t\tconst value = instance[attr];\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tfor (const num of value) {\n\t\t\t\t\t\tdata[i] = num;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t} else if (value instanceof Matrix4) {\n\t\t\t\t\tfor (const num of value.toArray()) {\n\t\t\t\t\t\tdata[i] = num;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdata[i] = value;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!this.instanceBuffer) {\n\t\t\tthis.instanceBuffer = gl.createBuffer();\n\t\t}\n\n\t\tthis.instanceLength = instances.length;\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.instanceBuffer);\n\t\tgl.bufferData(gl.ARRAY_BUFFER, data, gl.DYNAMIC_DRAW);\n\t}\n\n\tbind() {\n\t\tthis.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.buffer);\n\t}\n\n\tdraw() {\n\t\tthis.gl.drawArrays(this.gl.TRIANGLES, 0, this.length);\n\t}\n\n\tdrawLines() {\n\t\tthis.gl.lineWidth(1);\n\t\tthis.gl.drawArrays(this.gl.LINE_STRIP, 0, this.length);\n\t}\n\n\tdrawInstances() {\n\t\tconst ext = this.gl.getExtension('ANGLE_instanced_arrays');\n\t\text.drawArraysInstancedANGLE(this.gl.TRIANGLES, 0, this.length, this.instanceLength);\n\t}\n}\n","export enum ScaleFilter {\n\tLINEAR,\n\tNEAREST,\n}\n\nexport interface TextureOptions {\n\tminFilter?: ScaleFilter;\n\tmagFilter?: ScaleFilter;\n}\n\nexport class Texture {\n\tpixels: ImageData | HTMLImageElement;\n\tminFilter = ScaleFilter.LINEAR;\n\tmagFilter = ScaleFilter.LINEAR;\n\n\tconstructor(imageOrURL?: HTMLImageElement | ImageData | string, options?: TextureOptions) {\n\t\tthis.putPixels(new ImageData(new Uint8ClampedArray([255, 0, 255, 255]), 1, 1));\n\t\tif (options?.minFilter) {\n\t\t\tthis.minFilter = options.minFilter;\n\t\t}\n\t\tif (options?.magFilter) {\n\t\t\tthis.magFilter = options.magFilter;\n\t\t}\n\n\t\tif (imageOrURL) {\n\t\t\tif (typeof imageOrURL === 'string') {\n\t\t\t\tconst image = new Image();\n\t\t\t\timage.src = imageOrURL;\n\t\t\t\tthis.putImage(image);\n\t\t\t} else if (imageOrURL instanceof HTMLImageElement) {\n\t\t\t\tthis.putImage(imageOrURL);\n\t\t\t} else {\n\t\t\t\tthis.putPixels(imageOrURL);\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic async fromUrl(url: string, options?: TextureOptions): Promise<Texture> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst image = new Image();\n\t\t\timage.src = url;\n\t\t\timage.addEventListener('load', () => {\n\t\t\t\tresolve(new Texture(image, options));\n\t\t\t});\n\t\t\timage.addEventListener('error', e => {\n\t\t\t\treject(e);\n\t\t\t});\n\t\t});\n\t}\n\n\tputImage(image: HTMLImageElement) {\n\t\tif (image.complete) {\n\t\t\tthis.putPixels(image);\n\t\t} else {\n\t\t\t// Image hasn't puted yet; wait for it\n\t\t\timage.addEventListener('load', () => {\n\t\t\t\tthis.putImage(image);\n\t\t\t});\n\t\t}\n\t}\n\n\tputPixels(pixels: ImageData | HTMLImageElement) {\n\t\tif (pixels instanceof HTMLImageElement && !pixels.complete) {\n\t\t\tthrow 'Attempted to use incomplete image as texture';\n\t\t}\n\n\t\tthis.pixels = pixels;\n\t}\n\n\tget data(): Uint8ClampedArray {\n\t\tif (this.pixels instanceof ImageData) {\n\t\t\treturn this.pixels.data;\n\t\t}\n\t\tthrow `Can't get data of an HTMLImageElement`;\n\t}\n\n\tget width(): number {\n\t\treturn this.pixels.width;\n\t}\n\n\tget height(): number {\n\t\treturn this.pixels.height;\n\t}\n}\n","import { Texture } from './texture';\n\nexport enum Attachment {\n\tCOLOR,\n\tDEPTH,\n}\n\nexport class RenderTexture extends Texture {\n\tsize: number;\n\tattachment: Attachment;\n\n\tconstructor(size: number, attachment: Attachment = Attachment.COLOR) {\n\t\tsuper();\n\t\tthis.attachment = attachment;\n\t\tthis.size = size;\n\t\tconst pixels = new Uint8ClampedArray(size * size * 4);\n\t\tpixels.fill(255);\n\t\tthis.putPixels(new ImageData(pixels, size));\n\t}\n}\n","import { Texture, ScaleFilter } from '../texture';\nimport { RenderTexture, Attachment } from '../render_texture';\n\nconst FILTER_MAP: { [key: string]: number } = {\n\t[ScaleFilter.LINEAR]: WebGLRenderingContext.LINEAR,\n\t[ScaleFilter.NEAREST]: WebGLRenderingContext.NEAREST,\n};\n\nexport class WebGLRendererTexture {\n\tgl: WebGLRenderingContext;\n\ttexture: WebGLTexture;\n\t// Safari requries a Color texture, even if we're only rendering to a Depth texture\n\tunusedColorTexture: WebGLTexture;\n\n\tunit: number;\n\tlevel = 0;\n\tinternalFormat = WebGLRenderingContext.RGBA;\n\tsrcFormat = WebGLRenderingContext.RGBA;\n\tsrcType = WebGLRenderingContext.UNSIGNED_BYTE;\n\tminFilter = WebGLRenderingContext.LINEAR;\n\tmagFilter = WebGLRenderingContext.LINEAR;\n\n\tstatic fromTexture(gl: WebGLRenderingContext, src: Texture) {\n\t\tconst texture = new WebGLRendererTexture(gl);\n\t\ttexture.minFilter = FILTER_MAP[src.minFilter];\n\t\ttexture.magFilter = FILTER_MAP[src.magFilter];\n\n\t\tif (src instanceof RenderTexture && src.attachment === Attachment.DEPTH) {\n\t\t\ttexture.internalFormat = gl.DEPTH_COMPONENT;\n\t\t\ttexture.srcFormat = gl.DEPTH_COMPONENT;\n\t\t\ttexture.srcType = gl.UNSIGNED_INT;\n\t\t\ttexture.unusedColorTexture = gl.createTexture();\n\t\t}\n\t\treturn texture;\n\t}\n\n\tconstructor(gl: WebGLRenderingContext) {\n\t\tthis.gl = gl;\n\t\tthis.texture = gl.createTexture();\n\t}\n\n\tupload(texture: Texture, unit: number = null) {\n\t\tconst pixels = texture instanceof RenderTexture ? null : texture.pixels;\n\n\t\tif (pixels instanceof HTMLImageElement && !pixels.complete) {\n\t\t\tthrow 'Attempted to use incomplete image as texture';\n\t\t}\n\t\tthis.unit = unit;\n\n\t\tconst gl = this.gl;\n\n\t\tif (texture instanceof RenderTexture) {\n\t\t\t// Safari requries a Color texture, even if we're only rendering to a Depth texture\n\t\t\tif (this.unusedColorTexture) {\n\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.unit);\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, this.unusedColorTexture);\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texture.size, texture.size, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, this.minFilter);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, this.magFilter);\n\t\t\t}\n\n\t\t\tthis.bind();\n\t\t\tgl.texImage2D(\n\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\tthis.level,\n\t\t\t\tthis.internalFormat,\n\t\t\t\ttexture.size,\n\t\t\t\ttexture.size,\n\t\t\t\t0,\n\t\t\t\tthis.srcFormat,\n\t\t\t\tthis.srcType,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else {\n\t\t\tthis.bind();\n\t\t\tgl.texImage2D(gl.TEXTURE_2D, this.level, this.internalFormat, this.srcFormat, this.srcType, pixels);\n\t\t}\n\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, this.minFilter);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, this.magFilter);\n\t}\n\n\tbind(): number {\n\t\tif (this.unit == null) {\n\t\t\tthrow `Cannot bind texture that hasn't been uploaded`;\n\t\t}\n\t\tconst gl = this.gl;\n\t\tgl.activeTexture(gl.TEXTURE0 + this.unit);\n\t\tgl.bindTexture(gl.TEXTURE_2D, this.texture);\n\t\treturn this.unit;\n\t}\n\n\tunbind() {\n\t\tif (this.unit == null) {\n\t\t\tthrow `Cannot unbind texture that hasn't been uploaded`;\n\t\t}\n\t\tconst gl = this.gl;\n\t\tgl.activeTexture(gl.TEXTURE0 + this.unit);\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t}\n}\n","import { WebGLRendererTexture } from './webgl_texture';\n\nexport class WebGLRenderTarget {\n\tgl: WebGLRenderingContext;\n\ttexture: WebGLRendererTexture;\n\tsize: number;\n\tframebuffer: WebGLFramebuffer;\n\trenderbuffer: WebGLRenderbuffer;\n\tattachment = WebGLRenderingContext.COLOR_ATTACHMENT0;\n\n\tconstructor(gl: WebGLRenderingContext, size: number, texture: WebGLRendererTexture) {\n\t\tthis.gl = gl;\n\t\tthis.size = size;\n\t\tthis.texture = texture;\n\t\tthis.framebuffer = gl.createFramebuffer();\n\t\tthis.renderbuffer = gl.createRenderbuffer();\n\t}\n\n\tbind() {\n\t\tconst gl = this.gl;\n\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\n\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, this.attachment, gl.TEXTURE_2D, this.texture.texture, 0);\n\n\t\tif (this.attachment == WebGLRenderingContext.DEPTH_ATTACHMENT) {\n\t\t\t// Safari requries a Color texture, even if we're only rendering to a Depth texture\n\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture.unusedColorTexture, 0);\n\t\t} else {\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, this.renderbuffer);\n\t\t\tgl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, this.size, this.size);\n\t\t\tgl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this.renderbuffer);\n\t\t}\n\t}\n\n\tunbind() {\n\t\tconst gl = this.gl;\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t}\n}\n","import { Component } from '../component';\nimport { Color } from '../material';\n\nexport interface LightOptions {\n\tambient?: Color;\n\tdiffuse?: Color;\n\tspecular?: Color;\n\n\tconstant?: number;\n\tlinear?: number;\n\tquadratic?: number;\n}\n\nexport class Light extends Component {\n\tambient: Color;\n\tdiffuse: Color;\n\tspecular: Color;\n\n\tconstant: number;\n\tlinear: number;\n\tquadratic: number;\n\n\tconstructor(options: LightOptions = {}) {\n\t\tsuper();\n\n\t\tif (options.ambient) {\n\t\t\tthis.ambient = options.ambient;\n\t\t}\n\t\tif (options.diffuse) {\n\t\t\tthis.diffuse = options.diffuse;\n\t\t}\n\t\tif (options.specular) {\n\t\t\tthis.specular = options.specular;\n\t\t}\n\t\tif (options.constant) {\n\t\t\tthis.constant = options.constant;\n\t\t}\n\t\tif (options.linear) {\n\t\t\tthis.linear = options.linear;\n\t\t}\n\t\tif (options.quadratic) {\n\t\t\tthis.quadratic = options.quadratic;\n\t\t}\n\t}\n}\n","import { Renderer } from './renderer';\nimport { Shader, ShaderOptions } from '../shader';\nimport { Vertex } from './vertex';\nimport { Actor, Instance } from '../actor';\nimport { Matrix4 } from '../geom';\nimport { Mesh } from '../mesh';\nimport { Scene } from '../scene';\nimport { Texture } from '../texture';\nimport { UniformValues } from '../shader';\nimport { WebGLMesh } from './webgl_mesh';\nimport { WebGLRendererTexture } from './webgl_texture';\nimport { WebGLRenderTarget } from './webgl_render_target';\nimport { StaticMesh } from '../components/static_mesh';\nimport { Light } from '../components/light';\nimport { RenderTexture, Attachment } from '../render_texture';\nimport defaultVertSource from '../shaders/wireframe.vert.glsl';\nimport defaultFragSource from '../shaders/wireframe.frag.glsl';\n\nconst DEBUG_ENABLED = !PRODUCTION || window.location.search.indexOf('debug') !== -1;\n\ntype ExtWheelEvent = WheelEvent & { wheelDelta: number; axis: number; HORIZONTAL_AXIS: 0x01; VERTICAL_AXIS: 0x02 };\n\nexport class WebGLRenderer extends Renderer {\n\tcanvas: HTMLCanvasElement;\n\tdebugEl: HTMLElement;\n\tdefaultShader: Shader;\n\tscale = 1.0 * window.devicePixelRatio;\n\tlineWidth = 2 * window.devicePixelRatio;\n\tantiAlias = true;\n\tvsync = true;\n\tlastFrameAt = 0;\n\tframeAverage = 0;\n\tframe = 0;\n\tisGrabbed = false;\n\tseed = Math.random();\n\tprivate dragDelta = [0, 0];\n\tprivate context: WebGLRenderingContext;\n\tprivate textures: Map<Texture, WebGLRendererTexture> = new Map();\n\tprivate meshes: Map<Mesh<Vertex>, WebGLMesh<Vertex>> = new Map();\n\tprivate renderTargets: Map<RenderTexture, WebGLRenderTarget> = new Map();\n\n\tconstructor(el: HTMLElement) {\n\t\tsuper();\n\t\tif (el instanceof HTMLCanvasElement) {\n\t\t\tthis.canvas = el;\n\t\t} else {\n\t\t\tthis.canvas = document.createElement('canvas');\n\t\t\tif (el instanceof HTMLElement) {\n\t\t\t\tthis.attach(el);\n\t\t\t}\n\t\t}\n\n\t\tObject.assign(this.canvas.style, {\n\t\t\tposition: 'fixed',\n\t\t\tleft: 0,\n\t\t\tright: 0,\n\t\t\ttop: 0,\n\t\t\tbottom: 0,\n\t\t});\n\t}\n\n\tget isDragging(): boolean {\n\t\tif (Math.abs(this.dragDelta[0]) > 4 || Math.abs(this.dragDelta[1]) > 4) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * The canvas's parent element\n\t */\n\tget parentElement(): HTMLCanvasElement['parentElement'] {\n\t\treturn this.canvas.parentElement;\n\t}\n\n\t/**\n\t * The WebGL drawing context\n\t */\n\tget gl(): WebGLRenderingContext {\n\t\tif (this.context) {\n\t\t\treturn this.context;\n\t\t}\n\n\t\tconst options = {\n\t\t\tantialias: this.antiAlias,\n\t\t};\n\n\t\tthis.context = this.canvas.getContext('webgl', options) as WebGLRenderingContext;\n\t\tif (!this.context) {\n\t\t\tthis.parentElement.innerHTML = 'Failed to create a WebGL context';\n\t\t\tthrow 'Failed to create WebGL context';\n\t\t}\n\n\t\treturn this.context;\n\t}\n\n\tget width(): number {\n\t\treturn this.canvas.clientWidth;\n\t}\n\n\tget height(): number {\n\t\treturn this.canvas.clientHeight;\n\t}\n\n\t/**\n\t * Creates the WebGL buffers, compiles the shaders, etc.\n\t */\n\tprivate initWebGL() {\n\t\tconst gl = this.gl;\n\n\t\tgl.enable(gl.DEPTH_TEST);\n\t\tgl.enable(gl.BLEND);\n\t\tgl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\t\tthis.defaultShader = this.createShader(defaultVertSource, defaultFragSource);\n\t}\n\n\tgrab(lock: boolean = false) {\n\t\tif (lock) {\n\t\t\tthis.canvas.requestPointerLock();\n\t\t}\n\t\tthis.isGrabbed = true;\n\t\tthis.addEventListeners();\n\t}\n\n\trelease() {\n\t\tthis.isGrabbed = false;\n\t\tdocument.exitPointerLock();\n\t\tthis.removeEventListeners();\n\t}\n\n\tprivate addEventListeners() {\n\t\tdocument.addEventListener('pointerlockchange', this.onPointerLockChange);\n\t\twindow.addEventListener('keydown', this.onKeyDown);\n\t\twindow.addEventListener('keyup', this.onKeyUp);\n\t\twindow.addEventListener('mousemove', this.onMouseMove);\n\t\twindow.addEventListener('mouseup', this.onMouseUp);\n\t\twindow.addEventListener('mousedown', this.onMouseDown);\n\t\twindow.addEventListener('wheel', this.onWheel, { passive: false });\n\t\twindow.addEventListener('DOMMouseScroll', this.onWheel, { passive: false });\n\t}\n\n\tprivate removeEventListeners() {\n\t\tthis.heldKeys.clear();\n\t\tdocument.removeEventListener('pointerlockchange', this.onPointerLockChange);\n\t\twindow.removeEventListener('keydown', this.onKeyDown);\n\t\twindow.removeEventListener('keyup', this.onKeyUp);\n\t\twindow.removeEventListener('mousemove', this.onMouseMove);\n\t\twindow.removeEventListener('mouseup', this.onMouseUp);\n\t\twindow.removeEventListener('mousedown', this.onMouseDown);\n\t\twindow.removeEventListener('wheel', this.onWheel);\n\t\twindow.removeEventListener('DOMMouseScroll', this.onWheel);\n\t}\n\n\tonPointerLockChange = () => {\n\t\tif (!this.isGrabbed) {\n\t\t\tthis.removeEventListeners();\n\t\t}\n\t};\n\n\tonKeyDown = (e: KeyboardEvent) => {\n\t\tthis.heldKeys.add(e.key.toLowerCase());\n\t};\n\n\tonKeyUp = (e: KeyboardEvent) => {\n\t\tthis.heldKeys.delete(e.key.toLowerCase());\n\t};\n\n\tonMouseDown = (e: MouseEvent) => {\n\t\tthis.dragDelta[0] = 0;\n\t\tthis.dragDelta[1] = 0;\n\t\tthis.mouseButtons.add(e.button);\n\t};\n\n\tonMouseUp = (e: MouseEvent) => {\n\t\tsetTimeout(() => {\n\t\t\tthis.dragDelta[0] = 0;\n\t\t\tthis.dragDelta[1] = 0;\n\t\t}, 1);\n\t\tthis.mouseButtons.delete(e.button);\n\t};\n\n\tonMouseMove = (e: MouseEvent) => {\n\t\tif (this.mouseButtons.size > 0) {\n\t\t\tthis.dragDelta[0] += e.movementX;\n\t\t\tthis.dragDelta[1] += e.movementY;\n\t\t}\n\t\tthis.mousePosition[0] = e.clientX;\n\t\tthis.mousePosition[1] = e.clientY;\n\t\tthis.mouseMovement[0] += e.movementX;\n\t\tthis.mouseMovement[1] += e.movementY;\n\t};\n\n\tonWheel = (e: ExtWheelEvent) => {\n\t\t// Ignore Firefox 'onwheel'\n\t\tif (!e.axis && !e.wheelDelta) return;\n\t\te.preventDefault();\n\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\tif (!e.wheelDelta && e.detail) {\n\t\t\t// Firefox (DOMMouseScroll)\n\t\t\tconst amount = (e.detail * 53) / 3;\n\t\t\tif (e.axis === e.HORIZONTAL_AXIS) {\n\t\t\t\tdx = amount;\n\t\t\t} else {\n\t\t\t\tdy = amount;\n\t\t\t}\n\t\t} else {\n\t\t\t// Proper wheel event\n\t\t\tdx = e.deltaX;\n\t\t\tdy = e.deltaY;\n\t\t}\n\n\t\tthis.wheelMovement[0] += dx;\n\t\tthis.wheelMovement[1] += dy;\n\t};\n\n\tclear() {\n\t\tconst gl = this.gl;\n\t\tgl.clearDepth(1.0);\n\t\tgl.clearColor(...this.backgroundColor);\n\t\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\t}\n\n\tdrawActorWithShader(shader: Shader, actor: Actor, projection?: Matrix4, options: { parentModel?: Matrix4 } = {}) {\n\t\tif (!actor.visible) return;\n\t\tconst { model, material, children } = actor;\n\t\tconst { parentModel } = options;\n\n\t\tconst actorModel = parentModel ? parentModel.multiply(model) : model;\n\n\t\tif (material) {\n\t\t\tactor.uniforms['uMaterial.color'] = material.color.length === 3 ? [...material.color, 1.0] : material.color;\n\t\t\tactor.uniforms['uFillColor'] = actor.uniforms['uMaterial.color'];\n\t\t\tactor.uniforms['uMaterial.hasTexture'] = !!material.texture;\n\t\t\tactor.uniforms['uMaterial.hasNormalMap'] = !!material.normalMap;\n\t\t\tactor.uniforms['uMaterial.hasSpecularMap'] = !!material.specularMap;\n\t\t\tactor.uniforms['uMaterial.hasDisplacementMap'] = !!material.displacementMap;\n\t\t\tactor.uniforms['uMaterial.castsShadows'] = material.castsShadows;\n\t\t\tactor.uniforms['uMaterial.receivesShadows'] = material.receivesShadows;\n\t\t\tactor.uniforms['uMaterial.emissive'] = material.emissive;\n\t\t\tactor.uniforms['uMaterial.displacementMultiplier'] = material.displacementMultiplier;\n\t\t\tif (material.texture) {\n\t\t\t\tactor.uniforms['uMaterial.texture'] = this.bindTexture(material.texture);\n\t\t\t}\n\t\t\tif (material.normalMap) {\n\t\t\t\tactor.uniforms['uMaterial.normalMap'] = this.bindTexture(material.normalMap);\n\t\t\t}\n\t\t\tif (material.specularMap) {\n\t\t\t\tactor.uniforms['uMaterial.specularMap'] = this.bindTexture(material.specularMap);\n\t\t\t}\n\t\t\tif (material.displacementMap) {\n\t\t\t\tactor.uniforms['uMaterial.displacementMap'] = this.bindTexture(material.displacementMap);\n\t\t\t}\n\t\t}\n\n\t\tif (projection) {\n\t\t\tshader.setUniform('uViewProj', projection);\n\t\t}\n\t\tshader.setUniform('uModel', actorModel);\n\n\t\tfor (const uniformName in actor.uniforms) {\n\t\t\tshader.setUniform(uniformName, actor.uniforms[uniformName]);\n\t\t}\n\n\t\t// Find mesh to draw\n\t\tconst mesh = actor.getComponentsOfType(StaticMesh)[0]?.mesh;\n\t\tif (mesh) {\n\t\t\tlet glMesh = this.meshes.get(mesh);\n\t\t\tif (!glMesh) {\n\t\t\t\tthis.uploadMesh(mesh);\n\t\t\t\tglMesh = this.meshes.get(mesh);\n\t\t\t}\n\n\t\t\tshader.bind(glMesh);\n\t\t\tif (actor.hasInstances) {\n\t\t\t\tshader.bindInstances(this.gl, glMesh);\n\t\t\t\tglMesh.drawInstances();\n\t\t\t} else if (material.wireframe) {\n\t\t\t\tglMesh.drawLines();\n\t\t\t} else {\n\t\t\t\tglMesh.draw();\n\t\t\t}\n\t\t}\n\n\t\t// Draw children\n\t\tfor (const child of children) {\n\t\t\tthis.drawActorWithShader(shader, child, projection, { ...options, parentModel: actorModel });\n\t\t}\n\t}\n\n\tdrawActor(actor: Actor, projection?: Matrix4, options: { parentModel?: Matrix4; uniforms?: UniformValues } = {}) {\n\t\tif (!actor.visible) return;\n\t\tconst { model, material, children } = actor;\n\t\tconst { parentModel } = options;\n\t\tconst actorModel = parentModel ? parentModel.multiply(model) : model;\n\n\t\tif (material) {\n\t\t\tactor.uniforms['uMaterial.color'] = material.color.length === 3 ? [...material.color, 1.0] : material.color;\n\t\t\tactor.uniforms['uMaterial.hasTexture'] = !!material.texture;\n\t\t\tactor.uniforms['uMaterial.hasNormalMap'] = !!material.normalMap;\n\t\t\tactor.uniforms['uMaterial.hasSpecularMap'] = !!material.specularMap;\n\t\t\tactor.uniforms['uMaterial.hasDisplacementMap'] = !!material.displacementMap;\n\t\t\tactor.uniforms['uMaterial.castsShadows'] = material.castsShadows;\n\t\t\tactor.uniforms['uMaterial.receivesShadows'] = material.receivesShadows;\n\t\t\tactor.uniforms['uMaterial.emissive'] = material.emissive;\n\t\t\tactor.uniforms['uMaterial.displacementMultiplier'] = material.displacementMultiplier;\n\t\t\tif (material.texture) {\n\t\t\t\tactor.uniforms['uMaterial.texture'] = this.bindTexture(material.texture);\n\t\t\t}\n\t\t\tif (material.normalMap) {\n\t\t\t\tactor.uniforms['uMaterial.normalMap'] = this.bindTexture(material.normalMap);\n\t\t\t}\n\t\t\tif (material.specularMap) {\n\t\t\t\tactor.uniforms['uMaterial.specularMap'] = this.bindTexture(material.specularMap);\n\t\t\t}\n\t\t\tif (material.displacementMap) {\n\t\t\t\tactor.uniforms['uMaterial.displacementMap'] = this.bindTexture(material.displacementMap);\n\t\t\t}\n\t\t}\n\n\t\t// TODO support multiple meshes on one actor?\n\t\tconst mesh = actor.getComponentsOfType(StaticMesh)[0]?.mesh;\n\n\t\tif (actor.shader && !actor.shader.compiled) {\n\t\t\tactor.shader.make(this.gl);\n\t\t}\n\n\t\t// FIXME reuse this\n\t\tconst view = this.camera.view.inverse();\n\n\t\tif (mesh instanceof Mesh) {\n\t\t\tconst gl = this.gl;\n\t\t\tconst shader = actor.shader || this.defaultShader;\n\t\t\tconst uniforms = shader.uniforms;\n\t\t\tshader.use();\n\n\t\t\tlet glMesh = this.meshes.get(mesh);\n\t\t\tif (!glMesh) {\n\t\t\t\tthis.uploadMesh(mesh);\n\t\t\t\tglMesh = this.meshes.get(mesh);\n\t\t\t}\n\n\t\t\t// FIXME deprecate all this\n\t\t\tif (projection) {\n\t\t\t\tgl.uniformMatrix4fv(uniforms.uViewProj.location, false, projection.toArray());\n\t\t\t}\n\t\t\tgl.uniformMatrix4fv(uniforms.uView.location, false, view.toArray());\n\t\t\tgl.uniform4fv(uniforms.uFogColor.location, this.backgroundColor);\n\t\t\tgl.uniform1f(uniforms.uLineWidth.location, this.lineWidth);\n\t\t\tgl.uniform1f(uniforms.uTime.location, performance.now());\n\t\t\tgl.uniform2fv(uniforms.uResolution.location, [this.camera.width, this.camera.height]);\n\t\t\tgl.uniform1f(uniforms.uSeed.location, this.seed);\n\t\t\tgl.uniformMatrix4fv(uniforms.uModel.location, false, actorModel.toArray());\n\t\t\tif (material?.color) {\n\t\t\t\tgl.uniform4fv(uniforms.uFillColor.location, actor.uniforms['uMaterial.color'] as number[]);\n\t\t\t}\n\n\t\t\tif (options?.uniforms) {\n\t\t\t\tfor (const uniformName in options.uniforms) {\n\t\t\t\t\tif (shader.uniforms[uniformName]) {\n\t\t\t\t\t\tshader.setUniform(uniformName, options.uniforms[uniformName]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const uniformName in actor.uniforms) {\n\t\t\t\tshader.setUniform(uniformName, actor.uniforms[uniformName]);\n\t\t\t}\n\n\t\t\tshader.bind(glMesh);\n\t\t\tif (actor.hasInstances) {\n\t\t\t\tshader.bindInstances(gl, glMesh);\n\t\t\t\tglMesh.drawInstances();\n\t\t\t} else {\n\t\t\t\tglMesh.draw();\n\t\t\t}\n\t\t}\n\n\t\tfor (const child of children) {\n\t\t\tthis.drawActor(child, projection, { ...options, parentModel: actorModel });\n\t\t}\n\t}\n\n\tuploadMesh(mesh: Mesh) {\n\t\tconst gl = this.gl;\n\n\t\t// Link a Mesh with its WebGLMesh\n\t\tlet glMesh = this.meshes.get(mesh);\n\t\tif (!glMesh) {\n\t\t\tglMesh = new WebGLMesh(gl);\n\t\t\tthis.meshes.set(mesh, glMesh);\n\t\t}\n\t\tglMesh.upload(mesh);\n\t}\n\n\tuploadMeshInstances<I extends Instance = Instance>(mesh: Mesh, instances: I[]) {\n\t\tconst gl = this.gl;\n\n\t\t// Link a Mesh with its WebGLMesh\n\t\tlet glMesh = this.meshes.get(mesh);\n\t\tif (!glMesh) {\n\t\t\tglMesh = new WebGLMesh(gl);\n\t\t\tthis.meshes.set(mesh, glMesh);\n\t\t\tglMesh.upload(mesh);\n\t\t}\n\t\tglMesh.uploadInstances(instances);\n\t}\n\n\tremoveMesh(mesh: Mesh<Vertex>) {\n\t\tconst glMesh = this.meshes.get(mesh);\n\t\tif (!glMesh) return;\n\t\tthrow 'not yet implemented';\n\t}\n\n\tuploadTexture(texture: Texture, unit: number = null): number {\n\t\tconst gl = this.gl;\n\n\t\t// Link a Texture with its WebGLRendererTexture\n\t\tlet glTexture = this.textures.get(texture);\n\t\tif (!glTexture) {\n\t\t\tglTexture = WebGLRendererTexture.fromTexture(gl, texture);\n\t\t\tthis.textures.set(texture, glTexture);\n\t\t}\n\t\tif (unit == null && glTexture.unit == null) {\n\t\t\tunit = this.textures.size - 1;\n\t\t}\n\t\tglTexture.upload(texture, unit != null ? unit : glTexture.unit);\n\n\t\treturn unit;\n\t}\n\n\tbindTexture(texture: Texture): number {\n\t\tlet glTexture = this.textures.get(texture);\n\t\tif (!glTexture) {\n\t\t\tthis.uploadTexture(texture);\n\t\t\tglTexture = this.textures.get(texture);\n\t\t}\n\t\treturn glTexture.bind();\n\t}\n\n\tunbindTexture(texture: Texture) {\n\t\tlet glTexture = this.textures.get(texture);\n\t\tif (!glTexture) {\n\t\t\treturn;\n\t\t}\n\t\tglTexture.unbind();\n\t}\n\n\tcreateShader(vertSource: string, fragSource: string, options?: ShaderOptions): Shader {\n\t\treturn new Shader(this.gl, vertSource, fragSource, options);\n\t}\n\n\t/**\n\t * Wait for next animation frame and redraw everything\n\t */\n\tasync drawScene(scene: Scene, target?: RenderTexture): Promise<number> {\n\t\treturn new Promise(resolve => {\n\t\t\tconst draw = () => {\n\t\t\t\tconst now = performance.now();\n\t\t\t\tconst dt = (now - this.lastFrameAt) / 1000.0;\n\t\t\t\tthis.drawSync(scene, target);\n\n\t\t\t\tthis.frame++;\n\t\t\t\tif (DEBUG_ENABLED && this.frame % 60 === 0) {\n\t\t\t\t\tconst frameRate = (performance.now() - this.frameAverage) / 60;\n\t\t\t\t\tthis.frameAverage = performance.now();\n\t\t\t\t\tconst fps = (1 / (frameRate / 1000)) | 0;\n\t\t\t\t\tthis.debugEl.innerHTML = `${fps} fps`;\n\t\t\t\t}\n\n\t\t\t\tresolve(dt);\n\t\t\t};\n\n\t\t\tif (target) {\n\t\t\t\tthis.drawSync(scene, target);\n\t\t\t\tresolve(0);\n\t\t\t} else if (this.vsync) {\n\t\t\t\twindow.requestAnimationFrame(draw);\n\t\t\t} else {\n\t\t\t\tsetTimeout(draw, 0);\n\t\t\t}\n\t\t});\n\t}\n\n\tdrawSync(scene: Scene, texture?: RenderTexture) {\n\t\t// Drawing to a texture\n\t\tlet target;\n\t\tif (texture) {\n\t\t\ttarget = this.renderTargets.get(texture);\n\t\t\tif (!target) {\n\t\t\t\tthis.uploadTexture(texture);\n\t\t\t\tconst glTexture = this.textures.get(texture);\n\t\t\t\ttarget = new WebGLRenderTarget(this.gl, texture.size, glTexture);\n\t\t\t\tif (texture.attachment === Attachment.DEPTH) {\n\t\t\t\t\ttarget.attachment = this.gl.DEPTH_ATTACHMENT;\n\t\t\t\t}\n\n\t\t\t\tthis.renderTargets.set(texture, target);\n\t\t\t}\n\n\t\t\t// Resize to match size of texture\n\t\t\tthis.updateSize(texture.size, texture.size);\n\t\t\ttarget.bind();\n\t\t}\n\n\t\tthis.backgroundColor = [...scene.backgroundColor];\n\t\tconst now = performance.now();\n\t\tthis.lastFrameAt = now;\n\n\t\tthis.gl.viewport(0, 0, this.camera.width, this.camera.height);\n\t\tthis.clear();\n\n\t\t// Uniforms\n\t\tconst proj = this.camera.projection.clone();\n\t\tconst view = this.camera.view.inverse();\n\t\tconst viewProj = proj.multiply(view);\n\n\t\t// Batch shaders together\n\t\tconst shaderMap = new Map<Shader, Actor[]>();\n\t\tfor (const actor of scene.actors) {\n\t\t\tconst shader = actor.shader;\n\t\t\tif (!shader) continue;\n\t\t\tif (!shaderMap.get(shader)) {\n\t\t\t\tshaderMap.set(shader, []);\n\t\t\t}\n\t\t\tshaderMap.get(shader).push(actor);\n\t\t}\n\n\t\tfor (const shader of shaderMap.keys()) {\n\t\t\tif (!shader.compiled) {\n\t\t\t\tshader.make(this.gl);\n\t\t\t}\n\t\t\tshader.use();\n\n\t\t\t// Various global uniforms\n\t\t\tshader.setUniform('uView', view);\n\t\t\tshader.setUniform('uFogColor', this.backgroundColor);\n\t\t\tshader.setUniform('uLineWidth', this.lineWidth);\n\t\t\tshader.setUniform('uTime', performance.now());\n\t\t\tshader.setUniform('uResolution', [this.camera.width, this.camera.height]);\n\t\t\tshader.setUniform('uSeed', this.seed);\n\n\t\t\t// Scene defined uniforms\n\t\t\tfor (const uniformName in scene.uniforms) {\n\t\t\t\tshader.setUniform(uniformName, scene.uniforms[uniformName]);\n\t\t\t}\n\n\t\t\t// Lights\n\t\t\tconst lightCount = scene.lights.length;\n\t\t\tshader.setUniform('uLightCount', lightCount);\n\t\t\tfor (let i = 0; i < lightCount; i++) {\n\t\t\t\tconst position = scene.lights[i].position;\n\t\t\t\tconst light = scene.lights[i].getComponentsOfType(Light)[0] as Light;\n\t\t\t\tshader.setUniform(`uLights[${i}].position`, position);\n\t\t\t\tshader.setUniform(`uLights[${i}].diffuse`, light.diffuse);\n\t\t\t\tshader.setUniform(`uLights[${i}].ambient`, light.ambient);\n\t\t\t}\n\n\t\t\t// Draw actors with this shader\n\t\t\tfor (const actor of shaderMap.get(shader)) {\n\t\t\t\tthis.drawActorWithShader(shader, actor, viewProj);\n\t\t\t}\n\t\t}\n\n\t\t// Cleanup after drawing to texture\n\t\tif (texture) {\n\t\t\ttarget.unbind();\n\t\t\t// FIXME depth attachment check is so we don't resize the light (which is assigned to this.camera)\n\t\t\tif (texture.attachment != Attachment.DEPTH) {\n\t\t\t\tthis.updateSize();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Update the framebuffer of the canvas to match its container's size\n\t */\n\tupdateSize(width?: number, height?: number) {\n\t\tif (!this.parentElement) {\n\t\t\treturn;\n\t\t}\n\t\tconst parentWidth = (this.parentElement.clientWidth * this.scale) | 0;\n\t\tconst parentHeight = (this.parentElement.clientHeight * this.scale) | 0;\n\t\twidth = width != null ? width : parentWidth;\n\t\theight = height != null ? height : parentHeight;\n\t\tthis.camera.resize(width, height);\n\n\t\tthis.canvas.style.imageRendering = 'crisp-edges'; // Firefox\n\t\tthis.canvas.style.imageRendering = 'pixelated'; // Webkit\n\t\tthis.canvas.style.width = this.parentElement.clientWidth + 'px';\n\t\tthis.canvas.style.height = this.parentElement.clientHeight + 'px';\n\t\tthis.canvas.setAttribute('width', parentWidth.toString());\n\t\tthis.canvas.setAttribute('height', parentHeight.toString());\n\t}\n\n\taddEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: AddEventListenerOptions) {\n\t\tif (!this.canvas) return;\n\t\tthis.canvas.addEventListener(type, listener, options);\n\t}\n\n\tremoveEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: EventListenerOptions) {\n\t\tif (!this.canvas) return;\n\t\tthis.canvas.removeEventListener(type, listener, options);\n\t}\n\n\t/**\n\t * Insert the canvas into a HTMLElement\n\t */\n\tattach(el: HTMLElement = null) {\n\t\tel?.appendChild(this.canvas);\n\t\twindow.addEventListener('resize', this.updateSize.bind(this, null, null));\n\t\tthis.updateSize();\n\t\tthis.initWebGL();\n\t\tthis.addEventListeners();\n\n\t\tif (DEBUG_ENABLED) {\n\t\t\tthis.debugEl = document.createElement('div');\n\t\t\tthis.canvas.parentElement?.appendChild(this.debugEl);\n\t\t\tObject.assign(this.debugEl.style, {\n\t\t\t\tposition: 'fixed',\n\t\t\t\tborderRadius: '12px',\n\t\t\t\tzIndex: 10,\n\t\t\t\tright: '10px',\n\t\t\t\ttop: '10px',\n\t\t\t\tcolor: 'red',\n\t\t\t\tfontSize: '32px',\n\t\t\t\tbackground: 'rgba(0, 0, 0, 0.5)',\n\t\t\t\tpadding: '10px',\n\t\t\t});\n\t\t}\n\t}\n}\n","export default \"#define GLSLIFY 1\\nuniform mat4 uViewProj;\\nuniform mat4 uModel;\\nuniform vec4 uFogColor;\\nuniform float uLineWidth;\\n\\nattribute vec3 position;\\nattribute vec3 barycentric;\\nattribute vec4 color;\\n\\nvarying vec4 vFogColor;\\nvarying float vFogDepth;\\nvarying vec3 vBarycentric;\\nvarying float vLineWidth;\\nvarying vec4 vColor;\\n\\nfloat fog_dist = 1000.0;\\n\\nvoid main(void) {\\n\\tmat4 mvp = uModel * uViewProj;\\n\\n\\tgl_Position = vec4(position, 1.0) * mvp;\\n\\tvFogDepth = max(0.0, min(1.0, gl_Position.z / fog_dist));\\n\\tvFogColor = uFogColor;\\n\\tvLineWidth = uLineWidth;\\n\\n\\tvColor = color;\\n\\tvBarycentric = barycentric;\\n}\\n\";","export default \"precision mediump float;\\n\\nvarying vec4 vFogColor;\\nvarying float vFogDepth;\\nvarying vec3 vBarycentric;\\nvarying float vLineWidth;\\nvarying vec4 vColor;\\n\\n#extension GL_OES_standard_derivatives : enable\\n#define GLSLIFY 1\\n\\nfloat edgeDistance(vec3 barycentric) {\\n\\tvec3 d = fwidth(barycentric);\\n\\tvec3 a = smoothstep(vec3(0.0), d * 2.0, barycentric);\\n\\treturn min(min(a.x, a.y), a.z);\\n}\\n\\nvoid main(void) {\\n\\tvec4 lineColor = vColor;\\n\\tvec4 faceColor = vec4(0.0, 0.0, 0.0, vColor.a);\\n\\tvec4 color;\\n\\tfloat d = edgeDistance(vBarycentric);\\n\\tif (d < 1.0) {\\n\\t\\tcolor = mix(lineColor, faceColor, d);\\n\\t}\\n\\telse {\\n\\t\\tcolor = faceColor;\\n\\t}\\n\\n\\tgl_FragColor = mix(color, vFogColor, vFogDepth);\\n}\\n\";","import { Actor, ActorInstance } from './actor';\nimport { Texture } from './texture';\nimport { Renderer } from './renderer';\nimport { Color } from './material';\nimport { StaticMesh } from './components/static_mesh';\nimport { Light as LightComponent } from './components/light';\nimport { UniformValues } from './shader';\nimport { RenderTexture, Attachment } from './render_texture';\nimport { Light } from './light';\nimport { normalize } from './geom';\n\nexport class Scene {\n\tactors: Actor[] = [];\n\ttextures: Map<number, Texture> = new Map();\n\trenderer: Renderer;\n\tbackgroundColor: Color = [0.0, 0.0, 0.0, 1.0];\n\tshadowMap: RenderTexture;\n\tlight: Light;\n\tlights: Actor[] = [];\n\tcastShadows: false;\n\tuniforms?: UniformValues = {\n\t\tuShadowMap: null,\n\t\tuLight: null,\n\t\tuLightDir: null,\n\t};\n\n\tconstructor(renderer: Renderer) {\n\t\tthis.renderer = renderer;\n\t}\n\n\taddActor(actor: Actor): number {\n\t\tconst { children } = actor;\n\n\t\tconst uploadActor = (actor: Actor) => {\n\t\t\t// Keep track of lights\n\t\t\tif (actor.hasComponentOfType(LightComponent)) {\n\t\t\t\tthis.lights.push(actor);\n\t\t\t}\n\n\t\t\t// Upload the mesh\n\t\t\tfor (const component of actor.getComponentsOfType(StaticMesh)) {\n\t\t\t\tthis.renderer.uploadMesh(component.mesh);\n\t\t\t}\n\n\t\t\t// Upload textures\n\t\t\tif (actor.material?.texture) {\n\t\t\t\tthis.addTexture(actor.material.texture);\n\t\t\t}\n\t\t\tif (actor.material?.normalMap) {\n\t\t\t\tthis.addTexture(actor.material.normalMap);\n\t\t\t}\n\t\t\tif (actor.material?.specularMap) {\n\t\t\t\tthis.addTexture(actor.material.specularMap);\n\t\t\t}\n\t\t\tif (actor.material?.displacementMap) {\n\t\t\t\tthis.addTexture(actor.material.displacementMap);\n\t\t\t}\n\n\t\t\tthis.uploadActorInstances(actor);\n\t\t};\n\n\t\tuploadActor(actor);\n\n\t\tfor (const child of children) {\n\t\t\tuploadActor(child);\n\t\t}\n\n\t\tthis.actors.push(actor);\n\t\treturn this.actors.length - 1;\n\t}\n\n\tuploadActorInstances(actor: Actor) {\n\t\tconst { hasInstances } = actor;\n\t\tif (!hasInstances) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst data = Array.from(actor.instances.values()).map((i: ActorInstance) => i.data);\n\n\t\tfor (const component of actor.getComponentsOfType(StaticMesh)) {\n\t\t\tthis.renderer.uploadMeshInstances(component.mesh, data);\n\t\t}\n\t}\n\n\taddTexture(texture: Texture): number {\n\t\tconst id = this.renderer.uploadTexture(texture);\n\t\tthis.textures.set(id, texture);\n\t\treturn id;\n\t}\n\n\tgetIdOfTexture(texture: Texture): number | null {\n\t\tfor (let [id, value] of this.textures.entries()) {\n\t\t\tif (value === texture) return id;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tupdateTexture(textureOrId: Texture | number) {\n\t\tif (typeof textureOrId === 'number') {\n\t\t\tconst texture = this.textures.get(textureOrId);\n\t\t\tif (!texture) {\n\t\t\t\tthrow `Unable to find texture ${textureOrId}`;\n\t\t\t}\n\t\t\tthis.renderer.uploadTexture(texture, textureOrId);\n\t\t} else {\n\t\t\tconst id = this.getIdOfTexture(textureOrId);\n\t\t\tif (id == null) {\n\t\t\t\tthrow `Attempted to upload an unknown texture`;\n\t\t\t}\n\t\t\tthis.renderer.uploadTexture(textureOrId, id);\n\t\t}\n\t}\n\n\tbindTexture(textureOrId: Texture | number): number {\n\t\tconst texture = typeof textureOrId === 'number' ? this.textures.get(textureOrId) : textureOrId;\n\t\tif (!texture) {\n\t\t\tthrow `Unable to find texture`;\n\t\t}\n\t\treturn this.renderer.bindTexture(texture);\n\t}\n\n\tunbindTexture(textureOrId: Texture | number) {\n\t\tconst texture = typeof textureOrId === 'number' ? this.textures.get(textureOrId) : textureOrId;\n\t\tif (!texture) {\n\t\t\tthrow `Unable to find texture`;\n\t\t}\n\t\tthis.renderer.unbindTexture(texture);\n\t}\n\n\tasync draw(): Promise<number> {\n\t\tif (this.castShadows) {\n\t\t\tthis.updateShadowMap();\n\t\t}\n\t\tthis.updateLightView();\n\t\treturn await this.renderer.drawScene(this);\n\t}\n\n\tprotected createShadowMap() {\n\t\tconst gl = (this.renderer as any).gl as WebGLRenderingContext;\n\n\t\tconst ext = gl.getExtension('WEBGL_depth_texture');\n\t\tif (!ext) {\n\t\t\tthrow `WEBGL_depth_texture extension is not supported`;\n\t\t}\n\n\t\tthis.shadowMap = new RenderTexture(1024, Attachment.DEPTH);\n\t}\n\n\tprotected updateShadowMap() {\n\t\tif (!this.light) return;\n\t\tif (!this.shadowMap) this.createShadowMap();\n\n\t\tconst hiddenActors = [];\n\t\tfor (const actor of this.actors) {\n\t\t\tif (actor.visible && actor.material && !actor.material.castsShadows) {\n\t\t\t\tactor.visible = false;\n\t\t\t\thiddenActors.push(actor);\n\t\t\t}\n\t\t}\n\t\tthis.disableShadows();\n\t\tconst oldCamera = this.renderer.camera;\n\t\tthis.renderer.camera = this.light;\n\t\tthis.renderer.drawScene(this, this.shadowMap);\n\t\tthis.renderer.camera = oldCamera;\n\t\tthis.enableShadows();\n\t\tfor (const actor of hiddenActors) {\n\t\t\tactor.visible = true;\n\t\t}\n\t}\n\n\tprotected updateLightView() {\n\t\tif (!this.light) return;\n\t\tconst proj = this.light.projection.clone();\n\t\tconst view = this.light.view.inverse();\n\t\tconst viewProj = proj.multiply(view);\n\t\tconst forward = this.light.view.multiplyVector4([0.0, 0.0, 1.0, 0.0]);\n\t\tconst lightDir = normalize([forward[0], forward[1], forward[2]]);\n\n\t\tthis.uniforms.uLightDir = lightDir;\n\t\tthis.uniforms.uLight = viewProj;\n\t}\n\n\tprivate enableShadows() {\n\t\tthis.uniforms.uShadowMap = this.bindTexture(this.shadowMap);\n\t}\n\n\tprivate disableShadows() {\n\t\tthis.unbindTexture(this.shadowMap);\n\t\tthis.uniforms.uShadowMap = null;\n\t}\n}\n","import { Color } from './material';\nimport { BasicCamera } from './camera';\n\nexport class Light extends BasicCamera {\n\tcolor: Color = [1.0, 1.0, 1.0, 1.0];\n\tcastsShadows = false;\n}\n","import { Shader } from '../shader';\nimport vertexSource from './material.vert.glsl';\nimport vertexSourceSphere from './material_sphere.vert.glsl';\nimport fragmentSource from './material.frag.glsl';\nimport fragmentSourceSphere from './material_sphere.frag.glsl';\n\nconst MAX_LIGHT_COUNT = 8;\n\ntype UniformMap = Shader['uniforms'];\n\nexport class MaterialShader extends Shader {\n\tmake(gl: WebGLRenderingContext, vertSource?: string, fragSource?: string) {\n\t\tconst lightUniforms: UniformMap = {\n\t\t\tuLightCount: {\n\t\t\t\ttype: WebGLRenderingContext.INT,\n\t\t\t},\n\t\t};\n\t\tfor (let i = 0; i < MAX_LIGHT_COUNT; i++) {\n\t\t\tconst uniformName = `uLights[${i}]`;\n\t\t\t// @prettier-ignore\n\t\t\tlightUniforms[`${uniformName}.position`] = { type: WebGLRenderingContext.FLOAT_VEC3 };\n\t\t\tlightUniforms[`${uniformName}.ambient`] = { type: WebGLRenderingContext.FLOAT_VEC3 };\n\t\t\tlightUniforms[`${uniformName}.diffuse`] = { type: WebGLRenderingContext.FLOAT_VEC3 };\n\t\t\tlightUniforms[`${uniformName}.specular`] = { type: WebGLRenderingContext.FLOAT_VEC3 };\n\t\t\tlightUniforms[`${uniformName}.constant`] = { type: WebGLRenderingContext.FLOAT };\n\t\t\tlightUniforms[`${uniformName}.linear`] = { type: WebGLRenderingContext.FLOAT };\n\t\t\tlightUniforms[`${uniformName}.quadratic`] = { type: WebGLRenderingContext.FLOAT };\n\t\t}\n\n\t\tsuper.make(gl, vertSource || vertexSource, fragSource || fragmentSource, {\n\t\t\tattributes: {\n\t\t\t\tcolor: {\n\t\t\t\t\ttype: WebGLRenderingContext.FLOAT,\n\t\t\t\t\tsize: 4,\n\t\t\t\t},\n\t\t\t\tnormal: {\n\t\t\t\t\ttype: WebGLRenderingContext.FLOAT,\n\t\t\t\t\tsize: 3,\n\t\t\t\t},\n\t\t\t\tuv: {\n\t\t\t\t\ttype: WebGLRenderingContext.FLOAT,\n\t\t\t\t\tsize: 2,\n\t\t\t\t},\n\t\t\t},\n\t\t\tuniforms: {\n\t\t\t\t...lightUniforms,\n\t\t\t\t// uMaterial\n\t\t\t\t'uMaterial.color': {\n\t\t\t\t\ttype: WebGLRenderingContext.FLOAT_VEC4,\n\t\t\t\t},\n\t\t\t\t'uMaterial.castsShadows': {\n\t\t\t\t\ttype: WebGLRenderingContext.BOOL,\n\t\t\t\t},\n\t\t\t\t'uMaterial.receivesShadows': {\n\t\t\t\t\ttype: WebGLRenderingContext.BOOL,\n\t\t\t\t},\n\t\t\t\t'uMaterial.displacementMultiplier': {\n\t\t\t\t\ttype: WebGLRenderingContext.FLOAT,\n\t\t\t\t},\n\t\t\t\t'uMaterial.hasTexture': {\n\t\t\t\t\ttype: WebGLRenderingContext.BOOL,\n\t\t\t\t},\n\t\t\t\t'uMaterial.hasNormalMap': {\n\t\t\t\t\ttype: WebGLRenderingContext.BOOL,\n\t\t\t\t},\n\t\t\t\t'uMaterial.hasSpecularMap': {\n\t\t\t\t\ttype: WebGLRenderingContext.BOOL,\n\t\t\t\t},\n\t\t\t\t'uMaterial.hasDisplacementMap': {\n\t\t\t\t\ttype: WebGLRenderingContext.BOOL,\n\t\t\t\t},\n\t\t\t\t'uMaterial.texture': {\n\t\t\t\t\ttype: WebGLRenderingContext.INT,\n\t\t\t\t},\n\t\t\t\t'uMaterial.normalMap': {\n\t\t\t\t\ttype: WebGLRenderingContext.INT,\n\t\t\t\t},\n\t\t\t\t'uMaterial.specularMap': {\n\t\t\t\t\ttype: WebGLRenderingContext.INT,\n\t\t\t\t},\n\t\t\t\t'uMaterial.displacementMap': {\n\t\t\t\t\ttype: WebGLRenderingContext.INT,\n\t\t\t\t},\n\t\t\t\t'uMaterial.emissive': {\n\t\t\t\t\ttype: WebGLRenderingContext.BOOL,\n\t\t\t\t},\n\t\t\t\tuTexture: {\n\t\t\t\t\ttype: WebGLRenderingContext.INT,\n\t\t\t\t},\n\t\t\t\tuNormalMap: {\n\t\t\t\t\ttype: WebGLRenderingContext.INT,\n\t\t\t\t},\n\t\t\t\tuLight: {\n\t\t\t\t\ttype: WebGLRenderingContext.FLOAT_MAT4,\n\t\t\t\t},\n\t\t\t\tuLightDir: {\n\t\t\t\t\ttype: WebGLRenderingContext.FLOAT_VEC3,\n\t\t\t\t},\n\t\t\t\tuShadowMap: {\n\t\t\t\t\ttype: WebGLRenderingContext.INT,\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n}\n\nexport class SphereMaterialShader extends MaterialShader {\n\tmake(gl: WebGLRenderingContext) {\n\t\tsuper.make(gl, vertexSourceSphere, fragmentSourceSphere);\n\t}\n}\n","export default \"#define GLSLIFY 1\\nuniform mat4 uViewProj;\\nuniform mat4 uView;\\nuniform mat4 uModel;\\nuniform mat4 uLight;\\n\\nattribute vec3 position;\\nattribute vec3 normal;\\nattribute vec2 uv;\\n\\nvarying vec3 vNormal;\\nvarying vec3 vViewNormal;\\nvarying vec4 vPosition;\\nvarying vec3 vBasePosition;\\nvarying vec2 vTexCoord;\\nvarying vec4 vPositionInLight;\\n\\nvoid main(void) {\\n\\tmat4 mvp = uModel  * uViewProj;\\n\\tgl_Position = vec4(position, 1.0) * mvp;\\n\\tvBasePosition = position;\\n\\tvPosition = vec4(position, 1.0) * uModel;\\n\\t//vNormal = normalize((vec4(normal, 0.0) * uModel)).xyz;\\n\\tvNormal = normal;\\n\\tvViewNormal = normalize((vec4(normal, 0.0) * uModel * uView)).xyz;\\n\\tvPositionInLight = vec4(position, 1.0) * uModel * uLight;\\n\\tvTexCoord = uv;\\n}\\n\";","export default \"precision highp float;\\n#define GLSLIFY 1\\n\\nstruct Material {\\n\\tbool castsShadows;\\n\\tbool receivesShadows;\\n\\tbool hasTexture;\\n\\tbool hasNormalMap;\\n\\tbool hasSpecularMap;\\n\\tbool hasDisplacementMap;\\n\\tbool emissive;\\n\\tvec4 color;\\n\\tfloat displacementMultiplier;\\n\\tsampler2D texture;\\n\\tsampler2D normalMap;\\n\\tsampler2D specularMap;\\n\\tsampler2D displacementMap;\\n};\\n\\nstruct Light {\\n\\tvec3 position;\\n\\tvec3 ambient;\\n\\tvec3 diffuse;\\n\\tvec3 specular;\\n\\n\\tfloat constant;\\n\\tfloat linear;\\n\\tfloat quadratic;\\n};\\n\\nuniform mat4 uModel;\\nuniform vec4 uFillColor;\\nuniform mat4 uView;\\nuniform sampler2D uShadowMap;\\nuniform vec3 uLightDir;\\nuniform Material uMaterial;\\nuniform int uLightCount;\\nuniform Light uLights[32];\\n\\nvarying vec3 vNormal;\\nvarying vec3 vViewNormal;\\nvarying vec4 vPosition;\\nvarying vec2 vTexCoord;\\nvarying vec4 vPositionInLight;\\n\\nvoid main(void) {\\n\\tvec3 texNormal;\\n\\tif (uMaterial.hasNormalMap) {\\n\\t\\ttexNormal = normalize(vec4(normalize(vNormal) * texture2D(uMaterial.normalMap, vTexCoord).rgb, 0.0) * uModel * uView).xyz;\\n\\t}\\n\\telse {\\n\\t\\ttexNormal = normalize(vec4(normalize(vNormal), 0.0) * uModel * uView).xyz;\\n\\t}\\n\\tvec4 texColor;\\n\\tif (uMaterial.hasTexture) {\\n\\t\\ttexColor = texture2D(uMaterial.texture, vTexCoord);\\n\\t} else {\\n\\t\\ttexColor = uMaterial.color;\\n\\t}\\n\\tfloat texSpecular = 0.0;\\n\\tif (uMaterial.hasSpecularMap) {\\n\\t\\ttexSpecular = texture2D(uMaterial.specularMap, vTexCoord).r;\\n\\t}\\n\\n\\tif (uMaterial.emissive) {\\n\\t\\tgl_FragColor = texColor;\\n\\t\\treturn;\\n\\t}\\n\\n\\tvec4 vertPos4 = vPosition * uView;\\n\\tvec3 vertPos = vertPos4.xyz / vertPos4.w;\\n\\n\\tvec3 ambient = vec3(0.0);\\n\\tvec3 diffuse = vec3(0.0);\\n\\tvec3 specular = vec3(0.0);\\n\\n\\tfor (int i = 0; i < 32; i++) {\\n\\t\\tif (i >= uLightCount) break;\\n\\n\\t\\tvec4 lightPos4 = vec4(uLights[i].position, 1.0) * uView;\\n\\t\\tvec3 lightPos = lightPos4.xyz / lightPos4.w;\\n\\n\\t\\tvec3 lightDir = normalize(lightPos - vertPos);\\n\\t\\tvec3 lightColor = uLights[i].diffuse;\\n\\t\\tambient += uLights[i].ambient;\\n\\n\\t\\tfloat diff = max(dot(texNormal, lightDir), 0.0);\\n\\t\\tdiffuse += diff * lightColor;\\n\\n\\t\\tfloat lambertian = max(dot(texNormal, lightDir), 0.0);\\n\\t\\tfloat spec = 0.0;\\n\\n\\t\\tif (lambertian > 0.0) {\\n\\t\\t\\tvec3 reflectDir = reflect(-lightDir, texNormal);\\n\\t\\t\\tvec3 viewDir = normalize(-vertPos);\\n\\n\\t\\t\\tfloat specAngle = max(dot(reflectDir, viewDir), 0.0);\\n\\t\\t\\tspec = pow(specAngle, 64.0) * texSpecular;\\n\\t\\t}\\n\\t\\tspecular += spec * lightColor;\\n\\t}\\n\\n\\tfloat shade = 0.0;\\n\\n\\tif (uMaterial.receivesShadows) {\\n\\t\\tfloat edge = 1.0/1024.0;\\n\\t\\tvec3 shadowPos = (vPositionInLight.xyz / vPositionInLight.w) * 0.5 + 0.5;\\n\\n\\t\\tfloat shadows[9];\\n\\n\\t\\tshadows[0] = texture2D(uShadowMap, vec2(shadowPos.x, shadowPos.y)).r;\\n\\t\\tshadows[1] = texture2D(uShadowMap, vec2(shadowPos.x - edge, shadowPos.y)).r;\\n\\t\\tshadows[2] = texture2D(uShadowMap, vec2(shadowPos.x + edge, shadowPos.y)).r;\\n\\t\\tshadows[3] = texture2D(uShadowMap, vec2(shadowPos.x, shadowPos.y - edge)).r;\\n\\t\\tshadows[4] = texture2D(uShadowMap, vec2(shadowPos.x, shadowPos.y + edge)).r;\\n\\t\\tshadows[5] = texture2D(uShadowMap, vec2(shadowPos.x - edge, shadowPos.y - edge)).r;\\n\\t\\tshadows[6] = texture2D(uShadowMap, vec2(shadowPos.x + edge, shadowPos.y - edge)).r;\\n\\t\\tshadows[7] = texture2D(uShadowMap, vec2(shadowPos.x - edge, shadowPos.y + edge)).r;\\n\\t\\tshadows[8] = texture2D(uShadowMap, vec2(shadowPos.x + edge, shadowPos.y + edge)).r;\\n\\n\\t\\tfloat distanceFromLight = shadowPos.z;\\n\\n\\t\\tfloat bias = 0.00001;\\n\\t\\tfor (int i = 0; i < 9; i++) {\\n\\t\\t\\tif (distanceFromLight > shadows[i] + bias) {\\n\\t\\t\\t\\tshade += 0.08;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\tvec3 shadowColor = vec3(0.0);\\n\\n\\tvec3 color = mix(texColor.rgb, shadowColor, shade);\\n\\tcolor = (ambient + diffuse + specular) * color;\\n\\tgl_FragColor = vec4(color, texColor.a);\\n}\\n\";","export default \"#define GLSLIFY 1\\nstruct Material {\\n\\tbool castsShadows;\\n\\tbool receivesShadows;\\n\\tbool hasTexture;\\n\\tbool hasNormalMap;\\n\\tbool hasSpecularMap;\\n\\tbool hasDisplacementMap;\\n\\tbool emissive;\\n\\tvec4 color;\\n\\tfloat displacementMultiplier;\\n\\tsampler2D texture;\\n\\tsampler2D normalMap;\\n\\tsampler2D specularMap;\\n\\tsampler2D displacementMap;\\n};\\n\\n#define PI 3.1415926535897932384626433832795\\n\\nuniform mat4 uViewProj;\\nuniform mat4 uView;\\nuniform mat4 uModel;\\nuniform mat4 uLight;\\nuniform Material uMaterial;\\n\\nattribute vec3 position;\\nattribute vec3 normal;\\nattribute vec2 uv;\\n\\nvarying vec3 vNormal;\\nvarying vec3 vViewNormal;\\nvarying vec4 vPosition;\\nvarying vec3 vBasePosition;\\nvarying vec2 vTexCoord;\\nvarying vec4 vPositionInLight;\\n\\nvec2 toLonLat(vec3 point) {\\n\\tvec3 v = normalize(point);\\n\\tfloat lat = acos(v.y) - PI / 2.0;\\n\\tfloat lon = atan(v.z, v.x) + PI / 2.0;\\n\\treturn vec2(lon, lat);\\n}\\n\\nvec2 lonLatToUV(vec2 ll) {\\n\\tfloat x = -ll.x / PI / 2.0;\\n\\tfloat y = ll.y / PI + 0.5;\\n\\treturn vec2(fract(x), fract(y));\\n}\\n\\nvoid main(void) {\\n\\tmat4 mvp = uModel  * uViewProj;\\n\\tvec2 uv = lonLatToUV(toLonLat(position));\\n\\tvec3 pos = position;\\n\\tif (uMaterial.hasDisplacementMap) {\\n\\t\\tvec3 texNormal = texture2D(uMaterial.displacementMap, uv).rgb;\\n\\t\\tpos += normal * texNormal * uMaterial.displacementMultiplier;\\n\\t}\\n\\tgl_Position = vec4(pos, 1.0) * mvp;\\n\\tvBasePosition = pos;\\n\\tvPosition = vec4(pos, 1.0) * uModel;\\n\\t//vNormal = normalize((vec4(normal, 0.0) * uModel)).xyz;\\n\\tvNormal = normal;\\n\\tvViewNormal = normalize((vec4(normal, 0.0) * uModel * uView)).xyz;\\n\\tvPositionInLight = vec4(pos, 1.0) * uModel * uLight;\\n\\tvTexCoord = uv;\\n}\\n\";","export default \"precision highp float;\\n#define GLSLIFY 1\\n\\nstruct Material {\\n\\tbool castsShadows;\\n\\tbool receivesShadows;\\n\\tbool hasTexture;\\n\\tbool hasNormalMap;\\n\\tbool hasSpecularMap;\\n\\tbool hasDisplacementMap;\\n\\tbool emissive;\\n\\tvec4 color;\\n\\tfloat displacementMultiplier;\\n\\tsampler2D texture;\\n\\tsampler2D normalMap;\\n\\tsampler2D specularMap;\\n\\tsampler2D displacementMap;\\n};\\n\\nstruct Light {\\n\\tvec3 position;\\n\\tvec3 ambient;\\n\\tvec3 diffuse;\\n\\tvec3 specular;\\n\\n\\tfloat constant;\\n\\tfloat linear;\\n\\tfloat quadratic;\\n};\\n\\nuniform mat4 uModel;\\nuniform vec4 uFillColor;\\nuniform mat4 uView;\\nuniform sampler2D uShadowMap;\\nuniform vec3 uLightDir;\\nuniform Material uMaterial;\\nuniform int uLightCount;\\nuniform Light uLights[32];\\n\\nvarying vec3 vNormal;\\nvarying vec3 vViewNormal;\\nvarying vec4 vPosition;\\nvarying vec2 vTexCoord;\\nvarying vec4 vPositionInLight;\\nvarying vec3 vBasePosition;\\n\\n#define PI 3.1415926535897932384626433832795\\n\\nvec2 toLonLat(vec3 point) {\\n\\tvec3 v = normalize(point);\\n\\tfloat lat = acos(v.y) - PI / 2.0;\\n\\tfloat lon = atan(v.z, v.x) + PI / 2.0;\\n\\treturn vec2(lon, lat);\\n}\\n\\nvec2 lonLatToUV(vec2 ll) {\\n\\tfloat x = -ll.x / PI / 2.0;\\n\\tfloat y = ll.y / PI + 0.5;\\n\\treturn vec2(fract(x), fract(y));\\n}\\n\\nvoid main(void) {\\n\\tvec2 uv = lonLatToUV(toLonLat(vBasePosition));\\n\\n\\tvec4 texColor;\\n\\tif (uMaterial.hasTexture) {\\n\\t\\ttexColor = texture2D(uMaterial.texture, uv);\\n\\t} else {\\n\\t\\ttexColor = uMaterial.color;\\n\\t}\\n\\n\\tvec3 texNormal;\\n\\tif (uMaterial.hasNormalMap) {\\n\\t\\ttexNormal = normalize(vec4(normalize(vNormal) * texture2D(uMaterial.normalMap, uv).rgb, 0.0) * uModel * uView).xyz;\\n\\t}\\n\\telse {\\n\\t\\ttexNormal = normalize(vec4(normalize(vNormal), 0.0) * uModel * uView).xyz;\\n\\t}\\n\\n\\tfloat texSpecular = 0.0;\\n\\tif (uMaterial.hasSpecularMap) {\\n\\t\\ttexSpecular = texture2D(uMaterial.specularMap, uv).r;\\n\\t}\\n\\n\\tif (uMaterial.emissive) {\\n\\t\\tgl_FragColor = texColor;\\n\\t\\treturn;\\n\\t}\\n\\n\\tvec4 vertPos4 = vPosition * uView;\\n\\tvec3 vertPos = vertPos4.xyz / vertPos4.w;\\n\\n\\tvec3 ambient = vec3(0.0);\\n\\tvec3 diffuse = vec3(0.0);\\n\\tvec3 specular = vec3(0.0);\\n\\n\\tfor (int i = 0; i < 32; i++) {\\n\\t\\tif (i >= uLightCount) break;\\n\\n\\t\\tvec4 lightPos4 = vec4(uLights[i].position, 1.0) * uView;\\n\\t\\tvec3 lightPos = lightPos4.xyz / lightPos4.w;\\n\\n\\t\\tvec3 lightDir = normalize(lightPos - vertPos);\\n\\t\\tvec3 lightColor = uLights[i].diffuse;\\n\\t\\tambient += uLights[i].ambient;\\n\\n\\t\\tfloat diff = max(dot(texNormal, lightDir), 0.0);\\n\\t\\tdiffuse += diff * lightColor;\\n\\n\\t\\tfloat lambertian = max(dot(texNormal, lightDir), 0.0);\\n\\t\\tfloat spec = 0.0;\\n\\n\\t\\tif (lambertian > 0.0) {\\n\\t\\t\\tvec3 reflectDir = reflect(-lightDir, texNormal);\\n\\t\\t\\tvec3 viewDir = normalize(-vertPos);\\n\\n\\t\\t\\tfloat specAngle = max(dot(reflectDir, viewDir), 0.0);\\n\\t\\t\\tspec = pow(specAngle, 64.0) * texSpecular;\\n\\t\\t}\\n\\t\\tspecular += spec * lightColor;\\n\\t}\\n\\n\\tfloat shade = 0.0;\\n\\n\\tif (uMaterial.receivesShadows) {\\n\\t\\tfloat edge = 1.0/1024.0;\\n\\t\\tvec3 shadowPos = (vPositionInLight.xyz / vPositionInLight.w) * 0.5 + 0.5;\\n\\n\\t\\tfloat shadows[9];\\n\\n\\t\\tshadows[0] = texture2D(uShadowMap, vec2(shadowPos.x, shadowPos.y)).r;\\n\\t\\tshadows[1] = texture2D(uShadowMap, vec2(shadowPos.x - edge, shadowPos.y)).r;\\n\\t\\tshadows[2] = texture2D(uShadowMap, vec2(shadowPos.x + edge, shadowPos.y)).r;\\n\\t\\tshadows[3] = texture2D(uShadowMap, vec2(shadowPos.x, shadowPos.y - edge)).r;\\n\\t\\tshadows[4] = texture2D(uShadowMap, vec2(shadowPos.x, shadowPos.y + edge)).r;\\n\\t\\tshadows[5] = texture2D(uShadowMap, vec2(shadowPos.x - edge, shadowPos.y - edge)).r;\\n\\t\\tshadows[6] = texture2D(uShadowMap, vec2(shadowPos.x + edge, shadowPos.y - edge)).r;\\n\\t\\tshadows[7] = texture2D(uShadowMap, vec2(shadowPos.x - edge, shadowPos.y + edge)).r;\\n\\t\\tshadows[8] = texture2D(uShadowMap, vec2(shadowPos.x + edge, shadowPos.y + edge)).r;\\n\\n\\t\\tfloat distanceFromLight = shadowPos.z;\\n\\n\\t\\tfloat bias = 0.00001;\\n\\t\\tfor (int i = 0; i < 9; i++) {\\n\\t\\t\\tif (distanceFromLight > shadows[i] + bias) {\\n\\t\\t\\t\\tshade += 0.08;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\tvec3 shadowColor = vec3(0.0);\\n\\n\\tvec3 color = mix(texColor.rgb, shadowColor, shade);\\n\\tcolor = (ambient + diffuse + specular) * color;\\n\\tgl_FragColor = vec4(color, texColor.a);\\n}\\n\";","import { Shader } from '../shader';\nimport vertexSource from './sprite.vert.glsl';\nimport fragmentSource from './sprite.frag.glsl';\n\nexport class SpriteShader extends Shader {\n\tmake(gl: WebGLRenderingContext) {\n\t\tsuper.make(gl, vertexSource, fragmentSource, {\n\t\t\tattributes: {\n\t\t\t\tuv: {\n\t\t\t\t\ttype: WebGLRenderingContext.FLOAT,\n\t\t\t\t\tsize: 2,\n\t\t\t\t},\n\t\t\t},\n\t\t\tuniforms: {\n\t\t\t\tuSampler: {\n\t\t\t\t\ttype: WebGLRenderingContext.INT,\n\t\t\t\t},\n\t\t\t\tuContrast: {\n\t\t\t\t\ttype: WebGLRenderingContext.FLOAT,\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n}\n","export default \"#define GLSLIFY 1\\nuniform mat4 uViewProj;\\nuniform mat4 uModel;\\n\\nattribute vec3 position;\\nattribute vec2 uv;\\n\\nvarying vec2 vTexCoord;\\n\\nvoid main(void) {\\n\\tmat4 mvp = uModel * uViewProj;\\n\\tgl_Position = vec4(position, 1.0) * mvp;\\n\\tvTexCoord = vec2(uv.x, 1.0 - uv.y);\\n}\\n\\n\";","export default \"precision mediump float;\\n#define GLSLIFY 1\\n\\nuniform float uTime;\\nuniform sampler2D uSampler;\\nuniform float uContrast;\\n\\nvarying vec2 vTexCoord;\\n\\nvoid main(void) {\\n\\tfloat contrast = uContrast > 0.0 ? uContrast : 1.0;\\n\\tgl_FragColor = (texture2D(uSampler, vTexCoord) - (1.0 - (1.0 / contrast))) * contrast;\\n}\\n\";","import { Shader } from '../shader';\nimport vertexSource from './simple.vert.glsl';\nimport fragmentSource from './simple.frag.glsl';\n\nexport class SimpleShader extends Shader {\n\tmake(gl: WebGLRenderingContext) {\n\t\tsuper.make(gl, vertexSource, fragmentSource, {\n\t\t\tattributes: {\n\t\t\t\tcolor: {\n\t\t\t\t\ttype: WebGLRenderingContext.FLOAT,\n\t\t\t\t\tsize: 4,\n\t\t\t\t},\n\t\t\t\tnormal: {\n\t\t\t\t\ttype: WebGLRenderingContext.FLOAT,\n\t\t\t\t\tsize: 3,\n\t\t\t\t},\n\t\t\t\tuv: {\n\t\t\t\t\ttype: WebGLRenderingContext.FLOAT,\n\t\t\t\t\tsize: 2,\n\t\t\t\t},\n\t\t\t},\n\t\t\tuniforms: {\n\t\t\t\tuLight: {\n\t\t\t\t\ttype: WebGLRenderingContext.FLOAT_MAT4,\n\t\t\t\t},\n\t\t\t\tuLightDir: {\n\t\t\t\t\ttype: WebGLRenderingContext.FLOAT_VEC3,\n\t\t\t\t},\n\t\t\t\tuShadowMap: {\n\t\t\t\t\ttype: WebGLRenderingContext.INT,\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n}\n","export default \"#define GLSLIFY 1\\nuniform mat4 uViewProj;\\nuniform mat4 uView;\\nuniform mat4 uModel;\\nuniform mat4 uLight;\\n\\nattribute vec3 position;\\nattribute vec3 normal;\\nattribute vec4 color;\\nattribute vec2 uv;\\n\\nvarying vec4 vColor;\\nvarying vec3 vNormal;\\nvarying vec3 vPosition;\\nvarying vec4 vPositionInLight;\\nvarying vec2 vTexCoord;\\n\\nvoid main(void) {\\n\\tmat4 mvp = uModel  * uViewProj;\\n\\tgl_Position = vec4(position, 1.0) * mvp;\\n\\tvColor = color;\\n\\tvPosition = (vec4(position, 1.0) * uModel * uView).xyz;\\n\\tvPositionInLight = vec4(position, 1.0) * uModel * uLight;\\n\\tvNormal = normalize((vec4(normal, 0.0) * uModel)).xyz;\\n\\tvTexCoord = uv;\\n}\\n\";","export default \"precision mediump float;\\n#define GLSLIFY 1\\n\\nuniform float uTime;\\nuniform vec4 uFillColor;\\nuniform sampler2D uShadowMap;\\nuniform vec3 uLightDir;\\n\\nvarying vec4 vColor;\\nvarying vec3 vNormal;\\nvarying vec3 vPosition;\\nvarying vec4 vPositionInLight;\\nvarying vec2 vTexCoord;\\n\\nvoid main(void) {\\n\\tvec3 lightColor = vec3(1.0);\\n\\tvec3 ambient = 0.1 * lightColor;\\n\\n\\tfloat diff = max(dot(vNormal, uLightDir), 0.0);\\n\\tvec3 diffuse = diff * lightColor;\\n\\n\\tvec3 viewDir = normalize(-vPosition);\\n\\tvec3 reflectDir = reflect(-uLightDir, vNormal);\\n\\tfloat spec = pow(max(dot(viewDir, reflectDir), 0.0), 128.0);\\n\\tvec3 specular = 0.5 * spec * lightColor;\\n\\n\\tvec3 color = (ambient + diffuse + specular) * vColor.rgb;\\n\\n\\tif (uFillColor.a > 0.0) {\\n\\t\\tfloat shade = 0.0;\\n\\n\\t\\tfloat edge = 1.0/1024.0;\\n\\t\\tvec3 shadowPos = (vPositionInLight.xyz / vPositionInLight.w) * 0.5 + 0.5;\\n\\n\\t\\tfloat shadows[9];\\n\\n\\t\\tshadows[0] = texture2D(uShadowMap, vec2(shadowPos.x, shadowPos.y)).r;\\n\\t\\tshadows[1] = texture2D(uShadowMap, vec2(shadowPos.x - edge, shadowPos.y)).r;\\n\\t\\tshadows[2] = texture2D(uShadowMap, vec2(shadowPos.x + edge, shadowPos.y)).r;\\n\\t\\tshadows[3] = texture2D(uShadowMap, vec2(shadowPos.x, shadowPos.y - edge)).r;\\n\\t\\tshadows[4] = texture2D(uShadowMap, vec2(shadowPos.x, shadowPos.y + edge)).r;\\n\\t\\tshadows[5] = texture2D(uShadowMap, vec2(shadowPos.x - edge, shadowPos.y - edge)).r;\\n\\t\\tshadows[6] = texture2D(uShadowMap, vec2(shadowPos.x + edge, shadowPos.y - edge)).r;\\n\\t\\tshadows[7] = texture2D(uShadowMap, vec2(shadowPos.x - edge, shadowPos.y + edge)).r;\\n\\t\\tshadows[8] = texture2D(uShadowMap, vec2(shadowPos.x + edge, shadowPos.y + edge)).r;\\n\\n\\t\\tfloat distanceFromLight = shadowPos.z;\\n\\n\\t\\tfloat bias = 0.0001;\\n\\t\\tfor (int i = 0; i < 9; i++) {\\n\\t\\t\\tif (distanceFromLight > shadows[i] + bias) {\\n\\t\\t\\t\\tshade += 0.08;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tvec3 shadowColor = vec3(0.0);\\n\\t\\tgl_FragColor = vec4(mix(uFillColor.rgb, shadowColor, shade), vColor.a);\\n\\t} else {\\n\\t\\tgl_FragColor = vec4(color, vColor.a);\\n\\t}\\n}\\n\";","import { Mesh } from '../mesh';\nimport { Point2, Point3, Vector3, Matrix4 } from '../geom';\n\ntype Face = [number[], number[], number[]];\n\nexport type ObjVertex = {\n\tposition: Point3;\n\tnormal: Vector3;\n\tuv: Point2;\n};\n\nexport interface ObjOptions {\n\tflipFaces?: boolean;\n\tscale?: number;\n}\n\nexport interface ObjFile {\n\tvertices: Point3[];\n\tnormals: Vector3[];\n\tuvs: Point2[];\n}\n\nexport class Obj extends Mesh<ObjVertex> {\n\tconstructor(data: string, options?: ObjOptions) {\n\t\tlet { vertices, normals, uvs } = parseObj(data);\n\t\tif (options?.scale) {\n\t\t\tconst scaling = Matrix4.scaling(options.scale, options.scale, options.scale);\n\t\t\tvertices = vertices.map(v => scaling.transformPoint3(v));\n\t\t}\n\t\tif (options?.flipFaces) {\n\t\t\tfor (let i = 0; i < vertices.length; i += 3) {\n\t\t\t\tconst v0 = vertices[i];\n\t\t\t\tconst v1 = vertices[i + 2];\n\t\t\t\tvertices[i] = v1;\n\t\t\t\tvertices[i + 2] = v0;\n\t\t\t}\n\t\t}\n\n\t\tconst geom: ObjVertex[] = vertices.map((position, i) => {\n\t\t\treturn {\n\t\t\t\tposition,\n\t\t\t\tnormal: normals[i],\n\t\t\t\tuv: uvs[i],\n\t\t\t};\n\t\t});\n\t\tsuper(geom);\n\t}\n\n\tstatic async fromUrl(url: string): Promise<Obj> {\n\t\tconst response = await fetch(url);\n\t\tconst data = await response.text();\n\t\treturn new Obj(data);\n\t}\n}\n\nfunction parseObj(data: string): ObjFile {\n\tconst vertices: Point3[] = [];\n\tconst faces: Face[] = [];\n\tconst normals: Vector3[] = [];\n\tconst uvs: Point2[] = [];\n\n\tfor (const line of data.split('\\n')) {\n\t\tconst leader = line.split(' ')[0];\n\t\tswitch (leader) {\n\t\t\t// Vertex\n\t\t\tcase 'v':\n\t\t\t\tvertices.push(parseObjVertex(line));\n\t\t\t\tbreak;\n\n\t\t\t// Face\n\t\t\tcase 'f':\n\t\t\t\tfaces.push(parseObjFace(line));\n\t\t\t\tbreak;\n\n\t\t\t// Vertex Texture\n\t\t\tcase 'vt':\n\t\t\t\tuvs.push(parseObjUV(line));\n\t\t\t\tbreak;\n\n\t\t\t// Vertex Normal\n\t\t\tcase 'vn':\n\t\t\t\tnormals.push(parseObjNormal(line));\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn {\n\t\tvertices: (faces as any).flat().map((f: number[]) => vertices[f[0]]),\n\t\tnormals: (faces as any).flat().map((f: number[]) => normals[f[2]]),\n\t\tuvs: (faces as any).flat().map((f: number[]) => uvs[f[1]]),\n\t};\n}\n\nfunction parseObjVertex(line: string): Point3 {\n\treturn line\n\t\t.split(' ')\n\t\t.filter(s => s)\n\t\t.slice(1)\n\t\t.map(parseFloat) as Point3;\n}\n\nfunction parseObjNormal(line: string): Vector3 {\n\treturn line\n\t\t.split(' ')\n\t\t.filter(s => s)\n\t\t.slice(1)\n\t\t.map(parseFloat) as Vector3;\n}\n\nfunction parseObjUV(line: string): Point2 {\n\tconst p = line\n\t\t.split(' ')\n\t\t.filter(s => s)\n\t\t.slice(1)\n\t\t.map(i => parseFloat(i)) as Point2;\n\n\treturn [p[0], 1 - p[1]];\n}\n\nfunction parseObjFace(line: string): Face {\n\treturn line\n\t\t.split(' ')\n\t\t.filter(s => s)\n\t\t.slice(1)\n\t\t.map(f => f.split('/').map(i => parseInt(i, 10) - 1)) as Face;\n}\n","import { Mesh } from '../mesh';\nimport { Point3, Point2, Vector3 } from '../geom';\nimport { Color } from '../material';\n\nexport type CubeVertex = {\n\tposition: Point3;\n\tuv: Point2;\n\tnormal: Vector3;\n\tcolor: Color;\n};\n\nexport class Cube extends Mesh<CubeVertex> {\n\tconstructor() {\n\t\tconst data: CubeVertex[] = new Array(FACE_VERTICES.length / 3);\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\t// prettier-ignore\n\t\t\tconst position: Point3 = [\n\t\t\t\tFACE_VERTICES[i * 3 + 0],\n\t\t\t\tFACE_VERTICES[i * 3 + 1],\n\t\t\t\tFACE_VERTICES[i * 3 + 2],\n\t\t\t];\n\t\t\t// prettier-ignore\n\t\t\tconst uv: Point2 = [\n\t\t\t\tFACE_UV[(i * 2 + 0) % FACE_UV.length],\n\t\t\t\tFACE_UV[(i * 2 + 1) % FACE_UV.length],\n\t\t\t];\n\n\t\t\tconst normal: Vector3 = [0.0, 0.0, 0.0];\n\t\t\tdata[i] = { position, uv, normal, color: [0.0, 1.0, 0.0, 1.0] };\n\t\t}\n\n\t\tsuper(data);\n\t\tthis.calculateNormals();\n\t}\n}\n\n// prettier-ignore\nconst FACE_UV = [\n\t1.0, 0.0,\n\t0.0, 0.0,\n\t1.0, 1.0,\n\n\t0.0, 1.0,\n\t1.0, 1.0,\n\t0.0, 0.0,\n];\n\n// prettier-ignore\nconst FACE_VERTICES = [\n\t// Far\n\t-1.0, 1.0, -1.0,\n\t1.0, 1.0, -1.0,\n\t-1.0, -1.0, -1.0,\n\n\t1.0, -1.0, -1.0,\n\t-1.0, -1.0, -1.0,\n\t1.0, 1.0, -1.0,\n\n\t// Near\n\t1.0, 1.0, 1.0,\n\t-1.0, 1.0, 1.0,\n\t1.0, -1.0, 1.0,\n\n\t-1.0, -1.0, 1.0,\n\t1.0, -1.0, 1.0,\n\t-1.0, 1.0, 1.0,\n\n\t// Left\n\t-1.0, 1.0, 1.0,\n\t-1.0, 1.0, -1.0,\n\t-1.0, -1.0, 1.0,\n\n\t-1.0, -1.0, -1.0,\n\t-1.0, -1.0, 1.0,\n\t-1.0, 1.0, -1.0,\n\n\t// Right\n\t1.0, 1.0, -1.0,\n\t1.0, 1.0, 1.0,\n\t1.0, -1.0, -1.0,\n\n\t1.0, -1.0, 1.0,\n\t1.0, -1.0, -1.0,\n\t1.0, 1.0, 1.0,\n\n\t// Top\n\t1.0, 1.0, -1.0,\n\t-1.0, 1.0, -1.0,\n\t1.0, 1.0, 1.0,\n\n\t-1.0, 1.0, 1.0,\n\t1.0, 1.0, 1.0,\n\t-1.0, 1.0, -1.0,\n\n\t// Bottom\n\t1.0, -1.0, -1.0,\n\t1.0, -1.0, 1.0,\n\t-1.0, -1.0, -1.0,\n\n\t-1.0, -1.0, 1.0,\n\t-1.0, -1.0, -1.0,\n\t1.0, -1.0, 1.0,\n];\n","import { Mesh, Geometry } from '../mesh';\nimport { Point3, Point2, Vector3, normalize, cross, addVector3, multiplyVector3 } from '../geom';\nimport { Color } from '../material';\n\nexport type SphereVertex = {\n\tposition: Point3;\n\tuv: Point2;\n\tnormal: Vector3;\n\tcolor: Color;\n};\n\nexport class Sphere extends Mesh<SphereVertex> {\n\tconstructor(lonSegments: number, latSegments: number) {\n\t\tconst data: SphereVertex[] = new Array(lonSegments * latSegments * 6);\n\n\t\tlet i = 0;\n\t\tfor (let y = latSegments * -0.5; y < latSegments * 0.5; y++) {\n\t\t\tconst lat0 = Math.PI * (y / latSegments);\n\t\t\tconst lat1 = Math.PI * ((y + 1) / latSegments);\n\n\t\t\tfor (let x = lonSegments * -0.5; x < lonSegments * 0.5; x++) {\n\t\t\t\tconst lon0 = 2 * Math.PI * (x / lonSegments);\n\t\t\t\tconst lon1 = 2 * Math.PI * ((x + 1) / lonSegments);\n\n\t\t\t\tconst quad: [number, number][] = [\n\t\t\t\t\t[lon1, lat1],\n\t\t\t\t\t[lon0, lat1],\n\t\t\t\t\t[lon0, lat0],\n\t\t\t\t\t[lon1, lat0],\n\t\t\t\t\t[lon1, lat1],\n\t\t\t\t\t[lon0, lat0],\n\t\t\t\t];\n\n\t\t\t\tfor (const p of quad) {\n\t\t\t\t\tconst position = sphericalToCartesian(p[0], p[1]);\n\t\t\t\t\tconst normal = normalize(position);\n\t\t\t\t\tconst vertex: SphereVertex = {\n\t\t\t\t\t\tposition,\n\t\t\t\t\t\tnormal,\n\t\t\t\t\t\tuv: sphericalToUV(p[0], p[1]),\n\t\t\t\t\t\tcolor: [1.0, 0.0, 0.0, 1.0],\n\t\t\t\t\t};\n\n\t\t\t\t\tdata[i++] = vertex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsuper(data);\n\t}\n}\n\nexport class CubeSphere extends Mesh<SphereVertex> {\n\tconstructor(res: number) {\n\t\tsuper([\n\t\t\tnew CubeSphereFace(res, [0, 1, 0]),\n\t\t\tnew CubeSphereFace(res, [0, -1, 0]),\n\n\t\t\tnew CubeSphereFace(res, [1, 0, 0]),\n\t\t\tnew CubeSphereFace(res, [-1, 0, 0]),\n\n\t\t\tnew CubeSphereFace(res, [0, 0, 1]),\n\t\t\tnew CubeSphereFace(res, [0, 0, -1]),\n\t\t]);\n\t}\n}\n\nexport class CubeSphereFace extends Geometry<SphereVertex> {\n\tconstructor(res: number, up: Point3) {\n\t\tconst data: SphereVertex[] = new Array(res * res);\n\t\tconst axisA: Point3 = [up[1], up[2], up[0]];\n\t\tconst axisB = cross(up, axisA);\n\n\t\tconst vertices = new Array(res * res);\n\t\tconst triangles = new Array((res - 1) * (res - 1));\n\n\t\tlet tri = 0;\n\t\tconst sub = 1 / (res - 1);\n\t\tfor (let y = 0; y < res; y++) {\n\t\t\tfor (let x = 0; x < res; x++) {\n\t\t\t\tconst p: Point2 = [x * sub, y * sub];\n\t\t\t\tconst hp = [(p[0] - 0.5) * 2.0, (p[1] - 0.5) * 2.0];\n\t\t\t\tlet position = up;\n\t\t\t\tposition = addVector3(position, multiplyVector3([hp[0], hp[0], hp[0]], axisA));\n\t\t\t\tposition = addVector3(position, multiplyVector3([hp[1], hp[1], hp[1]], axisB));\n\t\t\t\tposition = normalize(position);\n\t\t\t\tconst vertex: SphereVertex = {\n\t\t\t\t\tposition,\n\t\t\t\t\tnormal: position,\n\t\t\t\t\tuv: [0, 0],\n\t\t\t\t\tcolor: [1.0, 0.0, 0.0, 1.0],\n\t\t\t\t};\n\t\t\t\tconst i = x + y * res;\n\t\t\t\tvertices[i] = vertex;\n\n\t\t\t\tif (x < res - 1 && y < res - 1) {\n\t\t\t\t\ttriangles[tri++] = i;\n\t\t\t\t\ttriangles[tri++] = i + res + 1;\n\t\t\t\t\ttriangles[tri++] = i + res;\n\t\t\t\t\ttriangles[tri++] = i;\n\t\t\t\t\ttriangles[tri++] = i + 1;\n\t\t\t\t\ttriangles[tri++] = i + res + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < triangles.length; i++) {\n\t\t\tdata[i] = vertices[triangles[i]];\n\t\t}\n\t\tsuper(data);\n\t}\n}\n\nfunction sphericalToCartesian(lon: number, lat: number): Point3 {\n\treturn [Math.cos(lat) * Math.sin(lon), Math.sin(lat), Math.cos(lat) * Math.cos(lon)];\n}\n\nfunction sphericalToUV(lon: number, lat: number): Point2 {\n\tconst x = lon / Math.PI / 2 + 0.5;\n\tconst y = -lat / Math.PI + 0.5;\n\treturn [x, y];\n}\n","import { Mesh } from '../mesh';\nimport { Point3, Point2, Vector3 } from '../geom';\nimport { Color } from '../material';\n\nexport type Vertex = {\n\tposition: Point3;\n\tuv: Point2;\n\tcolor: Color;\n\tnormal: Vector3;\n};\n\nexport class Quad extends Mesh<Vertex> {\n\tconstructor() {\n\t\tsuper([\n\t\t\t{ position: [1.0, 1.0, 0.0], uv: [1.0, 0.0], color: [0.0, 0.0, 0.0, 1.0], normal: [0.0, 0.0, 1.0] },\n\t\t\t{ position: [-1.0, 1.0, 0.0], uv: [0.0, 0.0], color: [0.0, 0.0, 0.0, 1.0], normal: [0.0, 0.0, 1.0] },\n\t\t\t{ position: [1.0, -1.0, 0.0], uv: [1.0, 1.0], color: [0.0, 0.0, 0.0, 1.0], normal: [0.0, 0.0, 1.0] },\n\n\t\t\t{ position: [-1.0, -1.0, 0.0], uv: [0.0, 1.0], color: [0.0, 0.0, 0.0, 1.0], normal: [0.0, 0.0, 1.0] },\n\t\t\t{ position: [1.0, -1.0, 0.0], uv: [1.0, 1.0], color: [0.0, 0.0, 0.0, 1.0], normal: [0.0, 0.0, 1.0] },\n\t\t\t{ position: [-1.0, 1.0, 0.0], uv: [0.0, 0.0], color: [0.0, 0.0, 0.0, 1.0], normal: [0.0, 0.0, 1.0] },\n\t\t]);\n\t\tthis.calculateNormals();\n\t}\n}\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Matrix4","constructor","data","this","_data","Float32Array","i","static","cols","aspect","fov","near","far","fovRad","Math","PI","f","tan","range","x","y","z","axisangle","cosSin","axis","cos","sin","cosx","sinx","cosy","siny","cosz","sinz","rotx","roty","rotz","multiply","from","to","forward","normalize","right","cross","up","clone","toArray","Array","at","col","row","idx","column","d","columns","rows","other","colx","coly","colz","colw","multiplyVector4","fromColumns","vec","scaleVector4","w","transformPoint3","point","inverse","inv","m","extractTranslation","translation","extractScaling","scaling","extractRotation","rotation","eulerAngles","sy","sqrt","atan2","scale","addVector4","subtractVector4","scaleVector3","addVector3","subtractVector3","multiplyVector3","distanceVector3","diff","abs","magnitude","p0","p1","dot","v","norm","raySphereIntersection","center","radius","origin","direction","p","a","pow","b","delta","deltaSqrt","tmin","tmax","t","pointToLonLat","lat","acos","lon","lonLatToPoint","ll","Geometry","vertices","options","transform","identity","map","calculateNormals","length","position","p2","normal","Mesh","geom","geometries","isArray","g","vertexCount","count","vertex","Material","props","color","texture","normalMap","specularMap","displacementMap","displacementMultiplier","receivesShadows","castsShadows","emissive","wireframe","Component","StaticMesh","mesh","super","Actor","meshOrOptions","visible","components","model","uniforms","children","instances","Map","nextInstanceId","push","material","shader","instance","id","pawn","set","hasInstances","size","translationMatrix","rotationMatrix","pos","mat","rotationVector","getComponentsOfType","klass","filter","c","hasComponentOfType","Boolean","find","OrbitCamera","distance","target","resize","view","width","height","projection","perspective","zoom","amount","rotate","BasicCamera","updateModel","translate","trans","oldX","rot","invRot","newPosition","Renderer","camera","mousePosition","mouseMovement","wheelMovement","mouseButtons","Set","heldKeys","backgroundColor","updateSize","_width","_height","resetMouseMovement","addEventListener","_type","_listener","_options","removeEventListener","isDragging","WebGLShader","gl","vertSource","fragSource","compiled","attributes","type","WebGLRenderingContext","FLOAT","location","instanceAttributes","uTime","uViewProj","FLOAT_MAT4","uView","uModel","uFillColor","FLOAT_VEC4","uFogColor","uLineWidth","uResolution","FLOAT_VEC2","uSeed","make","program","createProgram","getExtension","vert","createShader","VERTEX_SHADER","shaderSource","attachShader","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","frag","FRAGMENT_SHADER","linkProgram","getProgramParameter","LINK_STATUS","info","getProgramInfoLog","name","uniformName","getUniformLocation","attributeName","getAttribLocation","enable","CULL_FACE","cullFace","BACK","use","useProgram","bind","bindBuffer","ARRAY_BUFFER","buffer","ext","attribute","vertexAttribDivisorANGLE","stride","offset","offsets","enableVertexAttribArray","vertexAttribPointer","disableVertexAttribArray","unbind","bindInstances","instanceBuffer","instanceStride","instanceOffsets","unbindInstances","setUniform","uniform","BOOL","uniform1i","uniform1f","uniform1fv","INT","uniform1iv","uniform2fv","FLOAT_VEC3","uniform3fv","uniform4fv","uniformMatrix4fv","WebGLMesh","upload","createBuffer","attributeNames","keys","sort","vertexSize","attr","num","bufferData","DYNAMIC_DRAW","uploadInstances","instanceSize","instanceLength","draw","drawArrays","TRIANGLES","drawLines","lineWidth","LINE_STRIP","drawInstances","drawArraysInstancedANGLE","ScaleFilter","Attachment","Texture","imageOrURL","minFilter","LINEAR","magFilter","putPixels","ImageData","Uint8ClampedArray","image","Image","src","putImage","HTMLImageElement","url","Promise","resolve","reject","e","complete","pixels","RenderTexture","attachment","COLOR","fill","FILTER_MAP","NEAREST","WebGLRendererTexture","level","internalFormat","RGBA","srcFormat","srcType","UNSIGNED_BYTE","createTexture","DEPTH","DEPTH_COMPONENT","UNSIGNED_INT","unusedColorTexture","unit","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","texImage2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","WebGLRenderTarget","COLOR_ATTACHMENT0","framebuffer","createFramebuffer","renderbuffer","createRenderbuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","DEPTH_ATTACHMENT","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","Light","ambient","diffuse","specular","constant","linear","quadratic","DEBUG_ENABLED","window","search","indexOf","WebGLRenderer","el","devicePixelRatio","antiAlias","vsync","lastFrameAt","frameAverage","frame","isGrabbed","seed","random","dragDelta","textures","meshes","renderTargets","onPointerLockChange","removeEventListeners","onKeyDown","add","toLowerCase","onKeyUp","delete","onMouseDown","button","onMouseUp","setTimeout","onMouseMove","movementX","movementY","clientX","clientY","onWheel","wheelDelta","preventDefault","dx","dy","detail","HORIZONTAL_AXIS","deltaX","deltaY","HTMLCanvasElement","canvas","document","createElement","HTMLElement","attach","assign","style","left","top","bottom","parentElement","context","antialias","getContext","innerHTML","clientWidth","clientHeight","initWebGL","DEPTH_TEST","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","defaultShader","grab","lock","requestPointerLock","addEventListeners","release","exitPointerLock","passive","clear","clearDepth","clearColor","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","drawActorWithShader","actor","parentModel","actorModel","glMesh","uploadMesh","child","drawActor","performance","now","uploadMeshInstances","removeMesh","uploadTexture","glTexture","fromTexture","unbindTexture","drawScene","scene","dt","drawSync","frameRate","fps","debugEl","requestAnimationFrame","viewport","proj","viewProj","shaderMap","actors","lightCount","lights","light","parentWidth","parentHeight","imageRendering","setAttribute","toString","listener","appendChild","borderRadius","zIndex","fontSize","background","padding","Scene","renderer","uShadowMap","uLight","uLightDir","addActor","uploadActor","component","addTexture","uploadActorInstances","values","getIdOfTexture","entries","updateTexture","textureOrId","castShadows","updateShadowMap","updateLightView","createShadowMap","shadowMap","hiddenActors","disableShadows","oldCamera","enableShadows","lightDir","MaterialShader","lightUniforms","uLightCount","uv","uTexture","uNormalMap","SphereMaterialShader","SpriteShader","uSampler","uContrast","SimpleShader","Obj","normals","uvs","faces","line","split","parseObjVertex","parseObjFace","parseObjUV","parseObjNormal","flat","parseObj","flipFaces","v0","v1","response","fetch","text","s","slice","parseFloat","parseInt","Cube","FACE_VERTICES","FACE_UV","Sphere","lonSegments","latSegments","lat0","lat1","lon0","lon1","quad","sphericalToUV","CubeSphere","res","CubeSphereFace","axisA","axisB","triangles","tri","sub","hp","Quad"],"sourceRoot":""}