{"version":3,"sources":["webpack://toru/webpack/universalModuleDefinition","webpack://toru/./src/geom.ts","webpack://toru/./src/mesh.ts","webpack://toru/./src/material.ts","webpack://toru/./src/component.ts","webpack://toru/./src/components/static_mesh.ts","webpack://toru/./src/actor.ts","webpack://toru/./src/camera.ts","webpack://toru/./src/renderer/renderer.ts","webpack://toru/./src/renderer/webgl_shader.ts","webpack://toru/./src/renderer/webgl_mesh.ts","webpack://toru/./src/texture.ts","webpack://toru/./src/render_texture.ts","webpack://toru/./src/renderer/webgl_texture.ts","webpack://toru/./src/renderer/webgl_render_target.ts","webpack://toru/./src/components/light.ts","webpack://toru/./src/renderer/webgl_renderer.ts","webpack://toru/./src/shaders/wireframe.vert.glsl","webpack://toru/./src/shaders/wireframe.frag.glsl","webpack://toru/./src/scene.ts","webpack://toru/./src/light.ts","webpack://toru/./src/shaders/material.ts","webpack://toru/./src/shaders/material.vert.glsl","webpack://toru/./src/shaders/material.frag.glsl","webpack://toru/./src/shaders/material_sphere.vert.glsl","webpack://toru/./src/shaders/material_sphere.frag.glsl","webpack://toru/./src/shaders/sprite.ts","webpack://toru/./src/shaders/sprite.vert.glsl","webpack://toru/./src/shaders/sprite.frag.glsl","webpack://toru/./src/shaders/simple.ts","webpack://toru/./src/shaders/simple.vert.glsl","webpack://toru/./src/shaders/simple.frag.glsl","webpack://toru/./src/meshes/obj.ts","webpack://toru/./src/meshes/cube.ts","webpack://toru/./src/meshes/sphere.ts","webpack://toru/./src/meshes/quad.ts","webpack://toru/webpack/bootstrap","webpack://toru/webpack/startup","webpack://toru/webpack/runtime/define property getters","webpack://toru/webpack/runtime/hasOwnProperty shorthand","webpack://toru/webpack/runtime/make namespace object"],"names":["root","factory","exports","module","define","amd","self","Matrix4","data","this","_data","Float32Array","i","cols","aspect","fov","near","far","fovRad","Math","PI","f","tan","range","x","y","z","axisangle","cosSin","axis","cos","sin","cosx","sinx","cosy","siny","cosz","sinz","rotx","roty","rotz","multiply","from","to","forward","normalize","right","cross","up","Array","col","row","idx","d","o","column","other","colx","coly","colz","colw","columns","multiplyVector4","fromColumns","vec","scaleVector4","w","point","inv","m","toArray","translation","scaling","rotation","sy","sqrt","at","atan2","scale","addVector4","scaleVector3","addVector3","multiplyVector3","p0","p1","dot","v","norm","magnitude","raySphereIntersection","center","radius","origin","direction","p","a","pow","b","delta","deltaSqrt","tmin","tmax","t","pointToLonLat","lat","acos","lon","Geometry","vertices","options","transform","identity","map","clone","length","position","p2","normal","Mesh","geom","geometries","isArray","g","count","vertexCount","vertex","transformPoint3","calculateNormals","Material","props","color","texture","normalMap","specularMap","displacementMap","displacementMultiplier","receivesShadows","castsShadows","emissive","Component","StaticMesh","mesh","super","Actor","meshOrOptions","visible","components","model","uniforms","children","instances","Map","nextInstanceId","push","material","shader","id","instance","pawn","set","size","extractTranslation","extractRotation","pos","mat","klass","filter","c","Boolean","find","OrbitCamera","distance","target","resize","width","height","projection","perspective","amount","BasicCamera","rotationMatrix","view","updateModel","trans","rotationVector","oldX","rot","invRot","inverse","newPosition","Renderer","camera","mousePosition","mouseMovement","wheelMovement","mouseButtons","Set","heldKeys","backgroundColor","_width","_height","_type","_listener","_options","WebGLShader","gl","vertSource","fragSource","compiled","attributes","type","WebGLRenderingContext","FLOAT","location","instanceAttributes","uTime","uViewProj","FLOAT_MAT4","uView","uModel","uFillColor","FLOAT_VEC4","uFogColor","uLineWidth","uResolution","FLOAT_VEC2","uSeed","make","program","createProgram","getExtension","vert","createShader","VERTEX_SHADER","shaderSource","attachShader","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","frag","FRAGMENT_SHADER","linkProgram","getProgramParameter","LINK_STATUS","info","getProgramInfoLog","constructor","name","uniformName","getUniformLocation","attributeName","getAttribLocation","enable","CULL_FACE","cullFace","BACK","useProgram","bindBuffer","ARRAY_BUFFER","buffer","ext","attribute","vertexAttribDivisorANGLE","stride","offset","offsets","get","enableVertexAttribArray","vertexAttribPointer","disableVertexAttribArray","instanceBuffer","instanceStride","instanceOffsets","value","uniform","BOOL","uniform1i","uniform1f","INT","uniform2fv","FLOAT_VEC3","uniform3fv","uniform4fv","uniformMatrix4fv","WebGLMesh","createBuffer","attributeNames","Object","keys","sort","vertexSize","attr","num","bind","bufferData","DYNAMIC_DRAW","instanceSize","instanceLength","drawArrays","TRIANGLES","drawArraysInstancedANGLE","ScaleFilter","Attachment","Texture","imageOrURL","minFilter","LINEAR","magFilter","putPixels","ImageData","Uint8ClampedArray","image","Image","src","putImage","HTMLImageElement","url","Promise","resolve","reject","addEventListener","e","complete","pixels","RenderTexture","attachment","COLOR","fill","FILTER_MAP","NEAREST","WebGLRendererTexture","level","internalFormat","RGBA","srcFormat","srcType","UNSIGNED_BYTE","createTexture","DEPTH","DEPTH_COMPONENT","UNSIGNED_INT","unusedColorTexture","unit","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","texImage2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","WebGLRenderTarget","COLOR_ATTACHMENT0","framebuffer","createFramebuffer","renderbuffer","createRenderbuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","DEPTH_ATTACHMENT","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","Light","ambient","diffuse","specular","constant","linear","quadratic","DEBUG_ENABLED","window","search","indexOf","WebGLRenderer","el","devicePixelRatio","lineWidth","antiAlias","vsync","lastFrameAt","frameAverage","frame","isGrabbed","seed","random","dragDelta","textures","meshes","renderTargets","onPointerLockChange","removeEventListeners","onKeyDown","add","key","toLowerCase","onKeyUp","delete","onMouseDown","button","onMouseUp","setTimeout","onMouseMove","movementX","movementY","clientX","clientY","onWheel","wheelDelta","preventDefault","dx","dy","detail","HORIZONTAL_AXIS","deltaX","deltaY","HTMLCanvasElement","canvas","document","createElement","HTMLElement","attach","assign","style","left","top","bottom","abs","parentElement","context","antialias","getContext","innerHTML","clientWidth","clientHeight","DEPTH_TEST","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","defaultShader","lock","requestPointerLock","addEventListeners","exitPointerLock","passive","clear","removeEventListener","clearDepth","clearColor","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","actor","parentModel","actorModel","setUniform","getComponentsOfType","glMesh","uploadMesh","hasInstances","bindInstances","drawInstances","draw","child","drawActorWithShader","use","performance","now","drawActor","upload","uploadInstances","glTexture","fromTexture","uploadTexture","unbind","scene","dt","drawSync","frameRate","fps","debugEl","requestAnimationFrame","updateSize","viewport","proj","viewProj","shaderMap","actors","lightCount","lights","light","parentWidth","parentHeight","imageRendering","setAttribute","toString","listener","appendChild","initWebGL","borderRadius","zIndex","fontSize","background","padding","Scene","renderer","uShadowMap","uLight","uLightDir","uploadActor","hasComponentOfType","component","addTexture","uploadActorInstances","values","uploadMeshInstances","entries","textureOrId","getIdOfTexture","unbindTexture","castShadows","updateShadowMap","updateLightView","drawScene","shadowMap","createShadowMap","hiddenActors","disableShadows","oldCamera","enableShadows","lightDir","MaterialShader","lightUniforms","uLightCount","uv","uTexture","uNormalMap","SphereMaterialShader","SpriteShader","uSampler","uContrast","SimpleShader","Obj","normals","uvs","faces","line","split","parseObjVertex","parseObjFace","parseObjUV","parseObjNormal","flat","parseObj","flipFaces","v0","v1","response","fetch","text","s","slice","parseFloat","parseInt","Cube","FACE_VERTICES","FACE_UV","Sphere","lonSegments","latSegments","lat0","lat1","lon0","lon1","quad","sphericalToUV","CubeSphere","res","CubeSphereFace","axisA","axisB","triangles","tri","sub","hp","Quad","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","definition","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAc,KAAID,IAElBD,EAAW,KAAIC,IARjB,CASGK,MAAM,WACT,M,suBCGO,MAAMC,EAGZ,YAAYC,GAEX,GADAC,KAAKC,MAAQ,IAAIC,aAAa,IAC1BH,EACH,IAAK,IAAII,EAAI,EAAGA,EAAI,GAAIA,IACvBH,KAAKC,MAAME,GAAKJ,EAAKI,GAKxB,kBACC,OAAO,IAAIL,EAAQ,CAClB,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,IAIX,mBAAmBM,GAClB,OAAO,IAAIN,EAAQ,CAClBM,EAAK,GAAG,GAAIA,EAAK,GAAG,GAAIA,EAAK,GAAG,GAAIA,EAAK,GAAG,GAC5CA,EAAK,GAAG,GAAIA,EAAK,GAAG,GAAIA,EAAK,GAAG,GAAIA,EAAK,GAAG,GAC5CA,EAAK,GAAG,GAAIA,EAAK,GAAG,GAAIA,EAAK,GAAG,GAAIA,EAAK,GAAG,GAC5CA,EAAK,GAAG,GAAIA,EAAK,GAAG,GAAIA,EAAK,GAAG,GAAIA,EAAK,GAAG,KAI9C,mBAAmBC,EAAgBC,EAAaC,EAAcC,GAC7D,MAAMC,EAASH,GAAOI,KAAKC,GAAK,KAC1BC,EAAI,EAAMF,KAAKG,IAAIJ,EAAS,GAC5BK,EAAQ,GAAOP,EAAOC,GAC5B,OAAO,IAAIV,EAAQ,CAClBc,EAAIP,EAAQ,EAAsB,EAAwB,EAC1D,EAAYO,EAAsB,EAAwB,EAC1D,EAAY,GAAIL,EAAOC,GAAOM,EAAOP,EAAOC,EAAMM,EAAQ,EAC1D,EAAY,GAAsB,EAAwB,IAI5D,gBAAgBC,EAAWC,EAAWC,GACrC,MAAMC,EAAqB,CAACH,EAAGC,EAAGC,GAElC,SAASE,EAAOC,GACf,MAAO,CAACV,KAAKW,IAAIH,EAAUE,IAAQV,KAAKY,IAAIJ,EAAUE,KAIvD,MAAOG,EAAMC,GAAQL,EAAO,IACrBM,EAAMC,GAAQP,EAAO,IACrBQ,EAAMC,GAAQT,EAAO,GACtBU,EAAO,IAAI/B,EAAQ,CACxB,EAAM,EAAO,EAAG,EAChB,EAAGyB,GAAOC,EAAM,EAChB,EAAGA,EAAOD,EAAM,EAChB,EAAM,EAAO,EAAG,IAEXO,EAAO,IAAIhC,EAAQ,CACxB2B,EAAO,EAAGC,EAAM,EACb,EAAI,EAAM,EAAG,GACfA,EAAM,EAAGD,EAAM,EACZ,EAAG,EAAM,EAAG,IAEXM,EAAO,IAAIjC,EAAQ,CACxB6B,GAAOC,EAAM,EAAG,EAChBA,EAAOD,EAAM,EAAG,EACb,EAAO,EAAG,EAAG,EACb,EAAO,EAAG,EAAG,IAGjB,OAAOE,EAAKG,SAASF,EAAKE,SAASD,IAGpC,mBAAmBhB,EAAWC,EAAWC,GACxC,OAAO,IAAInB,EAAQ,CAClB,EAAG,EAAG,EAAGiB,EACT,EAAG,EAAG,EAAGC,EACT,EAAG,EAAG,EAAGC,EACT,EAAG,EAAG,EAAG,IAIX,eAAeF,EAAWC,EAAYC,GAIrC,OAHS,MAALD,IAAWA,EAAID,GACV,MAALE,IAAWA,EAAID,GAEZ,IAAIlB,EAAQ,CAClBiB,EAAG,EAAG,EAAG,EACT,EAAGC,EAAG,EAAG,EACT,EAAG,EAAGC,EAAG,EACT,EAAG,EAAG,EAAG,IAIX,cAAcgB,EAAcC,GAC3B,MAAMC,EAAUC,EAAU,CACzBH,EAAK,GAAKC,EAAG,GACbD,EAAK,GAAKC,EAAG,GACbD,EAAK,GAAKC,EAAG,KAGRG,EAAQC,EAAM,CAAC,EAAK,EAAK,GAAMH,GAE/BI,EAAKD,EAAMH,EAASE,GAS1B,OAPa,IAAIvC,EAAQ,CACxBuC,EAAM,GAAIE,EAAG,GAAIJ,EAAQ,GAAIF,EAAK,GAClCI,EAAM,GAAIE,EAAG,GAAIJ,EAAQ,GAAIF,EAAK,GAClCI,EAAM,GAAIE,EAAG,GAAIJ,EAAQ,GAAIF,EAAK,GAC1B,EAAQ,EAAW,EAAS,IAMtC,QACC,OAAO,IAAInC,EAAQE,KAAKC,OAGzB,UACC,OAAOuC,MAAMP,KAAKjC,KAAKC,OAGxB,GAAGwC,EAAaC,GACf,MAAMC,EAAY,EAAND,EAAUD,EACtB,OAAOzC,KAAKC,MAAM0C,GAGnB,OAAOvB,GACN,MAAMwB,EAAI5C,KAAKC,MACf,MAAO,CACN2C,EAAExB,EAAO,GACTwB,EAAExB,EAAO,GACTwB,EAAExB,EAAO,GACTwB,EAAExB,EAAO,KAIX,IAAIA,GACH,MAAMwB,EAAI5C,KAAKC,MACT4C,EAAI,EAAIzB,EACd,MAAO,CACNwB,EAAEC,EAAI,GACND,EAAEC,EAAI,GACND,EAAEC,EAAI,GACND,EAAEC,EAAI,IAIR,cACC,MAAO,CACN7C,KAAK8C,OAAO,GACZ9C,KAAK8C,OAAO,GACZ9C,KAAK8C,OAAO,GACZ9C,KAAK8C,OAAO,IAId,WACC,MAAO,CACN9C,KAAK0C,IAAI,GACT1C,KAAK0C,IAAI,GACT1C,KAAK0C,IAAI,GACT1C,KAAK0C,IAAI,IAIX,SAASK,GACR,MAAOC,EAAMC,EAAMC,EAAMC,GAAQJ,EAAMK,QACjCA,EAAmB,CACxBpD,KAAKqD,gBAAgBL,GACrBhD,KAAKqD,gBAAgBJ,GACrBjD,KAAKqD,gBAAgBH,GACrBlD,KAAKqD,gBAAgBF,IAEtB,OAAOrD,EAAQwD,YAAYF,GAG5B,gBAAgBG,GACf,MAAMnD,EAAOJ,KAAKoD,QAEZrC,EAAIyC,EAAapD,EAAK,GAAImD,EAAI,IAC9BvC,EAAIwC,EAAapD,EAAK,GAAImD,EAAI,IAC9BtC,EAAIuC,EAAapD,EAAK,GAAImD,EAAI,IAC9BE,EAAID,EAAapD,EAAK,GAAImD,EAAI,IACpC,MAAO,CACLxC,EAAE,GAAKC,EAAE,GAAKC,EAAE,GAAKwC,EAAE,GACvB1C,EAAE,GAAKC,EAAE,GAAKC,EAAE,GAAKwC,EAAE,GACvB1C,EAAE,GAAKC,EAAE,GAAKC,EAAE,GAAKwC,EAAE,GACvB1C,EAAE,GAAKC,EAAE,GAAKC,EAAE,GAAKwC,EAAE,IAI1B,gBAAgBC,GACf,MAAMH,EAAMvD,KAAKqD,gBAAgB,CAACK,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAI,IAEhE,MAAO,CACNH,EAAI,GAAKA,EAAI,GACbA,EAAI,GAAKA,EAAI,GACbA,EAAI,GAAKA,EAAI,IAIf,UACC,MAAMI,EAAM,IAAInB,MAAM,IAChBoB,EAAI5D,KAAK6D,UAmHf,OAjHAF,EAAI,GAAKC,EAAE,GAAGA,EAAE,IAAIA,EAAE,IACrBA,EAAE,GAAGA,EAAE,IAAIA,EAAE,IACbA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACZA,EAAE,GAAGA,EAAE,IAAIA,EAAE,IACbA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACZA,EAAE,GAAGA,EAAE,IAAIA,EAAE,IAEdD,EAAI,IAAMC,EAAE,GAAGA,EAAE,IAAIA,EAAE,IACtBA,EAAE,GAAGA,EAAE,IAAIA,EAAE,IACbA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACZA,EAAE,GAAGA,EAAE,IAAIA,EAAE,IACbA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACZA,EAAE,GAAGA,EAAE,IAAIA,EAAE,IAEdD,EAAI,GAAKC,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACpBA,EAAE,GAAGA,EAAE,IAAIA,EAAE,GACbA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACZA,EAAE,GAAGA,EAAE,IAAIA,EAAE,GACbA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACZA,EAAE,GAAGA,EAAE,IAAIA,EAAE,GAEdD,EAAI,IAAMC,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACrBA,EAAE,GAAGA,EAAE,IAAIA,EAAE,GACbA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACZA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GACZA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACZA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAEbD,EAAI,IAAMC,EAAE,GAAGA,EAAE,IAAIA,EAAE,IACtBA,EAAE,GAAGA,EAAE,IAAIA,EAAE,IACbA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACZA,EAAE,GAAGA,EAAE,IAAIA,EAAE,IACbA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACZA,EAAE,GAAGA,EAAE,IAAIA,EAAE,IAEdD,EAAI,GAAKC,EAAE,GAAGA,EAAE,IAAIA,EAAE,IACrBA,EAAE,GAAGA,EAAE,IAAIA,EAAE,IACbA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACZA,EAAE,GAAGA,EAAE,IAAIA,EAAE,IACbA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACZA,EAAE,GAAGA,EAAE,IAAIA,EAAE,IAEdD,EAAI,IAAMC,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACrBA,EAAE,GAAGA,EAAE,IAAIA,EAAE,GACbA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACZA,EAAE,GAAGA,EAAE,IAAIA,EAAE,GACbA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACZA,EAAE,GAAGA,EAAE,IAAIA,EAAE,GAEdD,EAAI,GAAKC,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACpBA,EAAE,GAAGA,EAAE,IAAIA,EAAE,GACbA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACZA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GACZA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACZA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAEbD,EAAI,GAAKC,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACpBA,EAAE,GAAGA,EAAE,IAAIA,EAAE,IACbA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACZA,EAAE,GAAGA,EAAE,IAAIA,EAAE,IACbA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACZA,EAAE,GAAGA,EAAE,IAAIA,EAAE,GAEdD,EAAI,IAAMC,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACrBA,EAAE,GAAGA,EAAE,IAAIA,EAAE,IACbA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACZA,EAAE,GAAGA,EAAE,IAAIA,EAAE,IACbA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACZA,EAAE,GAAGA,EAAE,IAAIA,EAAE,GAEdD,EAAI,IAAMC,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACrBA,EAAE,GAAGA,EAAE,IAAIA,EAAE,GACbA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACZA,EAAE,GAAGA,EAAE,IAAIA,EAAE,GACbA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACZA,EAAE,GAAGA,EAAE,IAAIA,EAAE,GAEdD,EAAI,KAAOC,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACtBA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GACZA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACZA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GACZA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GACZA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAEbD,EAAI,KAAOC,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACtBA,EAAE,GAAGA,EAAE,IAAIA,EAAE,IACbA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACZA,EAAE,GAAGA,EAAE,IAAIA,EAAE,IACbA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACZA,EAAE,GAAGA,EAAE,IAAIA,EAAE,GAEdD,EAAI,IAAMC,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACrBA,EAAE,GAAGA,EAAE,IAAIA,EAAE,IACbA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACZA,EAAE,GAAGA,EAAE,IAAIA,EAAE,IACbA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACZA,EAAE,GAAGA,EAAE,IAAIA,EAAE,GAEdD,EAAI,KAAOC,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACtBA,EAAE,GAAGA,EAAE,IAAIA,EAAE,GACbA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACZA,EAAE,GAAGA,EAAE,IAAIA,EAAE,GACbA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACZA,EAAE,GAAGA,EAAE,IAAIA,EAAE,GAEdD,EAAI,IAAMC,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACrBA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GACZA,EAAE,GAAGA,EAAE,GAAGA,EAAE,IACZA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GACZA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GACZA,EAAE,GAAGA,EAAE,GAAGA,EAAE,GAGF,GADCA,EAAE,GAAGD,EAAI,GAAKC,EAAE,GAAGD,EAAI,GAAKC,EAAE,GAAGD,EAAI,GAAKC,EAAE,IAAID,EAAI,IAExD,KAGD,IAAI7D,EAAQ6D,GAGpB,qBACC,MAAM5C,EAAIf,KAAKC,MAAM,GACfe,EAAIhB,KAAKC,MAAM,GACfgB,EAAIjB,KAAKC,MAAM,IACrB,OAAOH,EAAQgE,YAAY/C,EAAGC,EAAGC,GAGlC,iBAIC,OAAOnB,EAAQiE,QAHL,EACA,EACA,GAIX,kBAIC,OAAOjE,EAAQkE,SAHL,EACA,EACA,GAIX,cACC,MAAMC,EAAKvD,KAAKwD,KAAKlE,KAAKmE,GAAG,EAAG,GAAKnE,KAAKmE,GAAG,EAAG,GAAKnE,KAAKmE,GAAG,EAAG,GAAKnE,KAAKmE,GAAG,EAAG,IAGhF,IAAIpD,EAAI,EACJC,EAAI,EACJC,EAAI,EAYR,OAhBiBgD,EAAK,MAOrBlD,EAAIL,KAAK0D,MAAMpE,KAAKmE,GAAG,EAAG,GAAInE,KAAKmE,GAAG,EAAG,IACzCnD,EAAIN,KAAK0D,MAAMpE,KAAKmE,GAAG,EAAG,GAAIF,GAC9BhD,EAAI,IAEJF,EAAIL,KAAK0D,OAAOpE,KAAKmE,GAAG,EAAG,GAAInE,KAAKmE,GAAG,EAAG,IAC1CnD,EAAIN,KAAK0D,MAAMpE,KAAKmE,GAAG,EAAG,GAAIF,GAC9BhD,EAAIP,KAAK0D,OAAOpE,KAAKmE,GAAG,EAAG,GAAInE,KAAKmE,GAAG,EAAG,KAGpC,CAACpD,EAAGC,EAAGC,IAIT,SAASuC,EAAaD,EAAcc,GAC1C,MAAO,CAACd,EAAI,GAAKc,EAAOd,EAAI,GAAKc,EAAOd,EAAI,GAAKc,EAAOd,EAAI,GAAKc,GAG3D,SAASC,EAAWf,EAAcR,GACxC,MAAO,CAACQ,EAAI,GAAKR,EAAM,GAAIQ,EAAI,GAAKR,EAAM,GAAIQ,EAAI,GAAKR,EAAM,GAAIQ,EAAI,GAAKR,EAAM,IAG1E,SAASM,EAAgBE,EAAcR,GAC7C,MAAO,CAACQ,EAAI,GAAKR,EAAM,GAAIQ,EAAI,GAAKR,EAAM,GAAIQ,EAAI,GAAKR,EAAM,GAAIQ,EAAI,GAAKR,EAAM,IAG1E,SAASwB,EAAahB,EAAcc,GAC1C,MAAO,CAACd,EAAI,GAAKc,EAAOd,EAAI,GAAKc,EAAOd,EAAI,GAAKc,GAG3C,SAASG,EAAWjB,EAAcR,GACxC,MAAO,CAACQ,EAAI,GAAKR,EAAM,GAAIQ,EAAI,GAAKR,EAAM,GAAIQ,EAAI,GAAKR,EAAM,IAGvD,SAAS0B,EAAgBlB,EAAcR,GAC7C,MAAO,CAACQ,EAAI,GAAKR,EAAM,GAAIQ,EAAI,GAAKR,EAAM,GAAIQ,EAAI,GAAKR,EAAM,IAGvD,SAAST,EAAMoC,EAAaC,GAIlC,MAAO,CAHGD,EAAG,GAAKC,EAAG,GAAKD,EAAG,GAAKC,EAAG,GAC3BD,EAAG,GAAKC,EAAG,GAAKD,EAAG,GAAKC,EAAG,GAC3BD,EAAG,GAAKC,EAAG,GAAKD,EAAG,GAAKC,EAAG,IAI/B,SAASC,EAAIF,EAAaC,GAIhC,OAHUD,EAAG,GAAKC,EAAG,GACXD,EAAG,GAAKC,EAAG,GACXD,EAAG,GAAKC,EAAG,GAIf,SAASvC,EAAUyC,GACzB,MAAMC,EAAOC,EAAUF,GACvB,MAAO,CAACA,EAAE,GAAKC,EAAMD,EAAE,GAAKC,EAAMD,EAAE,GAAKC,GAGnC,SAASC,EAAUF,GACzB,OAAOnE,KAAKwD,KAAKW,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,GAAKA,EAAE,IAGhD,SAASG,EAAsBC,EAAgBC,EAAgBC,EAAgBC,GACrF,MAAMC,EAAa,CAClBF,EAAO,GAAKF,EAAO,GACnBE,EAAO,GAAKF,EAAO,GACnBE,EAAO,GAAKF,EAAO,IAGdK,EAAI5E,KAAK6E,IAAIR,EAAUK,GAAY,GACnCI,EAAIZ,EAAIQ,EAAWC,GAEnBI,EAAQD,EAAIA,EAAIF,GADZ5E,KAAK6E,IAAIR,EAAUM,GAAI,GAAKH,EAASA,GAE/C,GAAIO,EAAQ,EACX,OAAO,KAGR,MAAMC,EAAYhF,KAAKwD,KAAKuB,GAEtBE,IAASH,EAAIE,GAAaJ,EAC1BM,IAASJ,EAAIE,GAAaJ,EAEhC,GAAIM,EAAO,EACV,OAAO,KAGR,MAAMC,EAAIF,GAAQ,EAAIA,EAAOC,EAE7B,MAAO,CACNT,EAAO,GAAKU,EAAIT,EAAU,GAC1BD,EAAO,GAAKU,EAAIT,EAAU,GAC1BD,EAAO,GAAKU,EAAIT,EAAU,IAIrB,SAASU,EAAcpC,GAC7B,MAAMmB,EAAIzC,EAAUsB,GACd2B,EAAIjD,EAAU,CAACyC,EAAE,GAAI,EAAGA,EAAE,KAChC,IAAIkB,EAAMrF,KAAKsF,KAAKpB,EAAIS,EAAGR,IACvBA,EAAE,GAAK,IACVkB,IAAQ,GAET,IAAIE,GAAOvF,KAAK0D,OAAOS,EAAE,IAAKA,EAAE,IAAMnE,KAAKC,GAAK,EAMhD,OALIsF,GAAOvF,KAAKC,KACfsF,GAAiB,EAAVvF,KAAKC,IAIN,CAACsF,EAAKF,GCtdP,MAAMG,EAIZ,YAAYC,EAAgBC,GAH5B,KAAAD,SAAgB,GAChB,KAAAE,UAAqBvG,EAAQwG,WAGxBH,IACHnG,KAAKmG,SAAW,IAAIA,KAEjBC,aAAO,EAAPA,EAASC,aACZrG,KAAKqG,UAAYD,EAAQC,WAI3B,QACC,OAAO,IAAIH,EACVlG,KAAKmG,SAASI,KAAK1B,GAAO,OAAD,UAAMA,KAC/B,CAAEwB,UAAWrG,KAAKqG,UAAUG,UAI9B,mBACC,GAA6B,IAAzBxG,KAAKmG,SAASM,OAAc,OAChC,MAAMN,EAAWnG,KAAKmG,SAEtB,KAAM,WAAYA,EAAS,IAC1B,KAAM,oDAGP,IAAK,IAAIhG,EAAI,EAAGA,EAAIH,KAAKmG,SAASM,OAAQtG,GAAK,EAAG,CACjD,MAAMuE,EAAKyB,EAAShG,EAAI,GAAGuG,SACrB/B,EAAKwB,EAAShG,EAAI,GAAGuG,SACrBC,EAAKR,EAAShG,EAAI,GAAGuG,SAIrBE,EAASxE,EAAUE,EAFL,CAACqC,EAAG,GAAKD,EAAG,GAAIC,EAAG,GAAKD,EAAG,GAAIC,EAAG,GAAKD,EAAG,IAC1C,CAACiC,EAAG,GAAKjC,EAAG,GAAIiC,EAAG,GAAKjC,EAAG,GAAIiC,EAAG,GAAKjC,EAAG,MAE9DyB,EAAShG,EAAI,GAAGyG,OAASA,EACzBT,EAAShG,EAAI,GAAGyG,OAASA,EACzBT,EAAShG,EAAI,GAAGyG,OAASA,IAKrB,MAAMC,EAGZ,YAAYC,GAFZ,KAAAC,WAA4B,GAGvBD,IACCtE,MAAMwE,QAAQF,GACG,IAAhBA,EAAKL,QAAgBK,EAAK,aAAcZ,EAC3ClG,KAAK+G,WAAa,IAAID,GAEtB9G,KAAK+G,WAAa,CAAC,IAAIb,EAASY,IAGjC9G,KAAK+G,WAAa,CAACD,IAKtB,QACC,OAAO,IAAID,EAAK7G,KAAK+G,WAAWR,KAAKU,GAAMA,EAAET,WAG9C,kBACC,IAAIU,EAAQ,EACZ,IAAK,MAAMJ,KAAQ9G,KAAK+G,WACvBG,GAASJ,EAAKX,SAASM,OAExB,OAAOS,EAGR,eAEC,MAAMnH,EAAY,IAAIyC,MAAMxC,KAAKmH,aAEjC,IAAIhH,EAAI,EACR,IAAK,MAAM2G,KAAQ9G,KAAK+G,WACvB,IAAK,MAAMK,KAAUN,EAAKX,SACzBpG,EAAKI,GAAK,OAAH,wBACHiH,GAAM,CACTV,SAAUI,EAAKT,UAAUgB,gBAAgBD,EAAOV,YAEjDvG,IAIF,OAAOJ,EAGR,mBACC,IAAK,MAAM+G,KAAQ9G,KAAK+G,WACvBD,EAAKQ,oBCpFD,MAAMC,EAWZ,YAAYC,GAVZ,KAAAC,MAAe,CAAC,EAAK,EAAK,EAAK,GAC/B,KAAAC,QAAoB,KACpB,KAAAC,UAAsB,KACtB,KAAAC,YAAwB,KACxB,KAAAC,gBAA4B,KAC5B,KAAAC,uBAAyB,EACzB,KAAAC,iBAAkB,EAClB,KAAAC,cAAe,EACf,KAAAC,UAAW,EAGU,OAAhBT,aAAK,EAALA,EAAOC,SACVzH,KAAKyH,MAAQD,EAAMC,OAEE,OAAlBD,aAAK,EAALA,EAAOE,WACV1H,KAAK0H,QAAUF,EAAME,SAEE,OAApBF,aAAK,EAALA,EAAOG,aACV3H,KAAK2H,UAAYH,EAAMG,WAEE,OAAtBH,aAAK,EAALA,EAAOI,eACV5H,KAAK4H,YAAcJ,EAAMI,aAEI,OAA1BJ,aAAK,EAALA,EAAOK,mBACV7H,KAAK6H,gBAAkBL,EAAMK,iBAEO,OAAjCL,aAAK,EAALA,EAAOM,0BACV9H,KAAK8H,uBAAyBN,EAAMM,wBAEP,OAA1BN,aAAK,EAALA,EAAOO,mBACV/H,KAAK+H,gBAAkBP,EAAMO,iBAEH,OAAvBP,aAAK,EAALA,EAAOQ,gBACVhI,KAAKgI,aAAeR,EAAMQ,cAEJ,OAAnBR,aAAK,EAALA,EAAOS,YACVjI,KAAKiI,SAAWT,EAAMS,WCrDlB,MAAMC,GCGN,MAAMC,UAAmBD,EAG/B,YAAYE,GACXC,QACArI,KAAKoI,KAAOA,GCiBP,MAAME,EAWZ,YAAYC,EAAuDnC,EAAwB,IAV3F,KAAAoC,SAAmB,EACnB,KAAAC,WAA0B,GAC1B,KAAAC,MAAiB5I,EAAQwG,WAGzB,KAAAqC,SAA0B,GAC1B,KAAAC,SAAoB,GACpB,KAAAC,UAAwC,IAAIC,IACpC,KAAAC,eAAiB,EAGpBR,aAAyB/F,MAC5BxC,KAAK4I,SAAWL,EACNA,aAAyB1B,EACnC7G,KAAKyI,WAAWO,KAAK,IAAIb,EAAWI,IAEH,iBAAlBA,IACfnC,EAAUmC,GAGX,MAAMU,EAAW7C,EAAQ6C,UAAY,IAAI1B,EACzC0B,EAASxB,MAAQrB,EAAQqB,OAASwB,EAASxB,MAE3CzH,KAAKiJ,SAAWA,EAGZ7C,EAAQsC,QACX1I,KAAK0I,MAAQtC,EAAQsC,OAGlBtC,EAAQ8C,SACXlJ,KAAKkJ,OAAS9C,EAAQ8C,QAGnB9C,EAAQuC,WACX3I,KAAK2I,SAAW,OAAH,wBACT3I,KAAK2I,UACLvC,EAAQuC,WAITvC,EAAQqC,aACXzI,KAAKyI,WAAa,IACdzI,KAAKyI,cACLrC,EAAQqC,aAKd,SAAS1I,GACR,MAAMoJ,EAAKnJ,KAAK+I,iBAEVK,EAAW,CAChBD,KACAE,KAAMrJ,KACND,KAAM,OAAF,UAAOA,IAIZ,OAFAC,KAAK6I,UAAUS,IAAIH,EAAIC,GAEhBD,EAGR,mBACC,OAA+B,IAAxBnJ,KAAK6I,UAAUU,KAGvB,wBACC,OAAOvJ,KAAK0I,MAAMc,qBAGnB,qBACC,OAAOxJ,KAAK0I,MAAMe,kBAGnB,eACC,OAAOzJ,KAAK0I,MAAMrB,gBAAgB,CAAC,EAAK,EAAK,IAG9C,aAAaqC,GACZ,MAAMC,EAAM3J,KAAK0I,MAAM7E,UACvB8F,EAAI,GAAKD,EAAI,GACbC,EAAI,GAAKD,EAAI,GACbC,EAAI,IAAMD,EAAI,GACd1J,KAAK0I,MAAQ,IAAI5I,EAAQ6J,GAG1B,qBACC,MAAMpG,EAAMvD,KAAK0I,MAAMrF,gBAAgB,CAAC,EAAK,EAAK,EAAK,IACvD,MAAO,CAACE,EAAI,GAAIA,EAAI,GAAIA,EAAI,IAG7B,oBAAyCqG,GACxC,OAAO5J,KAAKyI,WAAWoB,QAAOC,GAAKA,aAAaF,IAGjD,mBAAwCA,GACvC,OAAOG,QAAQ/J,KAAKyI,WAAWuB,MAAKF,GAAKA,aAAaF,MC/GjD,MAAMK,UAAoB3B,EAUhC,cACCD,QARD,KAAA9H,KAAe,GACf,KAAAC,IAAc,IAEd,KAAA0J,SAAmB,GACnB,KAAAC,OAAiB,CAAC,EAAK,EAAK,GAC5B,KAAAnG,SAAW,CAAEiC,IAAK,EAAKF,IAAK,GAI3B/F,KAAKoK,OAAO,KAAM,KAGnB,WACC,MAAMV,EAAM1J,KAAKmK,OACjB,OAAOrK,EAAQwG,WACbtE,SAASlC,EAAQgE,YAAY4F,EAAI,GAAIA,EAAI,GAAIA,EAAI,KACjD1H,SAASlC,EAAQkE,SAAS,EAAKhE,KAAKgE,SAASiC,IAAK,IAClDjE,SAASlC,EAAQkE,SAAShE,KAAKgE,SAAS+B,IAAK,EAAK,IAClD/D,SAASlC,EAAQgE,YAAY,EAAK,EAAK9D,KAAKkK,WAG/C,OAAOG,EAAeC,GACrBtK,KAAKqK,MAAQA,EACbrK,KAAKsK,OAASA,EACdtK,KAAKuK,WAAazK,EAAQ0K,YAAYH,EAAQC,EAAQ,GAAMtK,KAAKO,KAAMP,KAAKQ,KAG7E,KAAKiK,GACJzK,KAAKkK,UAAYO,EAGlB,OAAOxE,EAAaF,GACnB/F,KAAKgE,SAAW,CACfiC,IAAKjG,KAAKgE,SAASiC,IAAMA,EACzBF,IAAK/F,KAAKgE,SAAS+B,IAAMA,GAEtB/F,KAAKgE,SAAS+B,KAAOrF,KAAKC,GAAK,IAClCX,KAAKgE,SAAS+B,KAAOrF,KAAKC,GAAK,GAE5BX,KAAKgE,SAAS+B,IAAMrF,KAAKC,GAAK,IACjCX,KAAKgE,SAAS+B,IAAMrF,KAAKC,GAAK,IAK1B,MAAM+J,UAAoBpC,EAUhC,cACCD,QARD,KAAA9H,KAAe,EACf,KAAAC,IAAc,IAEd,KAAAkG,SAAmB,CAAC,EAAK,EAAK,GAC9B,KAAA1C,SAAoB,EAAE,GAAK,EAAK,GAChC,KAAAD,QAAmB,CAAC,EAAK,EAAK,GAI7B/D,KAAKoK,OAAO,KAAM,KAGnB,WACC,OAAOtK,EAAQwG,WACbtE,SAASlC,EAAQgE,eAAe9D,KAAK0G,WACrC1E,SAAShC,KAAK2K,gBACd3I,SAASlC,EAAQiE,WAAW/D,KAAK+D,UAGpC,qBACC,OAAOjE,EAAQwG,WACbtE,SAASlC,EAAQkE,SAAS,EAAG,EAAGhE,KAAKgE,SAAS,KAC9ChC,SAASlC,EAAQkE,SAAS,EAAGhE,KAAKgE,SAAS,GAAI,IAC/ChC,SAASlC,EAAQkE,SAAShE,KAAKgE,SAAS,GAAI,EAAG,IAElD,cACChE,KAAK0I,MAAQ1I,KAAK4K,KAGnB,OAAO7J,EAAWC,GACjBhB,KAAKgE,SAAS,IAAMtD,KAAKC,GAAKI,EAC9Bf,KAAKgE,SAAS,IAAMtD,KAAKC,GAAKK,EAC9BhB,KAAK6K,cAGN,UAAU9J,EAAWC,EAAWC,GAC/B,MAAM6J,EAAQhL,EAAQgE,YAAY/C,EAAGC,EAAGC,GAClC+C,EAAWhE,KAAK+K,eAGhBC,EAAOhH,EAAS,GACtBA,EAAS,GAAK,EACd,MAAMiH,EAAMjL,KAAK2K,eACjB3G,EAAS,GAAKgH,EACd,MAAME,EAASD,EAAIE,UAEnB,IAAIC,EAAcN,EAAM9I,SAASkJ,GAAQ7D,gBAAgBrH,KAAK0G,UAC9D0E,EAAcH,EAAI5D,gBAAgB+D,GAClCpL,KAAK0G,SAAW0E,EAChBpL,KAAK6K,cAGN,OAAOR,EAAeC,GACrBtK,KAAKqK,MAAQA,EACbrK,KAAKsK,OAASA,EACdtK,KAAKuK,WAAazK,EAAQ0K,YAAYH,EAAQC,EAAQ,GAAMtK,KAAKO,KAAMP,KAAKQ,KAC5ER,KAAK6K,eC9GA,MAAeQ,EAAtB,cACC,KAAAC,OAAiB,IAAIZ,EACrB,KAAAa,cAAgB,CAAC,EAAK,GACtB,KAAAC,cAAgB,CAAC,EAAK,GACtB,KAAAC,cAAgB,CAAC,EAAK,GACtB,KAAAC,aAAe,IAAIC,IACnB,KAAAC,SAAW,IAAID,IACf,KAAAE,gBAAyB,CAAC,EAAK,EAAK,EAAK,GACzC,WAAWC,EAAiBC,IAC5B,qBACC/L,KAAKwL,cAAc,GAAK,EACxBxL,KAAKwL,cAAc,GAAK,EACxBxL,KAAKyL,cAAc,GAAK,EACxBzL,KAAKyL,cAAc,GAAK,EAEzB,iBAAiBO,EAAeC,EAA+CC,IAC/E,oBAAoBF,EAAeC,EAA+CC,IAClF,iBACC,OAAO,GCHF,MAAMC,EAoDZ,YAAYC,EAA4BC,EAAqBC,EAAqBlG,GAlDlF,KAAAmG,UAAW,EAEX,KAAAC,WAAgC,CAC/B9F,SAAU,CACT+F,KAAMC,sBAAsBC,MAC5BpD,KAAM,EACNqD,SAAU,OAGZ,KAAAC,mBAAwC,GAExC,KAAAlE,SAA4B,CAC3BmE,MAAO,CACNL,KAAMC,sBAAsBC,MAC5BC,SAAU,MAEXG,UAAW,CACVN,KAAMC,sBAAsBM,WAC5BJ,SAAU,MAEXK,MAAO,CACNR,KAAMC,sBAAsBM,WAC5BJ,SAAU,MAEXM,OAAQ,CACPT,KAAMC,sBAAsBM,WAC5BJ,SAAU,MAEXO,WAAY,CACXV,KAAMC,sBAAsBU,WAC5BR,SAAU,MAEXS,UAAW,CACVZ,KAAMC,sBAAsBU,WAC5BR,SAAU,MAEXU,WAAY,CACXb,KAAMC,sBAAsBC,MAC5BC,SAAU,MAEXW,YAAa,CACZd,KAAMC,sBAAsBc,WAC5BZ,SAAU,MAEXa,MAAO,CACNhB,KAAMC,sBAAsBC,MAC5BC,SAAU,OAKPR,GACHpM,KAAK0N,KAAKtB,EAAIC,EAAYC,EAAYlG,GAIxC,KAAKgG,EAA2BC,EAAqBC,EAAqBlG,GAEzE,GADApG,KAAKoM,GAAKA,GACLC,EACJ,KAAM,6CAEP,IAAKC,EACJ,KAAM,+CAGP,MAAMqB,EAAUvB,EAAGwB,iBAEfxH,aAAO,EAAPA,EAASoG,cACZxM,KAAKwM,WAAa,OAAH,wBACXxM,KAAKwM,YACLpG,EAAQoG,cAITpG,aAAO,EAAPA,EAASyG,sBACZ7M,KAAK6M,mBAAqB,OAAH,wBACnB7M,KAAK6M,oBACLzG,EAAQyG,sBAITzG,aAAO,EAAPA,EAASuC,YACZ3I,KAAK2I,SAAW,OAAH,wBACT3I,KAAK2I,UACLvC,EAAQuC,WAKbyD,EAAGyB,aAAa,4BAEhB,MAAMC,EAAO1B,EAAG2B,aAAa3B,EAAG4B,eAKhC,GAJA5B,EAAG6B,aAAaH,EAAMzB,GACtBD,EAAG8B,aAAaP,EAASG,GACzB1B,EAAG+B,cAAcL,IAEZ1B,EAAGgC,mBAAmBN,EAAM1B,EAAGiC,gBAEnC,KAAM,oCADOjC,EAAGkC,iBAAiBR,KAIlC,MAAMS,EAAOnC,EAAG2B,aAAa3B,EAAGoC,iBAKhC,GAJApC,EAAG6B,aAAaM,EAAMjC,GACtBF,EAAG8B,aAAaP,EAASY,GACzBnC,EAAG+B,cAAcI,IAEZnC,EAAGgC,mBAAmBG,EAAMnC,EAAGiC,gBAEnC,KAAM,sCADOjC,EAAGkC,iBAAiBC,KAMlC,GAFAnC,EAAGqC,YAAYd,IAEVvB,EAAGsC,oBAAoBf,EAASvB,EAAGuC,aAAc,CACrD,MAAMC,EAAOxC,EAAGyC,kBAAkBlB,GAElC,KAAM,iCADa3N,KAAK8O,YAAYC,UACmBH,IAIxD,IAAK,MAAMI,KAAehP,KAAK2I,SAC9B3I,KAAK2I,SAASqG,GAAapC,SAAWR,EAAG6C,mBAAmBtB,EAASqB,GAItE,IAAK,MAAME,KAAiBlP,KAAKwM,WAChCxM,KAAKwM,WAAW0C,GAAetC,SAAWR,EAAG+C,kBAAkBxB,EAASuB,GAEzE,IAAK,MAAMA,KAAiBlP,KAAK6M,mBAChC7M,KAAK6M,mBAAmBqC,GAAetC,SAAWR,EAAG+C,kBAAkBxB,EAASuB,GAGjF9C,EAAGgD,OAAOhD,EAAGiD,WACbjD,EAAGkD,SAASlD,EAAGmD,MAEfvP,KAAK2N,QAAUA,EACf3N,KAAKuM,UAAW,EAGjB,MACCvM,KAAKoM,GAAGoD,WAAWxP,KAAK2N,SAGzB,KAAKvF,GACJ,MAAMgE,EAAKpM,KAAKoM,GAChBA,EAAGqD,WAAWrD,EAAGsD,aAActH,EAAKuH,QACpC,MAAMC,EAAMxD,EAAGyB,aAAa,0BAC5B,IAAK,MAAMqB,KAAiBlP,KAAKwM,WAAY,CAC5C,MAAMqD,EAAY7P,KAAKwM,WAAW0C,GAClC,GAA0B,MAAtBW,EAAUjD,WAA4C,IAAxBiD,EAAUjD,SAC3C,SAEDgD,EAAIE,yBAAyBD,EAAUjD,SAAU,GAEjD,MAAMmD,EAAS3H,EAAK2H,OACdC,EAAS5H,EAAK6H,QAAQC,IAAIhB,GAClB,MAAVc,GAOJ5D,EAAG+D,wBAAwBN,EAAUjD,UACrCR,EAAGgE,oBAAoBP,EAAUjD,SAAUiD,EAAUtG,KAAMsG,EAAUpD,MAAM,EAAOsD,EAAQC,IAJzF5D,EAAGiE,yBAAyBR,EAAUjD,WAQzC,SACC,MAAMR,EAAKpM,KAAKoM,GAChB,IAAK,MAAM8C,KAAiBlP,KAAKwM,WAAY,CAC5C,MAAMqD,EAAY7P,KAAKwM,WAAW0C,GACR,MAAtBW,EAAUjD,WAA4C,IAAxBiD,EAAUjD,UAG5CR,EAAGiE,yBAAyBR,EAAUjD,WAIxC,cAAcR,EAA2BhE,GACxC,MAAMwH,EAAMxD,EAAGyB,aAAa,0BAC5BzB,EAAGqD,WAAWrD,EAAGsD,aAActH,EAAKkI,gBACpC,IAAK,MAAMpB,KAAiBlP,KAAK6M,mBAAoB,CACpD,MAAMgD,EAAY7P,KAAK6M,mBAAmBqC,GAC1C,GAA0B,MAAtBW,EAAUjD,WAA4C,IAAxBiD,EAAUjD,SAC3C,SAGD,MAAMmD,EAAS3H,EAAKmI,eACpB,IAAIP,EAAS5H,EAAKoI,gBAAgBN,IAAIhB,GACtC,GAAc,MAAVc,EACH,KAAM,qCAAqCd,IAG5C,GAAuB,KAAnBW,EAAUtG,KACb,IAAK,IAAIpJ,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC3B,MAAMyM,EAAWiD,EAAUjD,SAAWzM,EACtCiM,EAAG+D,wBAAwBvD,GAC3BR,EAAGgE,oBAAoBxD,EAAU,EAAGiD,EAAUpD,MAAM,EAAOsD,EAAQC,GACnEJ,EAAIE,yBAAyBlD,EAAU,GACvCoD,GAAU,KAMd,gBAAgB5D,GACf,MAAMwD,EAAMxD,EAAGyB,aAAa,0BAC5B,IAAK,MAAMqB,KAAiBlP,KAAK6M,mBAAoB,CACpD,MAAMgD,EAAY7P,KAAK6M,mBAAmBqC,GAC1C,GAA0B,MAAtBW,EAAUjD,WAA4C,IAAxBiD,EAAUjD,UAKrB,KAAnBiD,EAAUtG,KACb,IAAK,IAAIpJ,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC3B,MAAMyM,EAAWiD,EAAUjD,SAAWzM,EACtCiM,EAAGiE,yBAAyBzD,GAC5BgD,EAAIE,yBAAyBlD,EAAU,KAM3C,WAAWmC,EAAc0B,GACxB,GAAa,MAATA,EAAe,OACnB,MAAMrE,EAAKpM,KAAKoM,GAEVsE,EAAU1Q,KAAK2I,SAASoG,GAC9B,GAAK2B,EAGL,OAAQA,EAAQjE,MACf,KAAKC,sBAAsBiE,KAC1B,GAAqB,kBAAVF,EACV,KAAM,YAAY1B,uCAA0C0B,IAE7DrE,EAAGwE,UAAUF,EAAQ9D,SAAU6D,EAAQ,EAAI,GAC3C,MAED,KAAK/D,sBAAsBC,MAC1B,GAAqB,iBAAV8D,EACV,KAAM,YAAY1B,sCAAyC0B,IAE5DrE,EAAGyE,UAAUH,EAAQ9D,SAAU6D,GAC/B,MAED,KAAK/D,sBAAsBoE,IAC1B,GAAqB,iBAAVL,EACV,KAAM,YAAY1B,sCAAyC0B,IAE5DrE,EAAGwE,UAAUF,EAAQ9D,SAAU6D,GAC/B,MAED,KAAK/D,sBAAsBc,WAC1B,IACEhL,MAAMwE,QAAQyJ,IACE,IAAjBA,EAAMhK,QACc,iBAAbgK,EAAM,IACO,iBAAbA,EAAM,GAEb,KAAM,YAAY1B,2DAEnB3C,EAAG2E,WAAWL,EAAQ9D,SAAU6D,GAChC,MAED,KAAK/D,sBAAsBsE,WAC1B,IACExO,MAAMwE,QAAQyJ,IACE,IAAjBA,EAAMhK,QACc,iBAAbgK,EAAM,IACO,iBAAbA,EAAM,IACO,iBAAbA,EAAM,GAEb,KAAM,YAAY1B,2DAEnB3C,EAAG6E,WAAWP,EAAQ9D,SAAU6D,GAChC,MAED,KAAK/D,sBAAsBU,WAC1B,IACE5K,MAAMwE,QAAQyJ,IACE,IAAjBA,EAAMhK,QACc,iBAAbgK,EAAM,IACO,iBAAbA,EAAM,IACO,iBAAbA,EAAM,IACO,iBAAbA,EAAM,GAEb,KAAM,YAAY1B,2DAEnB3C,EAAG8E,WAAWR,EAAQ9D,SAAU6D,GAChC,MAED,KAAK/D,sBAAsBM,WAC1B,KAAMyD,aAAiB3Q,GACtB,KAAM,YAAYiP,+CAEnB3C,EAAG+E,iBAAiBT,EAAQ9D,UAAU,EAAO6D,EAAM5M,WACnD,MAGD,QACC,KAAM,6BAA6B6M,EAAQjE,SCjUxC,MAAM2E,EAWZ,YAAYhF,GARZ,KAAA6D,QAAgC,IAAInH,IAIpC,KAAA0H,gBAAwC,IAAI1H,IAK3C9I,KAAKoM,GAAKA,EAGX,OAAOhE,GACN,MAAMgE,EAAKpM,KAAKoM,GACXpM,KAAK2P,SACT3P,KAAK2P,OAASvD,EAAGiF,gBAGlB,MAAMlL,EAAWiC,EAAKjC,SAEtB,GADAnG,KAAKyG,OAASN,EAASM,OACC,IAApBN,EAASM,OACZ,OAGD,MAAM6K,EAAiBC,OAAOC,KAAKrL,EAAS,IAAIsL,OAGhD,IAAIC,EAAa,EACjB,IAAK,MAAM3C,KAAQuC,EAAgB,CAClC,MAAMK,EAAOxL,EAAS,GAAG4I,GACzB/O,KAAKiQ,QAAQ3G,IAAIyF,EAnCS,EAmCH2C,GACnBlP,MAAMwE,QAAQ2K,GACjBD,GAAcC,EAAKlL,OAEnBiL,GAAc,EAGhB1R,KAAK+P,OA1CsB,EA0Cb2B,EAGd,IAAIvR,EAAI,EACR,MAAMJ,EAAO,IAAIG,aAAaiG,EAASM,OAASiL,GAChD,IAAK,MAAMtK,KAAUjB,EACpB,IAAK,MAAMwL,KAAQL,EAAgB,CAClC,MAAMb,EAAQrJ,EAAOuK,GACrB,GAAInP,MAAMwE,QAAQyJ,GACjB,IAAK,MAAMmB,KAAOnB,EACjB1Q,EAAKI,GAAKyR,EACVzR,SAGDJ,EAAKI,GAAKsQ,EACVtQ,IAMHH,KAAK6R,OACLzF,EAAG0F,WAAW1F,EAAGsD,aAAc3P,EAAMqM,EAAG2F,cAGzC,gBAAoClJ,GACnC,GAAyB,IAArBA,EAAUpC,OACb,OAED,MAAM2F,EAAKpM,KAAKoM,GAEVkF,EAAiBC,OAAOC,KAAK3I,EAAU,IAAI4I,OAGjD,IAAIO,EAAe,EACnB,IAAK,MAAMjD,KAAQuC,EAAgB,CAClC,MAAMK,EAAO9I,EAAU,GAAGkG,GAC1B/O,KAAKwQ,gBAAgBlH,IAAIyF,EA/EC,EA+EKiD,GAC3BxP,MAAMwE,QAAQ2K,GACjBK,GAAgBL,EAAKlL,OAErBuL,GADUL,aAAgB7R,EACV6R,EAAK9N,UAAU4C,OAEf,EAGlBzG,KAAKuQ,eAxFsB,EAwFLyB,EAGtB,IAAI7R,EAAI,EACR,MAAMJ,EAAO,IAAIG,aAAa2I,EAAUpC,OAASuL,GACjD,IAAK,MAAM5I,KAAYP,EACtB,IAAK,MAAM8I,KAAQL,EAAgB,CAClC,MAAMb,EAAQrH,EAASuI,GACvB,GAAInP,MAAMwE,QAAQyJ,GACjB,IAAK,MAAMmB,KAAOnB,EACjB1Q,EAAKI,GAAKyR,EACVzR,SAEK,GAAIsQ,aAAiB3Q,EAC3B,IAAK,MAAM8R,KAAOnB,EAAM5M,UACvB9D,EAAKI,GAAKyR,EACVzR,SAGDJ,EAAKI,GAAKsQ,EACVtQ,IAKEH,KAAKsQ,iBACTtQ,KAAKsQ,eAAiBlE,EAAGiF,gBAG1BrR,KAAKiS,eAAiBpJ,EAAUpC,OAChC2F,EAAGqD,WAAWrD,EAAGsD,aAAc1P,KAAKsQ,gBACpClE,EAAG0F,WAAW1F,EAAGsD,aAAc3P,EAAMqM,EAAG2F,cAGzC,OACC/R,KAAKoM,GAAGqD,WAAWzP,KAAKoM,GAAGsD,aAAc1P,KAAK2P,QAG/C,OACC3P,KAAKoM,GAAG8F,WAAWlS,KAAKoM,GAAG+F,UAAW,EAAGnS,KAAKyG,QAG/C,gBACazG,KAAKoM,GAAGyB,aAAa,0BAC7BuE,yBAAyBpS,KAAKoM,GAAG+F,UAAW,EAAGnS,KAAKyG,OAAQzG,KAAKiS,iB,ICzI3DI,ECEAC,GDFZ,SAAYD,GACX,uBACA,yBAFD,CAAYA,MAAW,KAUhB,MAAME,EAKZ,YAAYC,EAAoDpM,GAS/D,GAZD,KAAAqM,UAAYJ,EAAYK,OACxB,KAAAC,UAAYN,EAAYK,OAGvB1S,KAAK4S,UAAU,IAAIC,UAAU,IAAIC,kBAAkB,CAAC,IAAK,EAAG,IAAK,MAAO,EAAG,KACvE1M,aAAO,EAAPA,EAASqM,aACZzS,KAAKyS,UAAYrM,EAAQqM,YAEtBrM,aAAO,EAAPA,EAASuM,aACZ3S,KAAK2S,UAAYvM,EAAQuM,WAGtBH,EACH,GAA0B,iBAAfA,EAAyB,CACnC,MAAMO,EAAQ,IAAIC,MAClBD,EAAME,IAAMT,EACZxS,KAAKkT,SAASH,QACJP,aAAsBW,iBAChCnT,KAAKkT,SAASV,GAEdxS,KAAK4S,UAAUJ,GAKlB,eAAqBY,EAAahN,G,qCACjC,OAAO,IAAIiN,SAAQ,CAACC,EAASC,KAC5B,MAAMR,EAAQ,IAAIC,MAClBD,EAAME,IAAMG,EACZL,EAAMS,iBAAiB,QAAQ,KAC9BF,EAAQ,IAAIf,EAAQQ,EAAO3M,OAE5B2M,EAAMS,iBAAiB,SAAUC,IAChCF,EAAOE,U,+RAKV,SAASV,GACJA,EAAMW,SACT1T,KAAK4S,UAAUG,GAGfA,EAAMS,iBAAiB,QAAQ,KAC9BxT,KAAKkT,SAASH,MAKjB,UAAUY,GACT,GAAIA,aAAkBR,mBAAqBQ,EAAOD,SACjD,KAAM,+CAGP1T,KAAK2T,OAASA,EAGf,WACC,GAAI3T,KAAK2T,kBAAkBd,UAC1B,OAAO7S,KAAK2T,OAAO5T,KAEpB,KAAM,0CCvER,SAAYuS,GACX,qBACA,qBAFD,CAAYA,MAAU,KAKf,MAAMsB,UAAsBrB,EAIlC,YAAYhJ,EAAcsK,EAAyBvB,EAAWwB,OAC7DzL,QACArI,KAAK6T,WAAaA,EAClB7T,KAAKuJ,KAAOA,EACZ,MAAMoK,EAAS,IAAIb,kBAAkBvJ,EAAOA,EAAO,GACnDoK,EAAOI,KAAK,KACZ/T,KAAK4S,UAAU,IAAIC,UAAUc,EAAQpK,KCdvC,MAAMyK,EAAwC,CAC7C,CAAC3B,EAAYK,QAAShG,sBAAsBgG,OAC5C,CAACL,EAAY4B,SAAUvH,sBAAsBuH,SAGvC,MAAMC,EA4BZ,YAAY9H,GArBZ,KAAA+H,MAAQ,EACR,KAAAC,eAAiB1H,sBAAsB2H,KACvC,KAAAC,UAAY5H,sBAAsB2H,KAClC,KAAAE,QAAU7H,sBAAsB8H,cAChC,KAAA/B,UAAY/F,sBAAsBgG,OAClC,KAAAC,UAAYjG,sBAAsBgG,OAiBjC1S,KAAKoM,GAAKA,EACVpM,KAAK0H,QAAU0E,EAAGqI,gBAhBnB,mBAAmBrI,EAA2B6G,GAC7C,MAAMvL,EAAU,IAAIwM,EAAqB9H,GAUzC,OATA1E,EAAQ+K,UAAYuB,EAAWf,EAAIR,WACnC/K,EAAQiL,UAAYqB,EAAWf,EAAIN,WAE/BM,aAAeW,GAAiBX,EAAIY,aAAevB,EAAWoC,QACjEhN,EAAQ0M,eAAiBhI,EAAGuI,gBAC5BjN,EAAQ4M,UAAYlI,EAAGuI,gBACvBjN,EAAQ6M,QAAUnI,EAAGwI,aACrBlN,EAAQmN,mBAAqBzI,EAAGqI,iBAE1B/M,EAQR,OAAOA,EAAkBoN,EAAe,MACvC,MAAMnB,EAASjM,aAAmBkM,EAAgB,KAAOlM,EAAQiM,OAEjE,GAAIA,aAAkBR,mBAAqBQ,EAAOD,SACjD,KAAM,+CAEP1T,KAAK8U,KAAOA,EAEZ,MAAM1I,EAAKpM,KAAKoM,GAEZ1E,aAAmBkM,GAElB5T,KAAK6U,qBACRzI,EAAG2I,cAAc3I,EAAG4I,SAAWhV,KAAK8U,MACpC1I,EAAG6I,YAAY7I,EAAG8I,WAAYlV,KAAK6U,oBACnCzI,EAAG+I,WACF/I,EAAG8I,WACH,EACA9I,EAAGiI,KACH3M,EAAQ6B,KACR7B,EAAQ6B,KACR,EACA6C,EAAGiI,KACHjI,EAAGoI,cACH,MAGDpI,EAAGgJ,cAAchJ,EAAG8I,WAAY9I,EAAGiJ,eAAgBjJ,EAAGkJ,eACtDlJ,EAAGgJ,cAAchJ,EAAG8I,WAAY9I,EAAGmJ,eAAgBnJ,EAAGkJ,eACtDlJ,EAAGgJ,cAAchJ,EAAG8I,WAAY9I,EAAGoJ,mBAAoBxV,KAAKyS,WAC5DrG,EAAGgJ,cAAchJ,EAAG8I,WAAY9I,EAAGqJ,mBAAoBzV,KAAK2S,YAG7D3S,KAAK6R,OACLzF,EAAG+I,WACF/I,EAAG8I,WACHlV,KAAKmU,MACLnU,KAAKoU,eACL1M,EAAQ6B,KACR7B,EAAQ6B,KACR,EACAvJ,KAAKsU,UACLtU,KAAKuU,QACL,QAKDvU,KAAK6R,OACLzF,EAAG+I,WACF/I,EAAG8I,WACHlV,KAAKmU,MACLnU,KAAKoU,eACLpU,KAAKsU,UACLtU,KAAKuU,QACLZ,IAIFvH,EAAGgJ,cAAchJ,EAAG8I,WAAY9I,EAAGiJ,eAAgBjJ,EAAGkJ,eACtDlJ,EAAGgJ,cAAchJ,EAAG8I,WAAY9I,EAAGmJ,eAAgBnJ,EAAGkJ,eACtDlJ,EAAGgJ,cAAchJ,EAAG8I,WAAY9I,EAAGoJ,mBAAoBxV,KAAKyS,WAC5DrG,EAAGgJ,cAAchJ,EAAG8I,WAAY9I,EAAGqJ,mBAAoBzV,KAAK2S,WAG7D,OACC,GAAiB,MAAb3S,KAAK8U,KACR,KAAM,gDAEP,MAAM1I,EAAKpM,KAAKoM,GAGhB,OAFAA,EAAG2I,cAAc3I,EAAG4I,SAAWhV,KAAK8U,MACpC1I,EAAG6I,YAAY7I,EAAG8I,WAAYlV,KAAK0H,SAC5B1H,KAAK8U,KAGb,SACC,GAAiB,MAAb9U,KAAK8U,KACR,KAAM,kDAEP,MAAM1I,EAAKpM,KAAKoM,GAChBA,EAAG2I,cAAc3I,EAAG4I,SAAWhV,KAAK8U,MACpC1I,EAAG6I,YAAY7I,EAAG8I,WAAY,OCxHzB,MAAMQ,EAQZ,YAAYtJ,EAA2B7C,EAAc7B,GAFrD,KAAAmM,WAAcnH,sBAAsBiJ,kBAGnC3V,KAAKoM,GAAKA,EACVpM,KAAKuJ,KAAOA,EACZvJ,KAAK0H,QAAUA,EACf1H,KAAK4V,YAAcxJ,EAAGyJ,oBACtB7V,KAAK8V,aAAe1J,EAAG2J,qBAGxB,OACC,MAAM3J,EAAKpM,KAAKoM,GAEhBA,EAAG4J,gBAAgB5J,EAAG6J,YAAajW,KAAK4V,aAExCxJ,EAAG8J,qBACF9J,EAAG6J,YACHjW,KAAK6T,WACLzH,EAAG8I,WACHlV,KAAK0H,QAAQA,QACb,GAGG1H,KAAK6T,YAAcnH,sBAAsByJ,iBAE5C/J,EAAG8J,qBACF9J,EAAG6J,YACH7J,EAAGuJ,kBACHvJ,EAAG8I,WACHlV,KAAK0H,QAAQmN,mBACb,IAGDzI,EAAGgK,iBAAiBhK,EAAGiK,aAAcrW,KAAK8V,cAC1C1J,EAAGkK,oBAAoBlK,EAAGiK,aAAcjK,EAAGmK,kBAAmBvW,KAAKuJ,KAAMvJ,KAAKuJ,MAC9E6C,EAAGoK,wBAAwBpK,EAAG6J,YAAa7J,EAAG+J,iBAAkB/J,EAAGiK,aAAcrW,KAAK8V,eAIxF,SACC,MAAM1J,EAAKpM,KAAKoM,GAChBA,EAAG4J,gBAAgB5J,EAAG6J,YAAa,OCpC9B,MAAMQ,UAAcvO,EAS1B,YAAY9B,EAAwB,IACnCiC,QAEIjC,EAAQsQ,UACX1W,KAAK0W,QAAUtQ,EAAQsQ,SAEpBtQ,EAAQuQ,UACX3W,KAAK2W,QAAUvQ,EAAQuQ,SAEpBvQ,EAAQwQ,WACX5W,KAAK4W,SAAWxQ,EAAQwQ,UAErBxQ,EAAQyQ,WACX7W,KAAK6W,SAAWzQ,EAAQyQ,UAErBzQ,EAAQ0Q,SACX9W,KAAK8W,OAAS1Q,EAAQ0Q,QAEnB1Q,EAAQ2Q,YACX/W,KAAK+W,UAAY3Q,EAAQ2Q,YCvB5B,MAAMC,GAA4E,IAA7CC,OAAOrK,SAASsK,OAAOC,QAAQ,SAI7D,MAAMC,UAAsB/L,EAmBlC,YAAYgM,GACXhP,QAhBD,KAAAhE,MAAQ,EAAM4S,OAAOK,iBACrB,KAAAC,UAAY,EAAIN,OAAOK,iBACvB,KAAAE,WAAY,EACZ,KAAAC,OAAQ,EACR,KAAAC,YAAc,EACd,KAAAC,aAAe,EACf,KAAAC,MAAQ,EACR,KAAAC,WAAY,EACZ,KAAAC,KAAOpX,KAAKqX,SACJ,KAAAC,UAAY,CAAC,EAAG,GAEhB,KAAAC,SAA+C,IAAInP,IACnD,KAAAoP,OAA+C,IAAIpP,IACnD,KAAAqP,cAAuD,IAAIrP,IAmHnE,KAAAsP,oBAAsB,KAChBpY,KAAK6X,WACT7X,KAAKqY,wBAIP,KAAAC,UAAa7E,IACZzT,KAAK4L,SAAS2M,IAAI9E,EAAE+E,IAAIC,gBAGzB,KAAAC,QAAWjF,IACVzT,KAAK4L,SAAS+M,OAAOlF,EAAE+E,IAAIC,gBAG5B,KAAAG,YAAenF,IACdzT,KAAKgY,UAAU,GAAK,EACpBhY,KAAKgY,UAAU,GAAK,EACpBhY,KAAK0L,aAAa6M,IAAI9E,EAAEoF,SAGzB,KAAAC,UAAarF,IACZsF,YAAW,KACV/Y,KAAKgY,UAAU,GAAK,EACpBhY,KAAKgY,UAAU,GAAK,IAClB,GACHhY,KAAK0L,aAAaiN,OAAOlF,EAAEoF,SAG5B,KAAAG,YAAevF,IACVzT,KAAK0L,aAAanC,KAAO,IAC5BvJ,KAAKgY,UAAU,IAAMvE,EAAEwF,UACvBjZ,KAAKgY,UAAU,IAAMvE,EAAEyF,WAExBlZ,KAAKuL,cAAc,GAAKkI,EAAE0F,QAC1BnZ,KAAKuL,cAAc,GAAKkI,EAAE2F,QAC1BpZ,KAAKwL,cAAc,IAAMiI,EAAEwF,UAC3BjZ,KAAKwL,cAAc,IAAMiI,EAAEyF,WAG5B,KAAAG,QAAW5F,IAEV,IAAKA,EAAErS,OAASqS,EAAE6F,WAAY,OAC9B7F,EAAE8F,iBAEF,IAAIC,EAAK,EACLC,EAAK,EAET,IAAKhG,EAAE6F,YAAc7F,EAAEiG,OAAQ,CAE9B,MAAMjP,EAAoB,GAAXgJ,EAAEiG,OAAc,EAC3BjG,EAAErS,OAASqS,EAAEkG,gBAChBH,EAAK/O,EAGLgP,EAAKhP,OAKN+O,EAAK/F,EAAEmG,OACPH,EAAKhG,EAAEoG,OAGR7Z,KAAKyL,cAAc,IAAM+N,EACzBxZ,KAAKyL,cAAc,IAAMgO,GA/KrBpC,aAAcyC,kBACjB9Z,KAAK+Z,OAAS1C,GAEdrX,KAAK+Z,OAASC,SAASC,cAAc,UACjC5C,aAAc6C,aACjBla,KAAKma,OAAO9C,IAId9F,OAAO6I,OAAOpa,KAAK+Z,OAAOM,MAAO,CAChC3T,SAAU,QACV4T,KAAM,EACNjY,MAAO,EACPkY,IAAK,EACLC,OAAQ,IAIV,iBACC,OAAI9Z,KAAK+Z,IAAIza,KAAKgY,UAAU,IAAM,GAAKtX,KAAK+Z,IAAIza,KAAKgY,UAAU,IAAM,EAUtE,oBACC,OAAOhY,KAAK+Z,OAAOW,cAMpB,SACC,GAAI1a,KAAK2a,QACR,OAAO3a,KAAK2a,QAGb,MAAMvU,EAAU,CACfwU,UAAW5a,KAAKwX,WAIjB,GADAxX,KAAK2a,QAAU3a,KAAK+Z,OAAOc,WAAW,QAASzU,IAC1CpG,KAAK2a,QAET,MADA3a,KAAK0a,cAAcI,UAAY,mCACzB,iCAGP,OAAO9a,KAAK2a,QAGb,YACC,OAAO3a,KAAK+Z,OAAOgB,YAGpB,aACC,OAAO/a,KAAK+Z,OAAOiB,aAMZ,YACP,MAAM5O,EAAKpM,KAAKoM,GAEhBA,EAAGgD,OAAOhD,EAAG6O,YACb7O,EAAGgD,OAAOhD,EAAG8O,OACb9O,EAAG+O,UAAU/O,EAAGgP,UAAWhP,EAAGiP,qBAC9Brb,KAAKsb,cAAgBtb,KAAK+N,aClH5B,snBCAA,8sBFqHC,KAAKwN,GAAgB,GAChBA,GACHvb,KAAK+Z,OAAOyB,qBAEbxb,KAAK6X,WAAY,EACjB7X,KAAKyb,oBAGN,UACCzb,KAAK6X,WAAY,EACjBmC,SAAS0B,kBACT1b,KAAKqY,uBAGE,oBACP2B,SAASxG,iBAAiB,oBAAqBxT,KAAKoY,qBACpDnB,OAAOzD,iBAAiB,UAAWxT,KAAKsY,WACxCrB,OAAOzD,iBAAiB,QAASxT,KAAK0Y,SACtCzB,OAAOzD,iBAAiB,YAAaxT,KAAKgZ,aAC1C/B,OAAOzD,iBAAiB,UAAWxT,KAAK8Y,WACxC7B,OAAOzD,iBAAiB,YAAaxT,KAAK4Y,aAC1C3B,OAAOzD,iBAAiB,QAASxT,KAAKqZ,QAAS,CAAEsC,SAAS,IAC1D1E,OAAOzD,iBAAiB,iBAAkBxT,KAAKqZ,QAAS,CAAEsC,SAAS,IAG5D,uBACP3b,KAAK4L,SAASgQ,QACd5B,SAAS6B,oBAAoB,oBAAqB7b,KAAKoY,qBACvDnB,OAAO4E,oBAAoB,UAAW7b,KAAKsY,WAC3CrB,OAAO4E,oBAAoB,QAAS7b,KAAK0Y,SACzCzB,OAAO4E,oBAAoB,YAAa7b,KAAKgZ,aAC7C/B,OAAO4E,oBAAoB,UAAW7b,KAAK8Y,WAC3C7B,OAAO4E,oBAAoB,YAAa7b,KAAK4Y,aAC7C3B,OAAO4E,oBAAoB,QAAS7b,KAAKqZ,SACzCpC,OAAO4E,oBAAoB,iBAAkB7b,KAAKqZ,SAsEnD,QACC,MAAMjN,EAAKpM,KAAKoM,GAChBA,EAAG0P,WAAW,GACd1P,EAAG2P,cAAc/b,KAAK6L,iBACtBO,EAAGwP,MAAMxP,EAAG4P,iBAAmB5P,EAAG6P,kBAGnC,oBAAoB/S,EAAgBgT,EAAc3R,EAAsBnE,EAAqC,I,MAC5G,IAAK8V,EAAM1T,QAAS,OACpB,MAAM,MAAEE,EAAK,SAAEO,EAAQ,SAAEL,GAAasT,GAChC,YAAEC,GAAgB/V,EAElBgW,EAAaD,EAAcA,EAAYna,SAAS0G,GAASA,EAE3DO,IACHiT,EAAMvT,SAAS,mBAA+C,IAA1BM,EAASxB,MAAMhB,OAAe,IAAIwC,EAASxB,MAAO,GAAOwB,EAASxB,MACtGyU,EAAMvT,SAAqB,WAAIuT,EAAMvT,SAAS,mBAC9CuT,EAAMvT,SAAS,0BAA4BM,EAASvB,QACpDwU,EAAMvT,SAAS,4BAA8BM,EAAStB,UACtDuU,EAAMvT,SAAS,8BAAgCM,EAASrB,YACxDsU,EAAMvT,SAAS,kCAAoCM,EAASpB,gBAC5DqU,EAAMvT,SAAS,0BAA4BM,EAASjB,aACpDkU,EAAMvT,SAAS,6BAA+BM,EAASlB,gBACvDmU,EAAMvT,SAAS,sBAAwBM,EAAShB,SAChDiU,EAAMvT,SAAS,oCAAsCM,EAASnB,uBAC1DmB,EAASvB,UACZwU,EAAMvT,SAAS,qBAAuB3I,KAAKiV,YAAYhM,EAASvB,UAE7DuB,EAAStB,YACZuU,EAAMvT,SAAS,uBAAyB3I,KAAKiV,YAAYhM,EAAStB,YAE/DsB,EAASrB,cACZsU,EAAMvT,SAAS,yBAA2B3I,KAAKiV,YAAYhM,EAASrB,cAEjEqB,EAASpB,kBACZqU,EAAMvT,SAAS,6BAA+B3I,KAAKiV,YAAYhM,EAASpB,mBAItE0C,GACHrB,EAAOmT,WAAW,YAAa9R,GAEhCrB,EAAOmT,WAAW,SAAUD,GAE5B,IAAK,MAAMpN,KAAekN,EAAMvT,SAC/BO,EAAOmT,WAAWrN,EAAakN,EAAMvT,SAASqG,IAK/C,MAAM5G,EAA+C,QAA3C,EAAG8T,EAAMI,oBAAoBnU,GAAY,UAAE,eAAEC,KACvD,GAAIA,EAAM,CACT,IAAImU,EAASvc,KAAKkY,OAAOhI,IAAI9H,GACxBmU,IACJvc,KAAKwc,WAAWpU,GAChBmU,EAASvc,KAAKkY,OAAOhI,IAAI9H,IAG1Bc,EAAO2I,KAAK0K,GACRL,EAAMO,cACTvT,EAAOwT,cAAc1c,KAAKoM,GAAImQ,GAC9BA,EAAOI,iBAEPJ,EAAOK,OAKT,IAAK,MAAMC,KAASjU,EACnB5I,KAAK8c,oBAAoB5T,EAAQ2T,EAAOtS,EAAY,OAAF,wBAAOnE,GAAO,CAAE+V,YAAaC,KAIjF,UAAUF,EAAc3R,EAAsBnE,EAA+D,I,MAC5G,IAAK8V,EAAM1T,QAAS,OACpB,MAAM,MAAEE,EAAK,SAAEO,EAAQ,SAAEL,GAAasT,GAChC,YAAEC,GAAgB/V,EAClBgW,EAAaD,EAAcA,EAAYna,SAAS0G,GAASA,EAE3DO,IACHiT,EAAMvT,SAAS,mBAA+C,IAA1BM,EAASxB,MAAMhB,OAAe,IAAIwC,EAASxB,MAAO,GAAOwB,EAASxB,MACtGyU,EAAMvT,SAAS,0BAA4BM,EAASvB,QACpDwU,EAAMvT,SAAS,4BAA8BM,EAAStB,UACtDuU,EAAMvT,SAAS,8BAAgCM,EAASrB,YACxDsU,EAAMvT,SAAS,kCAAoCM,EAASpB,gBAC5DqU,EAAMvT,SAAS,0BAA4BM,EAASjB,aACpDkU,EAAMvT,SAAS,6BAA+BM,EAASlB,gBACvDmU,EAAMvT,SAAS,sBAAwBM,EAAShB,SAChDiU,EAAMvT,SAAS,oCAAsCM,EAASnB,uBAC1DmB,EAASvB,UACZwU,EAAMvT,SAAS,qBAAuB3I,KAAKiV,YAAYhM,EAASvB,UAE7DuB,EAAStB,YACZuU,EAAMvT,SAAS,uBAAyB3I,KAAKiV,YAAYhM,EAAStB,YAE/DsB,EAASrB,cACZsU,EAAMvT,SAAS,yBAA2B3I,KAAKiV,YAAYhM,EAASrB,cAEjEqB,EAASpB,kBACZqU,EAAMvT,SAAS,6BAA+B3I,KAAKiV,YAAYhM,EAASpB,mBAK1E,MAAMO,EAA+C,QAA3C,EAAG8T,EAAMI,oBAAoBnU,GAAY,UAAE,eAAEC,KAEnD8T,EAAMhT,SAAWgT,EAAMhT,OAAOqD,UACjC2P,EAAMhT,OAAOwE,KAAK1N,KAAKoM,IAIxB,MAAMxB,EAAO5K,KAAKsL,OAAOV,KAAKO,UAE9B,GAAI/C,aAAgBvB,EAAM,CACzB,MAAMuF,EAAKpM,KAAKoM,GACVlD,EAASgT,EAAMhT,QAAUlJ,KAAKsb,cAC9B3S,EAAWO,EAAOP,SACxBO,EAAO6T,MAEP,IAAIR,EAASvc,KAAKkY,OAAOhI,IAAI9H,GAqB7B,GApBKmU,IACJvc,KAAKwc,WAAWpU,GAChBmU,EAASvc,KAAKkY,OAAOhI,IAAI9H,IAItBmC,GACH6B,EAAG+E,iBAAiBxI,EAASoE,UAAUH,UAAU,EAAOrC,EAAW1G,WAEpEuI,EAAG+E,iBAAiBxI,EAASsE,MAAML,UAAU,EAAOhC,EAAK/G,WACzDuI,EAAG8E,WAAWvI,EAAS0E,UAAUT,SAAU5M,KAAK6L,iBAChDO,EAAGyE,UAAUlI,EAAS2E,WAAWV,SAAU5M,KAAKuX,WAChDnL,EAAGyE,UAAUlI,EAASmE,MAAMF,SAAUoQ,YAAYC,OAClD7Q,EAAG2E,WAAWpI,EAAS4E,YAAYX,SAAU,CAAC5M,KAAKsL,OAAOjB,MAAOrK,KAAKsL,OAAOhB,SAC7E8B,EAAGyE,UAAUlI,EAAS8E,MAAMb,SAAU5M,KAAK8X,MAC3C1L,EAAG+E,iBAAiBxI,EAASuE,OAAON,UAAU,EAAOwP,EAAWvY,YAC5DoF,aAAQ,EAARA,EAAUxB,QACb2E,EAAG8E,WAAWvI,EAASwE,WAAWP,SAAUsP,EAAMvT,SAAS,oBAGxDvC,aAAO,EAAPA,EAASuC,SACZ,IAAK,MAAMqG,KAAe5I,EAAQuC,SAC7BO,EAAOP,SAASqG,IACnB9F,EAAOmT,WAAWrN,EAAa5I,EAAQuC,SAASqG,IAInD,IAAK,MAAMA,KAAekN,EAAMvT,SAC/BO,EAAOmT,WAAWrN,EAAakN,EAAMvT,SAASqG,IAI/C9F,EAAO2I,KAAK0K,GACRL,EAAMO,cACTvT,EAAOwT,cAActQ,EAAImQ,GACzBA,EAAOI,iBAEPJ,EAAOK,OAIT,IAAK,MAAMC,KAASjU,EACnB5I,KAAKkd,UAAUL,EAAOtS,EAAY,OAAF,wBAAOnE,GAAO,CAAE+V,YAAaC,KAI/D,WAAWhU,GACV,MAAMgE,EAAKpM,KAAKoM,GAGhB,IAAImQ,EAASvc,KAAKkY,OAAOhI,IAAI9H,GACxBmU,IACJA,EAAS,IAAInL,EAAUhF,GACvBpM,KAAKkY,OAAO5O,IAAIlB,EAAMmU,IAEvBA,EAAOY,OAAO/U,GAGf,oBAAmDA,EAAYS,GAC9D,MAAMuD,EAAKpM,KAAKoM,GAGhB,IAAImQ,EAASvc,KAAKkY,OAAOhI,IAAI9H,GACxBmU,IACJA,EAAS,IAAInL,EAAUhF,GACvBpM,KAAKkY,OAAO5O,IAAIlB,EAAMmU,GACtBA,EAAOY,OAAO/U,IAEfmU,EAAOa,gBAAgBvU,GAGxB,WAAWT,GAEV,GADepI,KAAKkY,OAAOhI,IAAI9H,GAE/B,KAAM,sBAGP,cAAcV,EAAkBoN,EAAe,MAC9C,MAAM1I,EAAKpM,KAAKoM,GAGhB,IAAIiR,EAAYrd,KAAKiY,SAAS/H,IAAIxI,GAUlC,OATK2V,IACJA,EAAYnJ,EAAqBoJ,YAAYlR,EAAI1E,GACjD1H,KAAKiY,SAAS3O,IAAI5B,EAAS2V,IAEvBvI,GAASuI,EAAUvI,OACvBA,EAAO9U,KAAKiY,SAAS1O,MAEtB8T,EAAUF,OAAOzV,EAAiB,MAARoN,EAAeA,EAAOuI,EAAUvI,MAEnDA,EAGR,YAAYpN,GACX,IAAI2V,EAAYrd,KAAKiY,SAAS/H,IAAIxI,GAKlC,OAJK2V,IACJrd,KAAKud,cAAc7V,GACnB2V,EAAYrd,KAAKiY,SAAS/H,IAAIxI,IAExB2V,EAAUxL,OAGlB,cAAcnK,GACb,IAAI2V,EAAYrd,KAAKiY,SAAS/H,IAAIxI,GAC7B2V,GAGLA,EAAUG,SAGX,aAAanR,EAAoBC,EAAoBlG,GACpD,OAAO,IAAI,EAAOpG,KAAKoM,GAAIC,EAAYC,EAAYlG,GAM9C,UAAUqX,EAActT,G,qCAC7B,OAAO,IAAIkJ,SAASC,IACnB,MAAMsJ,EAAO,KACZ,MACMc,GADMV,YAAYC,MACNjd,KAAK0X,aAAe,IAItC,GAHA1X,KAAK2d,SAASF,EAAOtT,GAErBnK,KAAK4X,QACDZ,GAAiBhX,KAAK4X,MAAQ,IAAO,EAAG,CAC3C,MAAMgG,GAAaZ,YAAYC,MAAQjd,KAAK2X,cAAgB,GAC5D3X,KAAK2X,aAAeqF,YAAYC,MAChC,MAAMY,EAAO,GAAKD,EAAY,KAAS,EACvC5d,KAAK8d,QAAQhD,UAAY,GAAG+C,QAG7BvK,EAAQoK,IAGLvT,GACHnK,KAAK2d,SAASF,EAAOtT,GACrBmJ,EAAQ,IACEtT,KAAKyX,MACfR,OAAO8G,sBAAsBnB,GAE7B7D,WAAW6D,EAAM,O,+RAKpB,SAASa,EAAc/V,GAEtB,IAAIyC,EACJ,GAAIzC,EAAS,CAEZ,GADAyC,EAASnK,KAAKmY,cAAcjI,IAAIxI,IAC3ByC,EAAQ,CACZnK,KAAKud,cAAc7V,GACnB,MAAM2V,EAAYrd,KAAKiY,SAAS/H,IAAIxI,GACpCyC,EAAS,IAAIuL,EAAkB1V,KAAKoM,GAAI1E,EAAQ6B,KAAM8T,GAClD3V,EAAQmM,aAAevB,EAAWoC,QACrCvK,EAAO0J,WAAa7T,KAAKoM,GAAG+J,kBAG7BnW,KAAKmY,cAAc7O,IAAI5B,EAASyC,GAIjCnK,KAAKge,WAAWtW,EAAQ6B,KAAM7B,EAAQ6B,MACtCY,EAAO0H,OAGR7R,KAAK6L,gBAAkB,IAAI4R,EAAM5R,iBACjC,MAAMoR,EAAMD,YAAYC,MACxBjd,KAAK0X,YAAcuF,EAEnBjd,KAAKoM,GAAG6R,SAAS,EAAG,EAAGje,KAAKsL,OAAOjB,MAAOrK,KAAKsL,OAAOhB,QACtDtK,KAAK4b,QAGL,MAAMsC,EAAOle,KAAKsL,OAAOf,WAAW/D,QAC9BoE,EAAO5K,KAAKsL,OAAOV,KAAKO,UACxBgT,EAAWD,EAAKlc,SAAS4I,GAGzBwT,EAAY,IAAItV,IACtB,IAAK,MAAMoT,KAASuB,EAAMY,OAAQ,CACjC,MAAMnV,EAASgT,EAAMhT,OAChBA,IACAkV,EAAUlO,IAAIhH,IAClBkV,EAAU9U,IAAIJ,EAAQ,IAEvBkV,EAAUlO,IAAIhH,GAAQF,KAAKkT,IAG5B,IAAK,MAAMhT,KAAUkV,EAAU5M,OAAQ,CACjCtI,EAAOqD,UACXrD,EAAOwE,KAAK1N,KAAKoM,IAElBlD,EAAO6T,MAIP7T,EAAOmT,WAAW,QAASzR,GAC3B1B,EAAOmT,WAAW,YAAarc,KAAK6L,iBACpC3C,EAAOmT,WAAW,aAAcrc,KAAKuX,WACrCrO,EAAOmT,WAAW,QAASW,YAAYC,OACvC/T,EAAOmT,WAAW,cAAe,CAACrc,KAAKsL,OAAOjB,MAAOrK,KAAKsL,OAAOhB,SACjEpB,EAAOmT,WAAW,QAASrc,KAAK8X,MAGhC,IAAK,MAAM9I,KAAeyO,EAAM9U,SAC/BO,EAAOmT,WAAWrN,EAAayO,EAAM9U,SAASqG,IAI/C,MAAMsP,EAAab,EAAMc,OAAO9X,OAChCyC,EAAOmT,WAAW,cAAeiC,GACjC,IAAK,IAAIne,EAAI,EAAGA,EAAIme,EAAYne,IAAK,CACpC,MAAMuG,EAAW+W,EAAMc,OAAOpe,GAAGuG,SAC3B8X,EAAQf,EAAMc,OAAOpe,GAAGmc,oBAAoB7F,GAAO,GACzDvN,EAAOmT,WAAW,WAAWlc,cAAeuG,GAC5CwC,EAAOmT,WAAW,WAAWlc,aAAcqe,EAAM7H,SACjDzN,EAAOmT,WAAW,WAAWlc,aAAcqe,EAAM9H,SAIlD,IAAK,MAAMwF,KAASkC,EAAUlO,IAAIhH,GACjClJ,KAAK8c,oBAAoB5T,EAAQgT,EAAOiC,GAKtCzW,IACHyC,EAAOqT,SAEH9V,EAAQmM,YAAcvB,EAAWoC,OACpC1U,KAAKge,cAQR,WAAW3T,EAAgBC,GAC1B,IAAKtK,KAAK0a,cACT,OAED,MAAM+D,EAAcze,KAAK0a,cAAcK,YAAc/a,KAAKqE,MAAQ,EAC5Dqa,EAAe1e,KAAK0a,cAAcM,aAAehb,KAAKqE,MAAQ,EACpEgG,EAAiB,MAATA,EAAgBA,EAAQoU,EAChCnU,EAAmB,MAAVA,EAAiBA,EAASoU,EACnC1e,KAAKsL,OAAOlB,OAAOC,EAAOC,GAE1BtK,KAAK+Z,OAAOM,MAAMsE,eAAiB,cACnC3e,KAAK+Z,OAAOM,MAAMsE,eAAiB,YACnC3e,KAAK+Z,OAAOM,MAAMhQ,MAAQrK,KAAK0a,cAAcK,YAAc,KAC3D/a,KAAK+Z,OAAOM,MAAM/P,OAAStK,KAAK0a,cAAcM,aAAe,KAC7Dhb,KAAK+Z,OAAO6E,aAAa,QAASH,EAAYI,YAC9C7e,KAAK+Z,OAAO6E,aAAa,SAAUF,EAAaG,YAGjD,iBAAiBpS,EAAcqS,EAA8C1Y,GACvEpG,KAAK+Z,QACV/Z,KAAK+Z,OAAOvG,iBAAiB/G,EAAMqS,EAAU1Y,GAG9C,oBAAoBqG,EAAcqS,EAA8C1Y,GAC1EpG,KAAK+Z,QACV/Z,KAAK+Z,OAAO8B,oBAAoBpP,EAAMqS,EAAU1Y,GAMjD,OAAOiR,EAAkB,M,MACxBA,WAAI0H,YAAY/e,KAAK+Z,QACrB9C,OAAOzD,iBAAiB,SAAUxT,KAAKge,WAAWnM,KAAK7R,KAAM,KAAM,OACnEA,KAAKge,aACLhe,KAAKgf,YACLhf,KAAKyb,oBAEDzE,IACHhX,KAAK8d,QAAU9D,SAASC,cAAc,OACb,QAAzB,EAAAja,KAAK+Z,OAAOW,qBAAa,SAAEqE,YAAY/e,KAAK8d,SAC5CvM,OAAO6I,OAAOpa,KAAK8d,QAAQzD,MAAO,CACjC3T,SAAU,QACVuY,aAAc,OACdC,OAAQ,GACR7c,MAAO,OACPkY,IAAK,OACL9S,MAAO,MACP0X,SAAU,OACVC,WAAY,qBACZC,QAAS,WG7mBN,MAAMC,EAeZ,YAAYC,GAdZ,KAAAlB,OAAkB,GAClB,KAAApG,SAAiC,IAAInP,IAErC,KAAA+C,gBAAyB,CAAC,EAAK,EAAK,EAAK,GAGzC,KAAA0S,OAAkB,GAElB,KAAA5V,SAA2B,CAC1B6W,WAAY,KACZC,OAAQ,KACRC,UAAW,MAIX1f,KAAKuf,SAAWA,EAGjB,SAASrD,GACR,MAAM,SAAEtT,GAAasT,EAEfyD,EAAezD,I,YAEhBA,EAAM0D,mBAAmBnJ,IAC5BzW,KAAKue,OAAOvV,KAAKkT,GAIlB,IAAK,MAAM2D,KAAa3D,EAAMI,oBAAoBnU,GACjDnI,KAAKuf,SAAS/C,WAAWqD,EAAUzX,OAIlB,QAAlB,EAAI8T,EAAMjT,gBAAQ,eAAEvB,UACnB1H,KAAK8f,WAAW5D,EAAMjT,SAASvB,UAEd,QAAlB,EAAIwU,EAAMjT,gBAAQ,eAAEtB,YACnB3H,KAAK8f,WAAW5D,EAAMjT,SAAStB,YAEd,QAAlB,EAAIuU,EAAMjT,gBAAQ,eAAErB,cACnB5H,KAAK8f,WAAW5D,EAAMjT,SAASrB,cAEd,QAAlB,EAAIsU,EAAMjT,gBAAQ,eAAEpB,kBACnB7H,KAAK8f,WAAW5D,EAAMjT,SAASpB,iBAGhC7H,KAAK+f,qBAAqB7D,IAG3ByD,EAAYzD,GAEZ,IAAK,MAAMW,KAASjU,EACnB+W,EAAY9C,GAKb,OADA7c,KAAKqe,OAAOrV,KAAKkT,GACVlc,KAAKqe,OAAO5X,OAAS,EAG7B,qBAAqByV,GACpB,MAAM,aAAEO,GAAiBP,EACzB,IAAKO,EACJ,OAGD,MAAM1c,EAAOyC,MAAMP,KAAKia,EAAMrT,UAAUmX,UAAUzZ,KAAKpG,GAAqBA,EAAEJ,OAE9E,IAAK,MAAM8f,KAAa3D,EAAMI,oBAAoBnU,GACjDnI,KAAKuf,SAASU,oBAAoBJ,EAAUzX,KAAMrI,GAIpD,WAAW2H,GACV,MAAMyB,EAAKnJ,KAAKuf,SAAShC,cAAc7V,GAEvC,OADA1H,KAAKiY,SAAS3O,IAAIH,EAAIzB,GACfyB,EAGR,eAAezB,GACd,IAAK,IAAKyB,EAAIsH,KAAUzQ,KAAKiY,SAASiI,UACrC,GAAIzP,IAAU/I,EAAS,OAAOyB,EAG/B,OAAO,KAGR,cAAcgX,GACb,GAA2B,iBAAhBA,EAA0B,CACpC,MAAMzY,EAAU1H,KAAKiY,SAAS/H,IAAIiQ,GAClC,IAAKzY,EACJ,KAAM,0BAA0ByY,IAEjCngB,KAAKuf,SAAShC,cAAc7V,EAASyY,OAC/B,CACN,MAAMhX,EAAKnJ,KAAKogB,eAAeD,GAC/B,GAAU,MAANhX,EACH,KAAM,yCAEPnJ,KAAKuf,SAAShC,cAAc4C,EAAahX,IAI3C,YAAYgX,GACX,MAAMzY,EAAiC,iBAAhByY,EAA2BngB,KAAKiY,SAAS/H,IAAIiQ,GAAeA,EACnF,IAAKzY,EACJ,KAAM,yBAEP,OAAO1H,KAAKuf,SAAStK,YAAYvN,GAGlC,cAAcyY,GACb,MAAMzY,EAAiC,iBAAhByY,EAA2BngB,KAAKiY,SAAS/H,IAAIiQ,GAAeA,EACnF,IAAKzY,EACJ,KAAM,yBAEP1H,KAAKuf,SAASc,cAAc3Y,GAGvB,O,qCAKL,OAJI1H,KAAKsgB,aACRtgB,KAAKugB,kBAENvgB,KAAKwgB,wBACQxgB,KAAKuf,SAASkB,UAAUzgB,O,+RAG5B,kBAIT,IAHYA,KAAKuf,SAAiBnT,GAEnByB,aAAa,uBAE3B,KAAM,iDAGP7N,KAAK0gB,UAAY,IAAI9M,EAAc,KAAMtB,EAAWoC,OAG3C,kBACT,IAAK1U,KAAKwe,MAAO,OACZxe,KAAK0gB,WAAW1gB,KAAK2gB,kBAE1B,MAAMC,EAAe,GACrB,IAAK,MAAM1E,KAASlc,KAAKqe,OACpBnC,EAAM1T,SAAW0T,EAAMjT,WAAaiT,EAAMjT,SAASjB,eACtDkU,EAAM1T,SAAU,EAChBoY,EAAa5X,KAAKkT,IAGpBlc,KAAK6gB,iBACL,MAAMC,EAAY9gB,KAAKuf,SAASjU,OAChCtL,KAAKuf,SAASjU,OAAStL,KAAKwe,MAC5Bxe,KAAKuf,SAASkB,UAAUzgB,KAAMA,KAAK0gB,WACnC1gB,KAAKuf,SAASjU,OAASwV,EACvB9gB,KAAK+gB,gBACL,IAAK,MAAM7E,KAAS0E,EACnB1E,EAAM1T,SAAU,EAIR,kBACT,IAAKxI,KAAKwe,MAAO,OACjB,MAAMN,EAAOle,KAAKwe,MAAMjU,WAAW/D,QAC7BoE,EAAO5K,KAAKwe,MAAM5T,KAAKO,UACvBgT,EAAWD,EAAKlc,SAAS4I,GACzBzI,EAAUnC,KAAKwe,MAAM5T,KAAKvH,gBAAgB,CAAC,EAAK,EAAK,EAAK,IAC1D2d,EAAW5e,EAAU,CAACD,EAAQ,GAAIA,EAAQ,GAAIA,EAAQ,KAE5DnC,KAAK2I,SAAS+W,UAAYsB,EAC1BhhB,KAAK2I,SAAS8W,OAAStB,EAGhB,gBACPne,KAAK2I,SAAS6W,WAAaxf,KAAKiV,YAAYjV,KAAK0gB,WAG1C,iBACP1gB,KAAKqgB,cAAcrgB,KAAK0gB,WACxB1gB,KAAK2I,SAAS6W,WAAa,MC3LtB,MAAM,UAAc9U,EAA3B,c,oBACC,KAAAjD,MAAe,CAAC,EAAK,EAAK,EAAK,GAC/B,KAAAO,cAAe,GCKT,MAAMiZ,UAAuB,EACnC,KAAK7U,EAA2BC,EAAqBC,GACpD,MAAM4U,EAA4B,CACjCC,YAAa,CACZ1U,KAAMC,sBAAsBoE,MAG9B,IAAK,IAAI3Q,EAAI,EAAGA,EAXM,EAWeA,IAAK,CACzC,MAAM6O,EAAc,WAAW7O,KAE/B+gB,EAAc,GAAGlS,cAA2B,CAAEvC,KAAMC,sBAAsBsE,YAC1EkQ,EAAc,GAAGlS,aAA2B,CAAEvC,KAAMC,sBAAsBsE,YAC1EkQ,EAAc,GAAGlS,aAA2B,CAAEvC,KAAMC,sBAAsBsE,YAC1EkQ,EAAc,GAAGlS,cAA2B,CAAEvC,KAAMC,sBAAsBsE,YAC1EkQ,EAAc,GAAGlS,cAA2B,CAAEvC,KAAMC,sBAAsBC,OAC1EuU,EAAc,GAAGlS,YAA2B,CAAEvC,KAAMC,sBAAsBC,OAC1EuU,EAAc,GAAGlS,eAA2B,CAAEvC,KAAMC,sBAAsBC,OAG3EtE,MAAMqF,KAAKtB,EAAIC,GC7BjB,mvBD6B6CC,GE7B7C,8wHF6B2E,CACxEE,WAAY,CACX/E,MAAO,CACNgF,KAAMC,sBAAsBC,MAC5BpD,KAAM,GAEP3C,OAAQ,CACP6F,KAAMC,sBAAsBC,MAC5BpD,KAAM,GAEP6X,GAAI,CACH3U,KAAMC,sBAAsBC,MAC5BpD,KAAM,IAGRZ,SAAU,OAAF,wBACJuY,GAAa,CAEhB,kBAAmB,CAClBzU,KAAMC,sBAAsBU,YAE7B,yBAA0B,CACzBX,KAAMC,sBAAsBiE,MAE7B,4BAA6B,CAC5BlE,KAAMC,sBAAsBiE,MAE7B,mCAAoC,CACnClE,KAAMC,sBAAsBC,OAE7B,uBAAwB,CACvBF,KAAMC,sBAAsBiE,MAE7B,yBAA0B,CACzBlE,KAAMC,sBAAsBiE,MAE7B,2BAA4B,CAC3BlE,KAAMC,sBAAsBiE,MAE7B,+BAAgC,CAC/BlE,KAAMC,sBAAsBiE,MAE7B,oBAAqB,CACpBlE,KAAMC,sBAAsBoE,KAE7B,sBAAuB,CACtBrE,KAAMC,sBAAsBoE,KAE7B,wBAAyB,CACxBrE,KAAMC,sBAAsBoE,KAE7B,4BAA6B,CAC5BrE,KAAMC,sBAAsBoE,KAE7B,qBAAsB,CACrBrE,KAAMC,sBAAsBiE,MAE7B0Q,SAAU,CACT5U,KAAMC,sBAAsBoE,KAE7BwQ,WAAY,CACX7U,KAAMC,sBAAsBoE,KAE7B2O,OAAQ,CACPhT,KAAMC,sBAAsBM,YAE7B0S,UAAW,CACVjT,KAAMC,sBAAsBsE,YAE7BwO,WAAY,CACX/S,KAAMC,sBAAsBoE,UAO1B,MAAMyQ,UAA6BN,EACzC,KAAK7U,GACJ/D,MAAMqF,KAAKtB,EG5Gb,6pDCAA,2qICIO,MAAMoV,UAAqB,EACjC,KAAKpV,GACJ/D,MAAMqF,KAAKtB,ECNb,+RCAA,mUFM+C,CAC5CI,WAAY,CACX4U,GAAI,CACH3U,KAAMC,sBAAsBC,MAC5BpD,KAAM,IAGRZ,SAAU,CACT8Y,SAAU,CACThV,KAAMC,sBAAsBoE,KAE7B4Q,UAAW,CACVjV,KAAMC,sBAAsBC,WGd1B,MAAMgV,UAAqB,EACjC,KAAKvV,GACJ/D,MAAMqF,KAAKtB,ECNb,+oBCAA,ugEFM+C,CAC5CI,WAAY,CACX/E,MAAO,CACNgF,KAAMC,sBAAsBC,MAC5BpD,KAAM,GAEP3C,OAAQ,CACP6F,KAAMC,sBAAsBC,MAC5BpD,KAAM,GAEP6X,GAAI,CACH3U,KAAMC,sBAAsBC,MAC5BpD,KAAM,IAGRZ,SAAU,CACT8W,OAAQ,CACPhT,KAAMC,sBAAsBM,YAE7B0S,UAAW,CACVjT,KAAMC,sBAAsBsE,YAE7BwO,WAAY,CACX/S,KAAMC,sBAAsBoE,SGP1B,MAAM8Q,UAAY/a,EACxB,YAAY9G,EAAcqG,GACzB,IAAI,SAAED,EAAQ,QAAE0b,EAAO,IAAEC,GA+B3B,SAAkB/hB,GACjB,MAAMoG,EAAqB,GACrB4b,EAAgB,GAChBF,EAAqB,GACrBC,EAAgB,GAEtB,IAAK,MAAME,KAAQjiB,EAAKkiB,MAAM,MAE7B,OADeD,EAAKC,MAAM,KAAK,IAG9B,IAAK,IACJ9b,EAAS6C,KAAKkZ,EAAeF,IAC7B,MAGD,IAAK,IACJD,EAAM/Y,KAAKmZ,EAAaH,IACxB,MAGD,IAAK,KACJF,EAAI9Y,KAAKoZ,EAAWJ,IACpB,MAGD,IAAK,KACJH,EAAQ7Y,KAAKqZ,EAAeL,IAK/B,MAAO,CACN7b,SAAW4b,EAAcO,OAAO/b,KAAK3F,GAAgBuF,EAASvF,EAAE,MAChEihB,QAAUE,EAAcO,OAAO/b,KAAK3F,GAAgBihB,EAAQjhB,EAAE,MAC9DkhB,IAAMC,EAAcO,OAAO/b,KAAK3F,GAAgBkhB,EAAIlhB,EAAE,OAjErB2hB,CAASxiB,GAC1C,GAAIqG,aAAO,EAAPA,EAAS/B,MAAO,CACnB,MAAMN,EAAUjE,EAAQiE,QAAQqC,EAAQ/B,MAAO+B,EAAQ/B,MAAO+B,EAAQ/B,OACtE8B,EAAWA,EAASI,KAAK1B,GAAMd,EAAQsD,gBAAgBxC,KAExD,GAAIuB,aAAO,EAAPA,EAASoc,UACZ,IAAK,IAAIriB,EAAI,EAAGA,EAAIgG,EAASM,OAAQtG,GAAK,EAAG,CAC5C,MAAMsiB,EAAKtc,EAAShG,GACduiB,EAAKvc,EAAShG,EAAI,GACxBgG,EAAShG,GAAKuiB,EACdvc,EAAShG,EAAI,GAAKsiB,EAWpBpa,MAP0BlC,EAASI,KAAI,CAACG,EAAUvG,KAC1C,CACNuG,WACAE,OAAQib,EAAQ1hB,GAChBihB,GAAIU,EAAI3hB,QAMX,eAAqBiT,G,qCACpB,MAAMuP,QAAiBC,MAAMxP,GACvBrT,QAAa4iB,EAASE,OAC5B,OAAO,IAAIjB,EAAI7hB,I,gSA0CjB,SAASmiB,EAAeF,GACvB,OAAOA,EACLC,MAAM,KACNpY,QAAQiZ,GAAMA,IACdC,MAAM,GACNxc,IAAIyc,YAGP,SAASX,EAAeL,GACvB,OAAOA,EACLC,MAAM,KACNpY,QAAQiZ,GAAMA,IACdC,MAAM,GACNxc,IAAIyc,YAGP,SAASZ,EAAWJ,GACnB,MAAM3c,EAAI2c,EACRC,MAAM,KACNpY,QAAQiZ,GAAMA,IACdC,MAAM,GACNxc,KAAIpG,GAAK6iB,WAAW7iB,KAEtB,MAAO,CAACkF,EAAE,GAAI,EAAIA,EAAE,IAGrB,SAAS8c,EAAaH,GACrB,OAAOA,EACLC,MAAM,KACNpY,QAAQiZ,GAAMA,IACdC,MAAM,GACNxc,KAAK3F,GAAMA,EAAEqhB,MAAM,KAAK1b,KAAIpG,GAAK8iB,SAAS9iB,EAAG,IAAM,MCjH/C,MAAM+iB,UAAarc,EACzB,cACC,MAAM9G,EAAqB,IAAIyC,MAAM2gB,EAAc1c,OAAS,GAC5D,IAAK,IAAItG,EAAI,EAAGA,EAAIJ,EAAK0G,OAAQtG,IAAK,CAErC,MAAMuG,EAAmB,CACxByc,EAAkB,EAAJhjB,EAAQ,GACtBgjB,EAAkB,EAAJhjB,EAAQ,GACtBgjB,EAAkB,EAAJhjB,EAAQ,IAGjBihB,EAAa,CAClBgC,GAAa,EAAJjjB,EAAQ,GAAKijB,EAAQ3c,QAC9B2c,GAAa,EAAJjjB,EAAQ,GAAKijB,EAAQ3c,SAGzBG,EAAkB,CAAC,EAAK,EAAK,GACnC7G,EAAKI,GAAK,CAAEuG,WAAU0a,KAAIxa,SAAQa,MAAO,CAAC,EAAK,EAAK,EAAK,IAG1DY,MAAMtI,GACNC,KAAKsH,oBAKP,MAAM8b,EAAU,CACf,EAAK,EACL,EAAK,EACL,EAAK,EAEL,EAAK,EACL,EAAK,EACL,EAAK,GAIAD,EAAgB,EAEpB,EAAK,GAAM,EACZ,EAAK,GAAM,GACV,GAAM,GAAM,EAEb,GAAM,GAAM,GACX,GAAM,GAAM,EACb,EAAK,GAAM,EAGX,EAAK,EAAK,GACT,EAAK,EAAK,EACX,GAAM,EAAK,GAEV,GAAM,EAAK,EACZ,GAAM,EAAK,GACV,EAAK,EAAK,GAGV,EAAK,EAAK,GACV,EAAK,GAAM,GACX,GAAM,EAAK,GAEX,GAAM,GAAM,GACZ,GAAM,EAAK,GACX,EAAK,GAAM,EAGZ,EAAK,GAAM,EACX,EAAK,EAAK,EACV,GAAM,GAAM,EAEZ,GAAM,EAAK,EACX,GAAM,GAAM,EACZ,EAAK,EAAK,EAGV,EAAK,GAAM,GACV,EAAK,GAAM,EACZ,EAAK,EAAK,GAET,EAAK,EAAK,EACX,EAAK,EAAK,GACT,EAAK,GAAM,EAGZ,GAAM,GAAM,EACZ,GAAM,EAAK,GACV,GAAM,GAAM,GAEZ,GAAM,EAAK,GACX,GAAM,GAAM,EACb,GAAM,EAAK,GC1FL,MAAME,UAAexc,EAC3B,YAAYyc,EAAqBC,GAChC,MAAMxjB,EAAuB,IAAIyC,MAAM8gB,EAAcC,EAAc,GAEnE,IAAIpjB,EAAI,EACR,IAAK,IAAIa,GAAmB,GAAfuiB,EAAoBviB,EAAkB,GAAduiB,EAAmBviB,IAAK,CAC5D,MAAMwiB,EAAO9iB,KAAKC,IAAMK,EAAIuiB,GACtBE,EAAO/iB,KAAKC,KAAOK,EAAI,GAAKuiB,GAElC,IAAK,IAAIxiB,GAAmB,GAAfuiB,EAAoBviB,EAAkB,GAAduiB,EAAmBviB,IAAK,CAC5D,MAAM2iB,EAAO,EAAIhjB,KAAKC,IAAMI,EAAIuiB,GAC1BK,EAAO,EAAIjjB,KAAKC,KAAOI,EAAI,GAAKuiB,GAEhCM,EAA2B,CAChC,CAACD,EAAMF,GACP,CAACC,EAAMD,GACP,CAACC,EAAMF,GACP,CAACG,EAAMH,GACP,CAACG,EAAMF,GACP,CAACC,EAAMF,IAGR,IAAK,MAAMne,KAAKue,EAAM,CACrB,MAAMld,GAoFmBT,EApFaZ,EAAE,GAoFFU,EApFMV,EAAE,GAqF3C,CACN3E,KAAKW,IAAI0E,GAAOrF,KAAKY,IAAI2E,GACzBvF,KAAKY,IAAIyE,GACTrF,KAAKW,IAAI0E,GAAOrF,KAAKW,IAAI4E,KAtFhBmB,EAAuB,CAC5BV,WACAE,OAHcxE,EAAUsE,GAIxB0a,GAAIyC,GAAcxe,EAAE,GAAIA,EAAE,IAC1BoC,MAAO,CAAC,EAAK,EAAK,EAAK,IAGxB1H,EAAKI,KAAOiH,IA2EjB,IAA8BnB,EAAaF,EAvEzCsC,MAAMtI,IAID,MAAM+jB,UAAmBjd,EAC/B,YAAYkd,GACX1b,MAAM,CACL,IAAI2b,EAAeD,EAAK,CAAC,EAAG,EAAG,IAC/B,IAAIC,EAAeD,EAAK,CAAC,GAAI,EAAG,IAEhC,IAAIC,EAAeD,EAAK,CAAC,EAAG,EAAG,IAC/B,IAAIC,EAAeD,EAAK,EAAE,EAAG,EAAG,IAEhC,IAAIC,EAAeD,EAAK,CAAC,EAAG,EAAG,IAC/B,IAAIC,EAAeD,EAAK,CAAC,EAAG,GAAI,OAK5B,MAAMC,UAAuB9d,EACnC,YAAY6d,EAAaxhB,GACxB,MAAMxC,EAAuB,IAAIyC,MAAMuhB,EAAMA,GACvCE,EAAgB,CAAC1hB,EAAG,GAAIA,EAAG,GAAIA,EAAG,IAClC2hB,EAAQ5hB,EAAMC,EAAI0hB,GAElB9d,EAAW,IAAI3D,MAAMuhB,EAAMA,GAC3BI,EAAY,IAAI3hB,OAAOuhB,EAAM,IAAMA,EAAM,IAE/C,IAAIK,EAAM,EACV,MAAMC,EAAM,GAAKN,EAAM,GACvB,IAAK,IAAI/iB,EAAI,EAAGA,EAAI+iB,EAAK/iB,IACxB,IAAK,IAAID,EAAI,EAAGA,EAAIgjB,EAAKhjB,IAAK,CAC7B,MAAMsE,EAAY,CACjBtE,EAAIsjB,EACJrjB,EAAIqjB,GAECC,EAAK,CACK,GAAdjf,EAAE,GAAK,IACO,GAAdA,EAAE,GAAK,KAET,IAAIqB,EAAWnE,EACfmE,EAAWlC,EAAWkC,EAAUjC,EAAgB,CAAC6f,EAAG,GAAIA,EAAG,GAAIA,EAAG,IAAKL,IACvEvd,EAAWlC,EAAWkC,EAAUjC,EAAgB,CAAC6f,EAAG,GAAIA,EAAG,GAAIA,EAAG,IAAKJ,IACvExd,EAAWtE,EAAUsE,GACrB,MAAMU,EAAuB,CAC5BV,WACAE,OAAQF,EACR0a,GAAI,CAAC,EAAG,GACR3Z,MAAO,CAAC,EAAK,EAAK,EAAK,IAElBtH,EAAIY,EAAIC,EAAI+iB,EAClB5d,EAAShG,GAAKiH,EAEVrG,EAAIgjB,EAAM,GAAK/iB,EAAI+iB,EAAM,IAC5BI,EAAUC,KAASjkB,EACnBgkB,EAAUC,KAASjkB,EAAI4jB,EAAM,EAC7BI,EAAUC,KAASjkB,EAAI4jB,EACvBI,EAAUC,KAASjkB,EACnBgkB,EAAUC,KAASjkB,EAAI,EACvBgkB,EAAUC,KAASjkB,EAAI4jB,EAAM,GAKhC,IAAK,IAAI5jB,EAAI,EAAGA,EAAIgkB,EAAU1d,OAAQtG,IACrCJ,EAAKI,GAAKgG,EAASge,EAAUhkB,IAE9BkI,MAAMtI,IAYR,SAAS8jB,GAAc5d,EAAaF,GAGnC,MAAO,CAFGE,EAAMvF,KAAKC,GAAK,EAAI,IACnBoF,EAAMrF,KAAKC,GAAK,ICrHrB,MAAM4jB,WAAa1d,EACzB,cACCwB,MAAM,CACL,CAAE3B,SAAU,CAAC,EAAK,EAAK,GAAM0a,GAAI,CAAC,EAAK,GAAM3Z,MAAO,CAAC,EAAK,EAAK,EAAK,GAAMb,OAAQ,CAAC,EAAK,EAAK,IAC7F,CAAEF,SAAU,EAAE,EAAK,EAAK,GAAM0a,GAAI,CAAC,EAAK,GAAM3Z,MAAO,CAAC,EAAK,EAAK,EAAK,GAAMb,OAAQ,CAAC,EAAK,EAAK,IAC9F,CAAEF,SAAU,CAAC,GAAM,EAAK,GAAM0a,GAAI,CAAC,EAAK,GAAM3Z,MAAO,CAAC,EAAK,EAAK,EAAK,GAAMb,OAAQ,CAAC,EAAK,EAAK,IAE9F,CAAEF,SAAU,EAAE,GAAM,EAAK,GAAM0a,GAAI,CAAC,EAAK,GAAM3Z,MAAO,CAAC,EAAK,EAAK,EAAK,GAAMb,OAAQ,CAAC,EAAK,EAAK,IAC/F,CAAEF,SAAU,CAAC,GAAM,EAAK,GAAM0a,GAAI,CAAC,EAAK,GAAM3Z,MAAO,CAAC,EAAK,EAAK,EAAK,GAAMb,OAAQ,CAAC,EAAK,EAAK,IAC9F,CAAEF,SAAU,EAAE,EAAK,EAAK,GAAM0a,GAAI,CAAC,EAAK,GAAM3Z,MAAO,CAAC,EAAK,EAAK,EAAK,GAAMb,OAAQ,CAAC,EAAK,EAAK,MAE/F5G,KAAKsH,uBCrBHkd,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,GAAGF,EAAyBE,GAC3B,OAAOF,EAAyBE,GAAUjlB,QAG3C,IAAIC,EAAS8kB,EAAyBE,GAAY,CAGjDjlB,QAAS,IAOV,OAHAklB,EAAoBD,GAAUhlB,EAAQA,EAAOD,QAASglB,GAG/C/kB,EAAOD,QCjBf,OCFAglB,EAAoB7hB,EAAI,CAACnD,EAASmlB,KACjC,IAAI,IAAIpM,KAAOoM,EACXH,EAAoB5hB,EAAE+hB,EAAYpM,KAASiM,EAAoB5hB,EAAEpD,EAAS+Y,IAC5EjH,OAAOsT,eAAeplB,EAAS+Y,EAAK,CAAEsM,YAAY,EAAM5U,IAAK0U,EAAWpM,MCJ3EiM,EAAoB5hB,EAAI,CAACkiB,EAAKC,IAAUzT,OAAO0T,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFP,EAAoBW,EAAK3lB,IACH,oBAAX4lB,QAA0BA,OAAOC,aAC1C/T,OAAOsT,eAAeplB,EAAS4lB,OAAOC,YAAa,CAAE7U,MAAO,WAE7Dc,OAAOsT,eAAeplB,EAAS,aAAc,CAAEgR,OAAO,KHFhDgU,EAAoB,M","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"toru\"] = factory();\n\telse\n\t\troot[\"toru\"] = factory();\n})(self, function() {\nreturn ","export type Point4 = [number, number, number, number];\nexport type Point3 = [number, number, number];\nexport type Point2 = [number, number];\nexport type Vector4 = [number, number, number, number];\nexport type Vector3 = [number, number, number];\nexport type Vector2 = [number, number];\nexport type Rect = [number, number, number, number];\nexport type LonLat = [number, number];\n\nexport type Columns = [Vector4, Vector4, Vector4, Vector4];\nexport type Rows = [Vector4, Vector4, Vector4, Vector4];\n\n// prettier-ignore\nexport class Matrix4 {\n\tprivate _data: Float32Array;\n\n\tconstructor(data?: number[] | Float32Array) {\n\t\tthis._data = new Float32Array(16);\n\t\tif (data) {\n\t\t\tfor (let i = 0; i < 16; i++) {\n\t\t\t\tthis._data[i] = data[i];\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic identity(): Matrix4 {\n\t\treturn new Matrix4([\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1,\n\t\t]);\n\t}\n\n\tstatic fromColumns(cols: Columns): Matrix4 {\n\t\treturn new Matrix4([\n\t\t\tcols[0][0], cols[1][0], cols[2][0], cols[3][0],\n\t\t\tcols[0][1], cols[1][1], cols[2][1], cols[3][1],\n\t\t\tcols[0][2], cols[1][2], cols[2][2], cols[3][2],\n\t\t\tcols[0][3], cols[1][3], cols[2][3], cols[3][3],\n\t\t]);\n\t}\n\n\tstatic perspective(aspect: number, fov: number, near: number, far: number): Matrix4 {\n\t\tconst fovRad = fov * (Math.PI / 180);\n\t\tconst f = 1.0 / Math.tan(fovRad / 2.0);\n\t\tconst range = 1.0 / (near - far);\n\t\treturn new Matrix4([\n\t\t\tf / aspect, 0,                    0,                      0,\n\t\t\t0,          f,                    0,                      0,\n\t\t\t0,          0, (near + far) * range, near * far * range * 2,\n\t\t\t0,          0,                   -1,                      0,\n\t\t]);\n\t}\n\n\tstatic rotation(x: number, y: number, z: number): Matrix4 {\n\t\tconst axisangle: Vector3 = [x, y, z];\n\n\t\tfunction cosSin(axis: number): [number, number] {\n\t\t\treturn [Math.cos(axisangle[axis]), Math.sin(axisangle[axis])];\n\t\t}\n\n\n\t\tconst [cosx, sinx] = cosSin(0);\n\t\tconst [cosy, siny] = cosSin(1);\n\t\tconst [cosz, sinz] = cosSin(2);\n\t\tconst rotx = new Matrix4([\n\t\t\t1,    0,     0, 0,\n\t\t\t0, cosx, -sinx, 0,\n\t\t\t0, sinx,  cosx, 0,\n\t\t\t0,    0,     0, 1,\n\t\t]);\n\t\tconst roty = new Matrix4([\n\t\t\tcosy,  0, siny, 0,\n\t\t\t   0,  1,    0, 0,\n\t\t\t-siny, 0, cosy, 0,\n\t\t\t    0, 0,    0, 1,\n\t\t]);\n\t\tconst rotz = new Matrix4([\n\t\t\tcosz, -sinz, 0, 0,\n\t\t\tsinz,  cosz, 0, 0,\n\t\t\t   0,     0, 1, 0,\n\t\t\t   0,     0, 0, 1,\n\t\t]);\n\n\t\treturn rotx.multiply(roty.multiply(rotz));\n\t}\n\n\tstatic translation(x: number, y: number, z: number): Matrix4 {\n\t\treturn new Matrix4([\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1,\n\t\t]);\n\t}\n\n\tstatic scaling(x: number, y?: number, z?: number): Matrix4 {\n\t\tif (y == null) y = x;\n\t\tif (z == null) z = y;\n\n\t\treturn new Matrix4([\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1,\n\t\t]);\n\t}\n\n\tstatic lookAt(from: Point3, to: Point3) {\n\t\tconst forward = normalize([\n\t\t\tfrom[0] - to[0],\n\t\t\tfrom[1] - to[1],\n\t\t\tfrom[2] - to[2],\n\t\t]);\n\n\t\tconst right = cross([0.0, 1.0, 0.0], forward);\n\n\t\tconst up = cross(forward, right);\n\n\t\tconst view = new Matrix4([\n\t\t\tright[0], up[0], forward[0], from[0],\n\t\t\tright[1], up[1], forward[1], from[1],\n\t\t\tright[2], up[2], forward[2], from[2],\n\t\t         0,      0,         0,       1,\n\t\t]);\n\n\t\treturn view;\n\t}\n\n\tclone(): Matrix4 {\n\t\treturn new Matrix4(this._data);\n\t}\n\n\ttoArray(): number[] {\n\t\treturn Array.from(this._data);\n\t}\n\n\tat(col: number, row: number): number {\n\t\tconst idx = row * 4 + col;\n\t\treturn this._data[idx];\n\t}\n\n\tcolumn(axis: number): Vector4 {\n\t\tconst d = this._data;\n\t\treturn [\n\t\t\td[axis + 0],\n\t\t\td[axis + 4],\n\t\t\td[axis + 8],\n\t\t\td[axis + 12],\n\t\t];\n\t}\n\n\trow(axis: number): Vector4 {\n\t\tconst d = this._data;\n\t\tconst o = 4 * axis;\n\t\treturn [\n\t\t\td[o + 0],\n\t\t\td[o + 1],\n\t\t\td[o + 2],\n\t\t\td[o + 3],\n\t\t];\n\t}\n\n\tget columns(): Columns {\n\t\treturn [\n\t\t\tthis.column(0),\n\t\t\tthis.column(1),\n\t\t\tthis.column(2),\n\t\t\tthis.column(3),\n\t\t];\n\t}\n\n\tget rows(): Rows {\n\t\treturn [\n\t\t\tthis.row(0),\n\t\t\tthis.row(1),\n\t\t\tthis.row(2),\n\t\t\tthis.row(3),\n\t\t];\n\t}\n\n\tmultiply(other: Matrix4): Matrix4 {\n\t\tconst [colx, coly, colz, colw] = other.columns;\n\t\tconst columns: Columns = [\n\t\t\tthis.multiplyVector4(colx),\n\t\t\tthis.multiplyVector4(coly),\n\t\t\tthis.multiplyVector4(colz),\n\t\t\tthis.multiplyVector4(colw),\n\t\t];\n\t\treturn Matrix4.fromColumns(columns);\n\t}\n\n\tmultiplyVector4(vec: Vector4): Vector4 {\n\t\tconst cols = this.columns;\n\n\t\tconst x = scaleVector4(cols[0], vec[0]);\n\t\tconst y = scaleVector4(cols[1], vec[1]);\n\t\tconst z = scaleVector4(cols[2], vec[2]);\n\t\tconst w = scaleVector4(cols[3], vec[3]);\n\t\treturn [\n\t\t\t(x[0] + y[0] + z[0] + w[0]),\n\t\t\t(x[1] + y[1] + z[1] + w[1]),\n\t\t\t(x[2] + y[2] + z[2] + w[2]),\n\t\t\t(x[3] + y[3] + z[3] + w[3]),\n\t\t];\n\t}\n\n\ttransformPoint3(point: Point3): Point3 {\n\t\tconst vec = this.multiplyVector4([point[0], point[1], point[2], 1]);\n\n\t\treturn [\n\t\t\tvec[0] / vec[3],\n\t\t\tvec[1] / vec[3],\n\t\t\tvec[2] / vec[3],\n\t\t];\n\t}\n\n\tinverse(): Matrix4 {\n\t\tconst inv = new Array(16);\n\t\tconst m = this.toArray();\n\n\t\tinv[0] = m[5]*m[10]*m[15] -\n\t\t\tm[5]*m[14]*m[11] -\n\t\t\tm[6]*m[9]*m[15] +\n\t\t\tm[6]*m[13]*m[11] +\n\t\t\tm[7]*m[9]*m[14] -\n\t\t\tm[7]*m[13]*m[10];\n\n\t\tinv[1] = -m[1]*m[10]*m[15] +\n\t\t\tm[1]*m[14]*m[11] +\n\t\t\tm[2]*m[9]*m[15] -\n\t\t\tm[2]*m[13]*m[11] -\n\t\t\tm[3]*m[9]*m[14] +\n\t\t\tm[3]*m[13]*m[10];\n\n\t\tinv[2] = m[1]*m[6]*m[15] -\n\t\t\tm[1]*m[14]*m[7] -\n\t\t\tm[2]*m[5]*m[15] +\n\t\t\tm[2]*m[13]*m[7] +\n\t\t\tm[3]*m[5]*m[14] -\n\t\t\tm[3]*m[13]*m[6];\n\n\t\tinv[3] = -m[1]*m[6]*m[11] +\n\t\t\tm[1]*m[10]*m[7] +\n\t\t\tm[2]*m[5]*m[11] -\n\t\t\tm[2]*m[9]*m[7] -\n\t\t\tm[3]*m[5]*m[10] +\n\t\t\tm[3]*m[9]*m[6];\n\n\t\tinv[4] = -m[4]*m[10]*m[15] +\n\t\t\tm[4]*m[14]*m[11] +\n\t\t\tm[6]*m[8]*m[15] -\n\t\t\tm[6]*m[12]*m[11] -\n\t\t\tm[7]*m[8]*m[14] +\n\t\t\tm[7]*m[12]*m[10];\n\n\t\tinv[5] = m[0]*m[10]*m[15] -\n\t\t\tm[0]*m[14]*m[11] -\n\t\t\tm[2]*m[8]*m[15] +\n\t\t\tm[2]*m[12]*m[11] +\n\t\t\tm[3]*m[8]*m[14] -\n\t\t\tm[3]*m[12]*m[10];\n\n\t\tinv[6] = -m[0]*m[6]*m[15] +\n\t\t\tm[0]*m[14]*m[7] +\n\t\t\tm[2]*m[4]*m[15] -\n\t\t\tm[2]*m[12]*m[7] -\n\t\t\tm[3]*m[4]*m[14] +\n\t\t\tm[3]*m[12]*m[6];\n\n\t\tinv[7] = m[0]*m[6]*m[11] -\n\t\t\tm[0]*m[10]*m[7] -\n\t\t\tm[2]*m[4]*m[11] +\n\t\t\tm[2]*m[8]*m[7] +\n\t\t\tm[3]*m[4]*m[10] -\n\t\t\tm[3]*m[8]*m[6];\n\n\t\tinv[8] = m[4]*m[9]*m[15] -\n\t\t\tm[4]*m[13]*m[11] -\n\t\t\tm[5]*m[8]*m[15] +\n\t\t\tm[5]*m[12]*m[11] +\n\t\t\tm[7]*m[8]*m[13] -\n\t\t\tm[7]*m[12]*m[9];\n\n\t\tinv[9] = -m[0]*m[9]*m[15] +\n\t\t\tm[0]*m[13]*m[11] +\n\t\t\tm[1]*m[8]*m[15] -\n\t\t\tm[1]*m[12]*m[11] -\n\t\t\tm[3]*m[8]*m[13] +\n\t\t\tm[3]*m[12]*m[9];\n\n\t\tinv[10] = m[0]*m[5]*m[15] -\n\t\t\tm[0]*m[13]*m[7] -\n\t\t\tm[1]*m[4]*m[15] +\n\t\t\tm[1]*m[12]*m[7] +\n\t\t\tm[3]*m[4]*m[13] -\n\t\t\tm[3]*m[12]*m[5];\n\n\t\tinv[11] = -m[0]*m[5]*m[11] +\n\t\t\tm[0]*m[9]*m[7] +\n\t\t\tm[1]*m[4]*m[11] -\n\t\t\tm[1]*m[8]*m[7] -\n\t\t\tm[3]*m[4]*m[9] +\n\t\t\tm[3]*m[8]*m[5];\n\n\t\tinv[12] = -m[4]*m[9]*m[14] +\n\t\t\tm[4]*m[13]*m[10] +\n\t\t\tm[5]*m[8]*m[14] -\n\t\t\tm[5]*m[12]*m[10] -\n\t\t\tm[6]*m[8]*m[13] +\n\t\t\tm[6]*m[12]*m[9];\n\n\t\tinv[13] = m[0]*m[9]*m[14] -\n\t\t\tm[0]*m[13]*m[10] -\n\t\t\tm[1]*m[8]*m[14] +\n\t\t\tm[1]*m[12]*m[10] +\n\t\t\tm[2]*m[8]*m[13] -\n\t\t\tm[2]*m[12]*m[9];\n\n\t\tinv[14] = -m[0]*m[5]*m[14] +\n\t\t\tm[0]*m[13]*m[6] +\n\t\t\tm[1]*m[4]*m[14] -\n\t\t\tm[1]*m[12]*m[6] -\n\t\t\tm[2]*m[4]*m[13] +\n\t\t\tm[2]*m[12]*m[5];\n\n\t\tinv[15] = m[0]*m[5]*m[10] -\n\t\t\tm[0]*m[9]*m[6] -\n\t\t\tm[1]*m[4]*m[10] +\n\t\t\tm[1]*m[8]*m[6] +\n\t\t\tm[2]*m[4]*m[9] -\n\t\t\tm[2]*m[8]*m[5];\n\n\t\tconst det = m[0]*inv[0] + m[4]*inv[4] + m[8]*inv[8] + m[12]*inv[12];\n\t\tif (det == 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn new Matrix4(inv);\n\t}\n\n\textractTranslation(): Matrix4 {\n\t\tconst x = this._data[3];\n\t\tconst y = this._data[7];\n\t\tconst z = this._data[11];\n\t\treturn Matrix4.translation(x, y, z);\n\t}\n\n\textractScaling(): Matrix4 {\n\t\tconst x = 0;\n\t\tconst y = 0;\n\t\tconst z = 0;\n\t\treturn Matrix4.scaling(x, y, z);\n\t}\n\n\textractRotation(): Matrix4 {\n\t\tconst x = 0;\n\t\tconst y = 0;\n\t\tconst z = 0;\n\t\treturn Matrix4.rotation(x, y, z);\n\t}\n\n\teulerAngles(): Vector3 {\n\t\tconst sy = Math.sqrt(this.at(0, 0) * this.at(0, 0) + this.at(1, 0) * this.at(1, 0));\n\t\tconst singular = sy < 1e-6;\n\n\t\tlet x = 0.0;\n\t\tlet y = 0.0;\n\t\tlet z = 0.0;\n\n\t\tif (singular) {\n\t\t\tx = Math.atan2(this.at(1, 2), this.at(1, 1));\n\t\t\ty = Math.atan2(this.at(2, 0), sy);\n\t\t\tz = 0;\n\t\t} else {\n\t\t\tx = Math.atan2(-this.at(2, 1), this.at(2, 2));\n\t\t\ty = Math.atan2(this.at(2, 0), sy);\n\t\t\tz = Math.atan2(-this.at(1, 0), this.at(0, 0));\n\t\t}\n\n\t\treturn [x, y, z];\n\t}\n}\n\nexport function scaleVector4(vec: Vector4, scale: number): Vector4 {\n\treturn [vec[0] * scale, vec[1] * scale, vec[2] * scale, vec[3] * scale];\n}\n\nexport function addVector4(vec: Vector4, other: Vector4): Vector4 {\n\treturn [vec[0] + other[0], vec[1] + other[1], vec[2] + other[2], vec[3] + other[3]];\n}\n\nexport function multiplyVector4(vec: Vector4, other: Vector4): Vector4 {\n\treturn [vec[0] * other[0], vec[1] * other[1], vec[2] * other[2], vec[3] * other[3]];\n}\n\nexport function scaleVector3(vec: Vector3, scale: number): Vector3 {\n\treturn [vec[0] * scale, vec[1] * scale, vec[2] * scale];\n}\n\nexport function addVector3(vec: Vector3, other: Vector3): Vector3 {\n\treturn [vec[0] + other[0], vec[1] + other[1], vec[2] + other[2]];\n}\n\nexport function multiplyVector3(vec: Vector3, other: Vector3): Vector3 {\n\treturn [vec[0] * other[0], vec[1] * other[1], vec[2] * other[2]];\n}\n\nexport function cross(p0: Vector3, p1: Vector3): Vector3 {\n\tconst x = p0[1] * p1[2] - p0[2] * p1[1];\n\tconst y = p0[2] * p1[0] - p0[0] * p1[2];\n\tconst z = p0[0] * p1[1] - p0[1] * p1[0];\n\treturn [x, y, z];\n}\n\nexport function dot(p0: Vector3, p1: Vector3): number {\n\tconst x = p0[0] * p1[0];\n\tconst y = p0[1] * p1[1];\n\tconst z = p0[2] * p1[2];\n\treturn x + y + z;\n}\n\nexport function normalize(v: Vector3): Vector3 {\n\tconst norm = magnitude(v);\n\treturn [v[0] / norm, v[1] / norm, v[2] / norm];\n}\n\nexport function magnitude(v: Vector3): number {\n\treturn Math.sqrt(v[0] * v[0] + v[1] * v[1] + v[2] * v[2]);\n}\n\nexport function raySphereIntersection(center: Point3, radius: number, origin: Point3, direction: Vector3): Point3 | null {\n\tconst p: Vector3 = [\n\t\torigin[0] - center[0],\n\t\torigin[1] - center[1],\n\t\torigin[2] - center[2],\n\t];\n\n\tconst a = Math.pow(magnitude(direction), 2);\n\tconst b = dot(direction, p);\n\tconst c = Math.pow(magnitude(p), 2) - radius * radius;\n\tconst delta = b * b - a * c;\n\tif (delta < 0) {\n\t\treturn null;\n\t}\n\n\tconst deltaSqrt = Math.sqrt(delta);\n\n\tconst tmin = (-b - deltaSqrt) / a;\n\tconst tmax = (-b + deltaSqrt) / a;\n\n\tif (tmax < 0) {\n\t\treturn null;\n\t}\n\n\tconst t = tmin >= 0 ? tmin : tmax;\n\n\treturn [\n\t\torigin[0] + t * direction[0],\n\t\torigin[1] + t * direction[1],\n\t\torigin[2] + t * direction[2],\n\t];\n}\n\nexport function pointToLonLat(point: Point3): LonLat {\n\tconst v = normalize(point);\n\tconst p = normalize([v[0], 0, v[2]]);\n\tlet lat = Math.acos(dot(p, v));\n\tif (v[1] < 0) {\n\t\tlat *= -1;\n\t}\n\tlet lon = -Math.atan2(-v[2], -v[0]) - Math.PI / 2;\n\tif (lon < -Math.PI) {\n\t\tlon += Math.PI * 2;\n\t}\n\n\n\treturn [lon, lat];\n}\n","import { Matrix4, Point3, Vector3, normalize, cross } from './geom';\nimport { Vertex } from './renderer/vertex';\nexport { Vertex };\n\nexport interface GeometryOptions {\n\ttransform?: Matrix4;\n}\n\nexport class Geometry<V extends Vertex> {\n\tvertices: V[] = [];\n\ttransform: Matrix4 = Matrix4.identity();\n\n\tconstructor(vertices?: V[], options?: GeometryOptions) {\n\t\tif (vertices) {\n\t\t\tthis.vertices = [...vertices];\n\t\t}\n\t\tif (options?.transform) {\n\t\t\tthis.transform = options.transform;\n\t\t}\n\t}\n\n\tclone(): Geometry<V> {\n\t\treturn new Geometry(\n\t\t\tthis.vertices.map((v) => ({ ...v })),\n\t\t\t{ transform: this.transform.clone() }\n\t\t);\n\t}\n\n\tcalculateNormals() {\n\t\tif (this.vertices.length === 0) return;\n\t\tconst vertices = this.vertices as any[] as { position: Point3, normal: Vector3 }[];\n\n\t\tif (!('normal' in vertices[0])) {\n\t\t\tthrow `Geometry Vertex doesn't have a 'normal' attribute`;\n\t\t}\n\n\t\tfor (let i = 0; i < this.vertices.length; i += 3) {\n\t\t\tconst p0 = vertices[i + 0].position;\n\t\t\tconst p1 = vertices[i + 1].position;\n\t\t\tconst p2 = vertices[i + 2].position;\n\n\t\t\tconst v0: Vector3 = [p1[0] - p0[0], p1[1] - p0[1], p1[2] - p0[2]];\n\t\t\tconst v1: Vector3 = [p2[0] - p0[0], p2[1] - p0[1], p2[2] - p0[2]];\n\t\t\tconst normal = normalize(cross(v0, v1));\n\t\t\tvertices[i + 0].normal = normal;\n\t\t\tvertices[i + 1].normal = normal;\n\t\t\tvertices[i + 2].normal = normal;\n\t\t}\n\t}\n}\n\nexport class Mesh<V extends Vertex = Vertex> {\n\tgeometries: Geometry<V>[] = [];\n\n\tconstructor(geom?: Geometry<V> | Geometry<V>[] | V[]) {\n\t\tif (geom) {\n\t\t\tif (Array.isArray(geom)) {\n\t\t\t\tif (geom.length === 0 || geom[0] instanceof Geometry) {\n\t\t\t\t\tthis.geometries = [...geom] as Geometry<V>[];\n\t\t\t\t} else {\n\t\t\t\t\tthis.geometries = [new Geometry(geom as V[])];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.geometries = [geom];\n\t\t\t}\n\t\t}\n\t}\n\n\tclone(): Mesh<V> {\n\t\treturn new Mesh(this.geometries.map((g) => g.clone()));\n\t}\n\n\tget vertexCount(): number {\n\t\tlet count = 0;\n\t\tfor (const geom of this.geometries) {\n\t\t\tcount += geom.vertices.length;\n\t\t}\n\t\treturn count;\n\t}\n\n\tget vertices(): V[] {\n\t\t// Preallocate the array as it's much faster than a bunch of `Array.concat`\n\t\tconst data: V[] = new Array(this.vertexCount);\n\n\t\tlet i = 0;\n\t\tfor (const geom of this.geometries) {\n\t\t\tfor (const vertex of geom.vertices) {\n\t\t\t\tdata[i] = {\n\t\t\t\t\t...vertex,\n\t\t\t\t\tposition: geom.transform.transformPoint3(vertex.position),\n\t\t\t\t};\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tcalculateNormals() {\n\t\tfor (const geom of this.geometries) {\n\t\t\tgeom.calculateNormals();\n\t\t}\n\t}\n}\n","import { Texture } from './texture';\n\nexport type Color = [number, number, number, number?];\n\nexport interface MaterialOptions {\n\tcolor?: Color;\n\ttexture?: Texture;\n\tnormalMap?: Texture;\n\tspecularMap?: Texture;\n\tdisplacementMap?: Texture;\n\tdisplacementMultiplier?: number;\n\treceivesShadows?: boolean;\n\tcastsShadows?: boolean;\n\temissive?: boolean;\n}\n\nexport class Material {\n\tcolor: Color = [1.0, 0.0, 0.0, 0.0];\n\ttexture?: Texture = null;\n\tnormalMap?: Texture = null;\n\tspecularMap?: Texture = null;\n\tdisplacementMap?: Texture = null;\n\tdisplacementMultiplier = 1.0;\n\treceivesShadows = true;\n\tcastsShadows = true;\n\temissive = false;\n\n\tconstructor(props?: MaterialOptions) {\n\t\tif (props?.color != null) {\n\t\t\tthis.color = props.color;\n\t\t}\n\t\tif (props?.texture != null) {\n\t\t\tthis.texture = props.texture;\n\t\t}\n\t\tif (props?.normalMap != null) {\n\t\t\tthis.normalMap = props.normalMap;\n\t\t}\n\t\tif (props?.specularMap != null) {\n\t\t\tthis.specularMap = props.specularMap;\n\t\t}\n\t\tif (props?.displacementMap != null) {\n\t\t\tthis.displacementMap = props.displacementMap;\n\t\t}\n\t\tif (props?.displacementMultiplier != null) {\n\t\t\tthis.displacementMultiplier = props.displacementMultiplier;\n\t\t}\n\t\tif (props?.receivesShadows != null) {\n\t\t\tthis.receivesShadows = props.receivesShadows;\n\t\t}\n\t\tif (props?.castsShadows != null) {\n\t\t\tthis.castsShadows = props.castsShadows;\n\t\t}\n\t\tif (props?.emissive != null) {\n\t\t\tthis.emissive = props.emissive;\n\t\t}\n\t}\n}\n","export class Component {\n}\n","import { Component } from '../component';\nimport { Mesh } from '../mesh';\n\nexport class StaticMesh extends Component {\n\tmesh: Mesh;\n\n\tconstructor(mesh: Mesh) {\n\t\tsuper();\n\t\tthis.mesh = mesh;\n\t}\n}\n","import { Matrix4, Point3, Vector3 } from './geom';\nimport { Mesh, Vertex } from './mesh';\nimport { Material, Color } from './material';\nimport { Shader, UniformValues } from './shader';\nimport { Component } from './component';\nimport { StaticMesh } from './components/static_mesh';\n\nexport interface Instance {\n\t[key: string]: number | number[] | Matrix4;\n}\n\nexport type ActorInstance<I extends Instance = Instance> = {\n\tpawn: Actor;\n\tdata: I;\n}\n\nexport interface ActorOptions {\n\tcolor?: Color;\n\tmaterial?: Material;\n\tmodel?: Matrix4;\n\tshader?: Shader;\n\tuniforms?: UniformValues;\n\tcomponents?: Component[];\n}\n\nexport class Actor<I extends Instance = Instance> {\n\tvisible: boolean = true;\n\tcomponents: Component[] = [];\n\tmodel: Matrix4 = Matrix4.identity();\n\tmaterial: Material;\n\tshader?: Shader;\n\tuniforms: UniformValues = {};\n\tchildren: Actor[] = [];\n\tinstances: Map<number, ActorInstance> = new Map();\n\tprivate nextInstanceId = 1;\n\n\tconstructor(meshOrOptions?: Mesh<Vertex> | Actor[] | ActorOptions, options: ActorOptions = {}) {\n\t\tif (meshOrOptions instanceof Array) {\n\t\t\tthis.children = meshOrOptions;\n\t\t} else if (meshOrOptions instanceof Mesh) {\n\t\t\tthis.components.push(new StaticMesh(meshOrOptions));\n\t\t}\n\t\telse if (typeof meshOrOptions === 'object') {\n\t\t\toptions = meshOrOptions;\n\t\t}\n\n\t\tconst material = options.material || new Material();\n\t\tmaterial.color = options.color || material.color;\n\n\t\tthis.material = material;\n\n\n\t\tif (options.model) {\n\t\t\tthis.model = options.model;\n\t\t}\n\n\t\tif (options.shader) {\n\t\t\tthis.shader = options.shader;\n\t\t}\n\n\t\tif (options.uniforms) {\n\t\t\tthis.uniforms = {\n\t\t\t\t...this.uniforms,\n\t\t\t\t...options.uniforms,\n\t\t\t};\n\t\t}\n\n\t\tif (options.components) {\n\t\t\tthis.components = [\n\t\t\t\t...this.components,\n\t\t\t\t...options.components,\n\t\t\t];\n\t\t}\n\t}\n\n\tinstance(data: I): number {\n\t\tconst id = this.nextInstanceId++;\n\n\t\tconst instance = {\n\t\t\tid,\n\t\t\tpawn: this,\n\t\t\tdata: { ...data },\n\t\t};\n\t\tthis.instances.set(id, instance);\n\n\t\treturn id;\n\t}\n\n\tget hasInstances(): boolean {\n\t\treturn this.instances.size !== 0;\n\t}\n\n\tget translationMatrix(): Matrix4 {\n\t\treturn this.model.extractTranslation();\n\t}\n\n\tget rotationMatrix(): Matrix4 {\n\t\treturn this.model.extractRotation();\n\t}\n\n\tget position(): Point3 {\n\t\treturn this.model.transformPoint3([0.0, 0.0, 0.0]);\n\t}\n\n\tset position(pos: Point3) {\n\t\tconst mat = this.model.toArray();\n\t\tmat[3] = pos[0];\n\t\tmat[7] = pos[1];\n\t\tmat[11] = pos[2];\n\t\tthis.model = new Matrix4(mat);\n\t}\n\n\tget rotationVector(): Vector3 {\n\t\tconst vec = this.model.multiplyVector4([0.0, 0.0, 1.0, 0.0]);\n\t\treturn [vec[0], vec[1], vec[2]];\n\t}\n\n\tgetComponentsOfType<C extends Component>(klass: Constructable<C>): C[] {\n\t\treturn this.components.filter(c => c instanceof klass) as C[];\n\t}\n\n\thasComponentOfType<C extends Component>(klass: Constructable<C>): boolean {\n\t\treturn Boolean(this.components.find(c => c instanceof klass));\n\t}\n}\n","import { Matrix4, Point3, Vector3 } from './geom';\nimport { Actor } from './actor';\n\nexport interface Camera {\n\twidth: number;\n\theight: number;\n\tview: Matrix4;\n\tprojection: Matrix4;\n\tresize(width: number, height: number): void;\n}\n\nexport class OrbitCamera extends Actor implements Camera {\n\twidth: number;\n\theight: number;\n\tnear: number = 0.1;\n\tfar: number = 1000.0;\n\tprojection: Matrix4;\n\tdistance: number = 10.0;\n\ttarget: Point3 = [0.0, 0.0, 0.0];\n\trotation = { lon: 0.0, lat: 0.0 };\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.resize(1024, 768);\n\t}\n\n\tget view(): Matrix4 {\n\t\tconst pos = this.target;\n\t\treturn Matrix4.identity()\n\t\t\t.multiply(Matrix4.translation(pos[0], pos[1], pos[2]))\n\t\t\t.multiply(Matrix4.rotation(0.0, this.rotation.lon, 0.0))\n\t\t\t.multiply(Matrix4.rotation(this.rotation.lat, 0.0, 0.0))\n\t\t\t.multiply(Matrix4.translation(0.0, 0.0, this.distance));\n\t}\n\n\tresize(width: number, height: number): void {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.projection = Matrix4.perspective(width / height, 45.0, this.near, this.far);\n\t}\n\n\tzoom(amount: number) {\n\t\tthis.distance += amount;\n\t}\n\n\trotate(lon: number, lat: number) {\n\t\tthis.rotation = {\n\t\t\tlon: this.rotation.lon + lon,\n\t\t\tlat: this.rotation.lat + lat,\n\t\t};\n\t\tif (this.rotation.lat < -Math.PI / 2) {\n\t\t\tthis.rotation.lat = -Math.PI / 2;\n\t\t}\n\t\tif (this.rotation.lat > Math.PI / 2) {\n\t\t\tthis.rotation.lat = Math.PI / 2;\n\t\t}\n\t}\n}\n\nexport class BasicCamera extends Actor implements Camera {\n\twidth: number;\n\theight: number;\n\tnear: number = 1.0;\n\tfar: number = 2000.0;\n\tprojection: Matrix4;\n\tposition: Point3 = [0.0, 1.0, 0.0];\n\trotation: Vector3 = [-0.1, 0.0, 0.0];\n\tscaling: Vector3 = [1.0, 1.0, 1.0];\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.resize(1024, 768);\n\t}\n\n\tget view(): Matrix4 {\n\t\treturn Matrix4.identity()\n\t\t\t.multiply(Matrix4.translation(...this.position))\n\t\t\t.multiply(this.rotationMatrix)\n\t\t\t.multiply(Matrix4.scaling(...this.scaling));\n\t}\n\n\tget rotationMatrix(): Matrix4 {\n\t\treturn Matrix4.identity()\n\t\t\t.multiply(Matrix4.rotation(0, 0, this.rotation[2]))\n\t\t\t.multiply(Matrix4.rotation(0, this.rotation[1], 0))\n\t\t\t.multiply(Matrix4.rotation(this.rotation[0], 0, 0));\n\t}\n\tupdateModel() {\n\t\tthis.model = this.view;\n\t}\n\n\trotate(x: number, y: number) {\n\t\tthis.rotation[0] -= Math.PI * x;\n\t\tthis.rotation[1] -= Math.PI * y;\n\t\tthis.updateModel();\n\t}\n\n\ttranslate(x: number, y: number, z: number) {\n\t\tconst trans = Matrix4.translation(x, y, z);\n\t\tconst rotation = this.rotationVector;\n\n\t\t// Ignore tilt\n\t\tconst oldX = rotation[0];\n\t\trotation[0] = 0.0;\n\t\tconst rot = this.rotationMatrix;\n\t\trotation[0] = oldX;\n\t\tconst invRot = rot.inverse();\n\n\t\tlet newPosition = trans.multiply(invRot).transformPoint3(this.position);\n\t\tnewPosition = rot.transformPoint3(newPosition);\n\t\tthis.position = newPosition;\n\t\tthis.updateModel();\n\t}\n\n\tresize(width: number, height: number) {\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.projection = Matrix4.perspective(width / height, 45.0, this.near, this.far);\n\t\tthis.updateModel();\n\t}\n}\n","import { Mesh } from '../mesh';\nimport { Instance } from '../actor';\nimport { Scene } from '../scene';\nimport { Texture } from '../texture';\nimport { Camera, BasicCamera } from '../camera';\nimport { RenderTexture } from '../render_texture';\nimport { Color } from '../material';\n\nexport abstract class Renderer {\n\tcamera: Camera = new BasicCamera();\n\tmousePosition = [0.0, 0.0];\n\tmouseMovement = [0.0, 0.0];\n\twheelMovement = [0.0, 0.0];\n\tmouseButtons = new Set();\n\theldKeys = new Set();\n\tbackgroundColor: Color = [0.0, 0.0, 0.0, 1.0];\n\tupdateSize(_width?: number, _height?: number): void {}\n\tresetMouseMovement() {\n\t\tthis.mouseMovement[0] = 0;\n\t\tthis.mouseMovement[1] = 0;\n\t\tthis.wheelMovement[0] = 0;\n\t\tthis.wheelMovement[1] = 0;\n\t}\n\taddEventListener(_type: string, _listener: EventListenerOrEventListenerObject, _options?: AddEventListenerOptions): void {}\n\tremoveEventListener(_type: string, _listener: EventListenerOrEventListenerObject, _options?: EventListenerOptions): void {}\n\tget isDragging(): boolean {\n\t\treturn false;\n\t}\n\tabstract uploadMesh(mesh: Mesh): void;\n\tabstract uploadMeshInstances<I extends Instance = Instance>(mesh: Mesh, instances: I[]): void;\n\tabstract uploadTexture(texture: Texture, unit?: number): number;\n\tabstract bindTexture(texture: Texture): number;\n\tabstract unbindTexture(texture: Texture): void;\n\tabstract async drawScene(scene: Scene, target?: RenderTexture): Promise<number>;\n\tabstract get width(): number;\n\tabstract get height(): number;\n}\n","import { Matrix4 } from '../geom';\nimport { WebGLMesh } from './webgl_mesh';\n\nexport interface ShaderOptions {\n\tattributes?: { [key: string]: WebGLAttribute };\n\tinstanceAttributes?: { [key: string]: WebGLAttribute };\n\tuniforms?: { [key: string]: WebGLUniform };\n}\n\nexport interface WebGLAttribute {\n\tlocation?: number;\n\tsize: number;\n\ttype: number;\n}\n\nexport interface WebGLUniform {\n\tlocation?: WebGLUniformLocation;\n\ttype: number;\n}\n\nexport type WebGLUniformMap = { [key: string]: WebGLUniform };\nexport type WebGLAttributeMap = { [key: string]: WebGLAttribute };\n\nexport class WebGLShader {\n\tgl: WebGLRenderingContext;\n\tcompiled = false;\n\tprogram: WebGLProgram;\n\tattributes: WebGLAttributeMap = {\n\t\tposition: {\n\t\t\ttype: WebGLRenderingContext.FLOAT,\n\t\t\tsize: 3,\n\t\t\tlocation: null,\n\t\t},\n\t};\n\tinstanceAttributes: WebGLAttributeMap = {\n\t};\n\tuniforms: WebGLUniformMap = {\n\t\tuTime: {\n\t\t\ttype: WebGLRenderingContext.FLOAT,\n\t\t\tlocation: null,\n\t\t},\n\t\tuViewProj: {\n\t\t\ttype: WebGLRenderingContext.FLOAT_MAT4,\n\t\t\tlocation: null,\n\t\t},\n\t\tuView: {\n\t\t\ttype: WebGLRenderingContext.FLOAT_MAT4,\n\t\t\tlocation: null,\n\t\t},\n\t\tuModel: {\n\t\t\ttype: WebGLRenderingContext.FLOAT_MAT4,\n\t\t\tlocation: null,\n\t\t},\n\t\tuFillColor: {\n\t\t\ttype: WebGLRenderingContext.FLOAT_VEC4,\n\t\t\tlocation: null,\n\t\t},\n\t\tuFogColor: {\n\t\t\ttype: WebGLRenderingContext.FLOAT_VEC4,\n\t\t\tlocation: null,\n\t\t},\n\t\tuLineWidth: {\n\t\t\ttype: WebGLRenderingContext.FLOAT,\n\t\t\tlocation: null,\n\t\t},\n\t\tuResolution: {\n\t\t\ttype: WebGLRenderingContext.FLOAT_VEC2,\n\t\t\tlocation: null,\n\t\t},\n\t\tuSeed: {\n\t\t\ttype: WebGLRenderingContext.FLOAT,\n\t\t\tlocation: null,\n\t\t},\n\t};\n\n\tconstructor(gl?: WebGLRenderingContext, vertSource?: string, fragSource?: string, options?: ShaderOptions) {\n\t\tif (gl) {\n\t\t\tthis.make(gl, vertSource, fragSource, options);\n\t\t}\n\t}\n\n\tmake(gl: WebGLRenderingContext, vertSource?: string, fragSource?: string, options?: ShaderOptions) {\n\t\tthis.gl = gl;\n\t\tif (!vertSource) {\n\t\t\tthrow 'You must provide vertex shader source code';\n\t\t}\n\t\tif (!fragSource) {\n\t\t\tthrow 'You must provide fragment shader source code';\n\t\t}\n\n\t\tconst program = gl.createProgram();\n\n\t\tif (options?.attributes) {\n\t\t\tthis.attributes = {\n\t\t\t\t...this.attributes,\n\t\t\t\t...options.attributes,\n\t\t\t};\n\t\t}\n\n\t\tif (options?.instanceAttributes) {\n\t\t\tthis.instanceAttributes = {\n\t\t\t\t...this.instanceAttributes,\n\t\t\t\t...options.instanceAttributes,\n\t\t\t};\n\t\t}\n\n\t\tif (options?.uniforms) {\n\t\t\tthis.uniforms = {\n\t\t\t\t...this.uniforms,\n\t\t\t\t...options.uniforms,\n\t\t\t};\n\t\t}\n\n\t\t// Enable `fwidth` in shader\n\t\tgl.getExtension('OES_standard_derivatives');\n\n\t\tconst vert = gl.createShader(gl.VERTEX_SHADER);\n\t\tgl.shaderSource(vert, vertSource);\n\t\tgl.attachShader(program, vert);\n\t\tgl.compileShader(vert);\n\t\t// Did the vertex shader compile?\n\t\tif (!gl.getShaderParameter(vert, gl.COMPILE_STATUS)) {\n\t\t\tconst info = gl.getShaderInfoLog(vert);\n\t\t\tthrow `Could not compile Vertex shader: ${info}`;\n\t\t}\n\n\t\tconst frag = gl.createShader(gl.FRAGMENT_SHADER);\n\t\tgl.shaderSource(frag, fragSource);\n\t\tgl.attachShader(program, frag);\n\t\tgl.compileShader(frag);\n\t\t// Did the fragment shader compile?\n\t\tif (!gl.getShaderParameter(frag, gl.COMPILE_STATUS)) {\n\t\t\tconst info = gl.getShaderInfoLog(frag);\n\t\t\tthrow `Could not compile Fragment shader: ${info}`;\n\t\t}\n\n\t\tgl.linkProgram(program);\n\t\t// Did the program link successfully?\n\t\tif (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n\t\t\tconst info = gl.getProgramInfoLog(program);\n\t\t\tconst shaderName = this.constructor.name;\n\t\t\tthrow `Could not link WebGL program (${shaderName}): ${info}`;\n\t\t}\n\n\t\t// Uniform locations\n\t\tfor (const uniformName in this.uniforms) {\n\t\t\tthis.uniforms[uniformName].location = gl.getUniformLocation(program, uniformName);\n\t\t}\n\n\t\t// Attribute locations\n\t\tfor (const attributeName in this.attributes) {\n\t\t\tthis.attributes[attributeName].location = gl.getAttribLocation(program, attributeName);\n\t\t}\n\t\tfor (const attributeName in this.instanceAttributes) {\n\t\t\tthis.instanceAttributes[attributeName].location = gl.getAttribLocation(program, attributeName);\n\t\t}\n\n\t\tgl.enable(gl.CULL_FACE);\n\t\tgl.cullFace(gl.BACK);\n\n\t\tthis.program = program;\n\t\tthis.compiled = true;\n\t}\n\n\tuse() {\n\t\tthis.gl.useProgram(this.program);\n\t}\n\n\tbind(mesh: WebGLMesh) {\n\t\tconst gl = this.gl;\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, mesh.buffer);\n\t\tconst ext = gl.getExtension('ANGLE_instanced_arrays');\n\t\tfor (const attributeName in this.attributes) {\n\t\t\tconst attribute = this.attributes[attributeName];\n\t\t\tif (attribute.location == null || attribute.location === -1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\text.vertexAttribDivisorANGLE(attribute.location, 0);\n\n\t\t\tconst stride = mesh.stride;\n\t\t\tconst offset = mesh.offsets.get(attributeName);\n\t\t\tif (offset == null) {\n\t\t\t\tif (!PRODUCTION) {\n\t\t\t\t\tconsole.warn(`Unable to find attribute offset for ${attributeName}`);\n\t\t\t\t}\n\t\t\t\tgl.disableVertexAttribArray(attribute.location);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tgl.enableVertexAttribArray(attribute.location);\n\t\t\tgl.vertexAttribPointer(attribute.location, attribute.size, attribute.type, false, stride, offset);\n\t\t}\n\t}\n\n\tunbind() {\n\t\tconst gl = this.gl;\n\t\tfor (const attributeName in this.attributes) {\n\t\t\tconst attribute = this.attributes[attributeName];\n\t\t\tif (attribute.location == null || attribute.location === -1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tgl.disableVertexAttribArray(attribute.location);\n\t\t}\n\t}\n\n\tbindInstances(gl: WebGLRenderingContext, mesh: WebGLMesh) {\n\t\tconst ext = gl.getExtension('ANGLE_instanced_arrays');\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, mesh.instanceBuffer);\n\t\tfor (const attributeName in this.instanceAttributes) {\n\t\t\tconst attribute = this.instanceAttributes[attributeName];\n\t\t\tif (attribute.location == null || attribute.location === -1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst stride = mesh.instanceStride;\n\t\t\tlet offset = mesh.instanceOffsets.get(attributeName);\n\t\t\tif (offset == null) {\n\t\t\t\tthrow `Unable to find instanceOffset for ${attributeName}`;\n\t\t\t}\n\t\t\t// mat4 is really 4x vec4\n\t\t\tif (attribute.size === 4 * 4) {\n\t\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\t\tconst location = attribute.location + i;\n\t\t\t\t\tgl.enableVertexAttribArray(location);\n\t\t\t\t\tgl.vertexAttribPointer(location, 4, attribute.type, false, stride, offset);\n\t\t\t\t\text.vertexAttribDivisorANGLE(location, 1);\n\t\t\t\t\toffset += 4 * 4;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tunbindInstances(gl: WebGLRenderingContext) {\n\t\tconst ext = gl.getExtension('ANGLE_instanced_arrays');\n\t\tfor (const attributeName in this.instanceAttributes) {\n\t\t\tconst attribute = this.instanceAttributes[attributeName];\n\t\t\tif (attribute.location == null || attribute.location === -1) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// mat4 is really 4x vec4\n\t\t\tif (attribute.size === 4 * 4) {\n\t\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\t\tconst location = attribute.location + i;\n\t\t\t\t\tgl.disableVertexAttribArray(location);\n\t\t\t\t\text.vertexAttribDivisorANGLE(location, 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tsetUniform(name: string, value: boolean | number | number[] | Matrix4) {\n\t\tif (value == null) return;\n\t\tconst gl = this.gl;\n\n\t\tconst uniform = this.uniforms[name];\n\t\tif (!uniform) {\n\t\t\treturn;\n\t\t}\n\t\tswitch (uniform.type) {\n\t\t\tcase WebGLRenderingContext.BOOL:\n\t\t\t\tif (typeof value !== 'boolean') {\n\t\t\t\t\tthrow `Uniform '${name}' expected boolean but got: ${typeof value}`;\n\t\t\t\t}\n\t\t\t\tgl.uniform1i(uniform.location, value ? 1 : 0);\n\t\t\t\tbreak;\n\n\t\t\tcase WebGLRenderingContext.FLOAT:\n\t\t\t\tif (typeof value !== 'number') {\n\t\t\t\t\tthrow `Uniform '${name}' expected number but got: ${typeof value}`;\n\t\t\t\t}\n\t\t\t\tgl.uniform1f(uniform.location, value);\n\t\t\t\tbreak;\n\n\t\t\tcase WebGLRenderingContext.INT:\n\t\t\t\tif (typeof value !== 'number') {\n\t\t\t\t\tthrow `Uniform '${name}' expected number but got: ${typeof value}`;\n\t\t\t\t}\n\t\t\t\tgl.uniform1i(uniform.location, value);\n\t\t\t\tbreak;\n\n\t\t\tcase WebGLRenderingContext.FLOAT_VEC2:\n\t\t\t\tif (\n\t\t\t\t\t!Array.isArray(value) ||\n\t\t\t\t\tvalue.length !== 2 ||\n\t\t\t\t\ttypeof value[0] !== 'number' ||\n\t\t\t\t\ttypeof value[1] !== 'number'\n\t\t\t\t) {\n\t\t\t\t\tthrow `Uniform '${name}' expected an array of 2 numbers but got something else`;\n\t\t\t\t}\n\t\t\t\tgl.uniform2fv(uniform.location, value);\n\t\t\t\tbreak;\n\n\t\t\tcase WebGLRenderingContext.FLOAT_VEC3:\n\t\t\t\tif (\n\t\t\t\t\t!Array.isArray(value) ||\n\t\t\t\t\tvalue.length !== 3 ||\n\t\t\t\t\ttypeof value[0] !== 'number' ||\n\t\t\t\t\ttypeof value[1] !== 'number' ||\n\t\t\t\t\ttypeof value[2] !== 'number'\n\t\t\t\t) {\n\t\t\t\t\tthrow `Uniform '${name}' expected an array of 3 numbers but got something else`;\n\t\t\t\t}\n\t\t\t\tgl.uniform3fv(uniform.location, value);\n\t\t\t\tbreak;\n\n\t\t\tcase WebGLRenderingContext.FLOAT_VEC4:\n\t\t\t\tif (\n\t\t\t\t\t!Array.isArray(value) ||\n\t\t\t\t\tvalue.length !== 4 ||\n\t\t\t\t\ttypeof value[0] !== 'number' ||\n\t\t\t\t\ttypeof value[1] !== 'number' ||\n\t\t\t\t\ttypeof value[2] !== 'number' ||\n\t\t\t\t\ttypeof value[3] !== 'number'\n\t\t\t\t) {\n\t\t\t\t\tthrow `Uniform '${name}' expected an array of 4 numbers but got something else`;\n\t\t\t\t}\n\t\t\t\tgl.uniform4fv(uniform.location, value);\n\t\t\t\tbreak;\n\n\t\t\tcase WebGLRenderingContext.FLOAT_MAT4:\n\t\t\t\tif (!(value instanceof Matrix4)) {\n\t\t\t\t\tthrow `Uniform '${name}' expected a Matrix4 but got something else`;\n\t\t\t\t}\n\t\t\t\tgl.uniformMatrix4fv(uniform.location, false, value.toArray());\n\t\t\t\tbreak;\n\n\t\t\t// TODO other uniform types\n\t\t\tdefault:\n\t\t\t\tthrow `Unsupported uniform type: ${uniform.type}`;\n\t\t}\n\t}\n\n}\n","import { Matrix4 } from '../geom';\nimport { Vertex } from './vertex';\nimport { Mesh } from '../mesh';\nimport { Instance } from '../actor';\n\nconst FLOAT32_SIZE: number = 4;\n\nexport class WebGLMesh<T extends Vertex = Vertex> {\n\tbuffer: WebGLBuffer;\n\tstride: number;\n\toffsets: Map<keyof T, number> = new Map();\n\tlength: number;\n\tinstanceBuffer: WebGLBuffer;\n\tinstanceStride: number;\n\tinstanceOffsets: Map<keyof T, number> = new Map();\n\tinstanceLength: number;\n\tgl: WebGLRenderingContext;\n\n\tconstructor(gl: WebGLRenderingContext) {\n\t\tthis.gl = gl;\n\t}\n\n\tupload(mesh: Mesh<T>): Promise<void> {\n\t\tconst gl = this.gl;\n\t\tif (!this.buffer) {\n\t\t\tthis.buffer = gl.createBuffer();\n\t\t}\n\n\t\tconst vertices = mesh.vertices;\n\t\tthis.length = vertices.length;\n\t\tif (vertices.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst attributeNames = Object.keys(vertices[0]).sort();\n\n\t\t// Calculate offsets, stride, and vertex size\n\t\tlet vertexSize = 0;\n\t\tfor (const name of attributeNames) {\n\t\t\tconst attr = vertices[0][name];\n\t\t\tthis.offsets.set(name, vertexSize * FLOAT32_SIZE);\n\t\t\tif (Array.isArray(attr)) {\n\t\t\t\tvertexSize += attr.length;\n\t\t\t} else {\n\t\t\t\tvertexSize += 1;\n\t\t\t}\n\t\t}\n\t\tthis.stride = vertexSize * FLOAT32_SIZE;\n\n\t\t// Convert Array<Vertex> into Float32Array\n\t\tlet i = 0;\n\t\tconst data = new Float32Array(vertices.length * vertexSize);\n\t\tfor (const vertex of vertices) {\n\t\t\tfor (const attr of attributeNames) {\n\t\t\t\tconst value = vertex[attr];\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tfor (const num of value) {\n\t\t\t\t\t\tdata[i] = num;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdata[i] = value;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Upload data to the GPU\n\t\tthis.bind();\n\t\tgl.bufferData(gl.ARRAY_BUFFER, data, gl.DYNAMIC_DRAW);\n\t}\n\n\tuploadInstances<I extends Instance>(instances: I[]) {\n\t\tif (instances.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst gl = this.gl;\n\n\t\tconst attributeNames = Object.keys(instances[0]).sort();\n\n\t\t// Calculate offsets, stride, and instance size\n\t\tlet instanceSize = 0;\n\t\tfor (const name of attributeNames) {\n\t\t\tconst attr = instances[0][name];\n\t\t\tthis.instanceOffsets.set(name, instanceSize * FLOAT32_SIZE);\n\t\t\tif (Array.isArray(attr)) {\n\t\t\t\tinstanceSize += attr.length;\n\t\t\t} else if (attr instanceof Matrix4) {\n\t\t\t\tinstanceSize += attr.toArray().length;\n\t\t\t} else {\n\t\t\t\tinstanceSize += 1;\n\t\t\t}\n\t\t}\n\t\tthis.instanceStride = instanceSize * FLOAT32_SIZE;\n\n\t\t// Convert Array<Instance> into Float32Array\n\t\tlet i = 0;\n\t\tconst data = new Float32Array(instances.length * instanceSize);\n\t\tfor (const instance of instances) {\n\t\t\tfor (const attr of attributeNames) {\n\t\t\t\tconst value = instance[attr];\n\t\t\t\tif (Array.isArray(value)) {\n\t\t\t\t\tfor (const num of value) {\n\t\t\t\t\t\tdata[i] = num;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t} else if (value instanceof Matrix4) {\n\t\t\t\t\tfor (const num of value.toArray()) {\n\t\t\t\t\t\tdata[i] = num;\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdata[i] = value;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!this.instanceBuffer) {\n\t\t\tthis.instanceBuffer = gl.createBuffer();\n\t\t}\n\n\t\tthis.instanceLength = instances.length;\n\t\tgl.bindBuffer(gl.ARRAY_BUFFER, this.instanceBuffer);\n\t\tgl.bufferData(gl.ARRAY_BUFFER, data, gl.DYNAMIC_DRAW);\n\t}\n\n\tbind() {\n\t\tthis.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.buffer);\n\t}\n\n\tdraw() {\n\t\tthis.gl.drawArrays(this.gl.TRIANGLES, 0, this.length);\n\t}\n\n\tdrawInstances() {\n\t\tconst ext = this.gl.getExtension('ANGLE_instanced_arrays');\n\t\text.drawArraysInstancedANGLE(this.gl.TRIANGLES, 0, this.length, this.instanceLength);\n\t}\n}\n","export enum ScaleFilter {\n\tLINEAR,\n\tNEAREST,\n}\n\nexport interface TextureOptions {\n\tminFilter?: ScaleFilter;\n\tmagFilter?: ScaleFilter;\n}\n\nexport class Texture {\n\tpixels: ImageData | HTMLImageElement;\n\tminFilter = ScaleFilter.LINEAR;\n\tmagFilter = ScaleFilter.LINEAR;\n\n\tconstructor(imageOrURL?: HTMLImageElement | ImageData | string, options?: TextureOptions) {\n\t\tthis.putPixels(new ImageData(new Uint8ClampedArray([255, 0, 255, 255]), 1, 1));\n\t\tif (options?.minFilter) {\n\t\t\tthis.minFilter = options.minFilter\n\t\t}\n\t\tif (options?.magFilter) {\n\t\t\tthis.magFilter = options.magFilter\n\t\t}\n\n\t\tif (imageOrURL) {\n\t\t\tif (typeof imageOrURL === 'string') {\n\t\t\t\tconst image = new Image();\n\t\t\t\timage.src = imageOrURL;\n\t\t\t\tthis.putImage(image);\n\t\t\t} else if (imageOrURL instanceof HTMLImageElement) {\n\t\t\t\tthis.putImage(imageOrURL);\n\t\t\t} else {\n\t\t\t\tthis.putPixels(imageOrURL);\n\t\t\t}\n\t\t}\n\t}\n\n\tstatic async fromUrl(url: string, options?: TextureOptions): Promise<Texture> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst image = new Image();\n\t\t\timage.src = url;\n\t\t\timage.addEventListener('load', () => {\n\t\t\t\tresolve(new Texture(image, options));\n\t\t\t});\n\t\t\timage.addEventListener('error', (e) => {\n\t\t\t\treject(e);\n\t\t\t});\n\t\t});\n\t}\n\n\tputImage(image: HTMLImageElement) {\n\t\tif (image.complete) {\n\t\t\tthis.putPixels(image);\n\t\t} else {\n\t\t\t// Image hasn't puted yet; wait for it\n\t\t\timage.addEventListener('load', () => {\n\t\t\t\tthis.putImage(image);\n\t\t\t});\n\t\t}\n\t}\n\n\tputPixels(pixels: ImageData | HTMLImageElement) {\n\t\tif (pixels instanceof HTMLImageElement && !pixels.complete) {\n\t\t\tthrow 'Attempted to use incomplete image as texture';\n\t\t}\n\n\t\tthis.pixels = pixels;\n\t}\n\n\tget data(): Uint8ClampedArray {\n\t\tif (this.pixels instanceof ImageData) {\n\t\t\treturn this.pixels.data;\n\t\t}\n\t\tthrow `Can't get data of an HTMLImageElement`;\n\t}\n}\n","import { Texture } from './texture';\n\nexport enum Attachment {\n\tCOLOR,\n\tDEPTH,\n}\n\nexport class RenderTexture extends Texture {\n\tsize: number;\n\tattachment: Attachment;\n\n\tconstructor(size: number, attachment: Attachment = Attachment.COLOR) {\n\t\tsuper();\n\t\tthis.attachment = attachment;\n\t\tthis.size = size;\n\t\tconst pixels = new Uint8ClampedArray(size * size * 4);\n\t\tpixels.fill(255);\n\t\tthis.putPixels(new ImageData(pixels, size));\n\t}\n}\n","import { Texture, ScaleFilter } from '../texture';\nimport { RenderTexture, Attachment } from '../render_texture';\n\nconst FILTER_MAP: { [key: string]: number } = {\n\t[ScaleFilter.LINEAR]: WebGLRenderingContext.LINEAR,\n\t[ScaleFilter.NEAREST]: WebGLRenderingContext.NEAREST,\n};\n\nexport class WebGLRendererTexture {\n\tgl: WebGLRenderingContext;\n\ttexture: WebGLTexture;\n\t// Safari requries a Color texture, even if we're only rendering to a Depth texture\n\tunusedColorTexture: WebGLTexture;\n\n\tunit: number;\n\tlevel = 0;\n\tinternalFormat = WebGLRenderingContext.RGBA;\n\tsrcFormat = WebGLRenderingContext.RGBA;\n\tsrcType = WebGLRenderingContext.UNSIGNED_BYTE;\n\tminFilter = WebGLRenderingContext.LINEAR;\n\tmagFilter = WebGLRenderingContext.LINEAR;\n\n\tstatic fromTexture(gl: WebGLRenderingContext, src: Texture) {\n\t\tconst texture = new WebGLRendererTexture(gl);\n\t\ttexture.minFilter = FILTER_MAP[src.minFilter];\n\t\ttexture.magFilter = FILTER_MAP[src.magFilter];\n\n\t\tif (src instanceof RenderTexture && src.attachment === Attachment.DEPTH) {\n\t\t\ttexture.internalFormat = gl.DEPTH_COMPONENT;\n\t\t\ttexture.srcFormat = gl.DEPTH_COMPONENT;\n\t\t\ttexture.srcType = gl.UNSIGNED_INT;\n\t\t\ttexture.unusedColorTexture = gl.createTexture();\n\t\t}\n\t\treturn texture;\n\t}\n\n\tconstructor(gl: WebGLRenderingContext) {\n\t\tthis.gl = gl;\n\t\tthis.texture = gl.createTexture();\n\t}\n\n\tupload(texture: Texture, unit: number = null) {\n\t\tconst pixels = texture instanceof RenderTexture ? null : texture.pixels;\n\n\t\tif (pixels instanceof HTMLImageElement && !pixels.complete) {\n\t\t\tthrow 'Attempted to use incomplete image as texture';\n\t\t}\n\t\tthis.unit = unit;\n\n\t\tconst gl = this.gl;\n\n\t\tif (texture instanceof RenderTexture) {\n\t\t\t// Safari requries a Color texture, even if we're only rendering to a Depth texture\n\t\t\tif (this.unusedColorTexture) {\n\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.unit);\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, this.unusedColorTexture);\n\t\t\t\tgl.texImage2D(\n\t\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\t\t0,\n\t\t\t\t\tgl.RGBA,\n\t\t\t\t\ttexture.size,\n\t\t\t\t\ttexture.size,\n\t\t\t\t\t0,\n\t\t\t\t\tgl.RGBA,\n\t\t\t\t\tgl.UNSIGNED_BYTE,\n\t\t\t\t\tnull,\n\t\t\t\t);\n\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, this.minFilter);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, this.magFilter);\n\t\t\t}\n\n\t\t\tthis.bind();\n\t\t\tgl.texImage2D(\n\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\tthis.level,\n\t\t\t\tthis.internalFormat,\n\t\t\t\ttexture.size,\n\t\t\t\ttexture.size,\n\t\t\t\t0,\n\t\t\t\tthis.srcFormat,\n\t\t\t\tthis.srcType,\n\t\t\t\tnull,\n\t\t\t);\n\n\t\t}\n\t\telse {\n\t\t\tthis.bind();\n\t\t\tgl.texImage2D(\n\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\tthis.level,\n\t\t\t\tthis.internalFormat,\n\t\t\t\tthis.srcFormat,\n\t\t\t\tthis.srcType,\n\t\t\t\tpixels,\n\t\t\t);\n\t\t}\n\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, this.minFilter);\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, this.magFilter);\n\t}\n\n\tbind(): number {\n\t\tif (this.unit == null) {\n\t\t\tthrow `Cannot bind texture that hasn't been uploaded`;\n\t\t}\n\t\tconst gl = this.gl;\n\t\tgl.activeTexture(gl.TEXTURE0 + this.unit);\n\t\tgl.bindTexture(gl.TEXTURE_2D, this.texture);\n\t\treturn this.unit;\n\t}\n\n\tunbind() {\n\t\tif (this.unit == null) {\n\t\t\tthrow `Cannot unbind texture that hasn't been uploaded`;\n\t\t}\n\t\tconst gl = this.gl;\n\t\tgl.activeTexture(gl.TEXTURE0 + this.unit);\n\t\tgl.bindTexture(gl.TEXTURE_2D, null);\n\t}\n}\n","import { WebGLRendererTexture } from './webgl_texture';\n\nexport class WebGLRenderTarget {\n\tgl: WebGLRenderingContext;\n\ttexture: WebGLRendererTexture;\n\tsize: number;\n\tframebuffer: WebGLFramebuffer;\n\trenderbuffer: WebGLRenderbuffer;\n\tattachment =  WebGLRenderingContext.COLOR_ATTACHMENT0;\n\n\tconstructor(gl: WebGLRenderingContext, size: number, texture: WebGLRendererTexture) {\n\t\tthis.gl = gl;\n\t\tthis.size = size;\n\t\tthis.texture = texture;\n\t\tthis.framebuffer = gl.createFramebuffer();\n\t\tthis.renderbuffer = gl.createRenderbuffer();\n\t}\n\n\tbind() {\n\t\tconst gl = this.gl;\n\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\n\t\tgl.framebufferTexture2D(\n\t\t\tgl.FRAMEBUFFER,\n\t\t\tthis.attachment,\n\t\t\tgl.TEXTURE_2D,\n\t\t\tthis.texture.texture,\n\t\t\t0,\n\t\t);\n\n\t\tif (this.attachment == WebGLRenderingContext.DEPTH_ATTACHMENT) {\n\t\t\t// Safari requries a Color texture, even if we're only rendering to a Depth texture\n\t\t\tgl.framebufferTexture2D(\n\t\t\t\tgl.FRAMEBUFFER,\n\t\t\t\tgl.COLOR_ATTACHMENT0,\n\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\tthis.texture.unusedColorTexture,\n\t\t\t\t0,\n\t\t\t);\n\t\t} else {\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, this.renderbuffer);\n\t\t\tgl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, this.size, this.size);\n\t\t\tgl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, this.renderbuffer);\n\t\t}\n\t}\n\n\tunbind() {\n\t\tconst gl = this.gl;\n\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t}\n}\n","import { Component } from '../component';\nimport { Color } from '../material';\n\nexport interface LightOptions {\n\tambient?: Color;\n\tdiffuse?: Color;\n\tspecular?: Color;\n\n\tconstant?: number;\n\tlinear?: number;\n\tquadratic?: number;\n}\n\nexport class Light extends Component {\n\tambient: Color;\n\tdiffuse: Color;\n\tspecular: Color;\n\n\tconstant: number;\n\tlinear: number;\n\tquadratic: number;\n\n\tconstructor(options: LightOptions = {}) {\n\t\tsuper();\n\n\t\tif (options.ambient) {\n\t\t\tthis.ambient = options.ambient;\n\t\t}\n\t\tif (options.diffuse) {\n\t\t\tthis.diffuse = options.diffuse;\n\t\t}\n\t\tif (options.specular) {\n\t\t\tthis.specular = options.specular;\n\t\t}\n\t\tif (options.constant) {\n\t\t\tthis.constant = options.constant;\n\t\t}\n\t\tif (options.linear) {\n\t\t\tthis.linear = options.linear;\n\t\t}\n\t\tif (options.quadratic) {\n\t\t\tthis.quadratic = options.quadratic;\n\t\t}\n\t}\n}\n\n","import { Renderer } from './renderer';\nimport { Shader, ShaderOptions } from '../shader';\nimport { Vertex } from './vertex';\nimport { Actor, Instance } from '../actor';\nimport { Matrix4 } from '../geom';\nimport { Mesh } from '../mesh';\nimport { Scene } from '../scene';\nimport { Texture } from '../texture';\nimport { UniformValues } from '../shader';\nimport { WebGLMesh } from './webgl_mesh';\nimport { WebGLRendererTexture } from './webgl_texture';\nimport { WebGLRenderTarget } from './webgl_render_target';\nimport { StaticMesh } from '../components/static_mesh';\nimport { Light } from '../components/light';\nimport { RenderTexture, Attachment } from '../render_texture';\nimport defaultVertSource from '../shaders/wireframe.vert.glsl';\nimport defaultFragSource from '../shaders/wireframe.frag.glsl';\n\nconst DEBUG_ENABLED = !PRODUCTION || window.location.search.indexOf('debug') !== -1;\n\ntype ExtWheelEvent = WheelEvent & { wheelDelta: number, axis: number, HORIZONTAL_AXIS: 0x01, VERTICAL_AXIS: 0x02 };\n\nexport class WebGLRenderer extends Renderer {\n\tcanvas: HTMLCanvasElement;\n\tdebugEl: HTMLElement;\n\tdefaultShader: Shader;\n\tscale = 1.0 * window.devicePixelRatio;\n\tlineWidth = 2 * window.devicePixelRatio;\n\tantiAlias = true;\n\tvsync = true;\n\tlastFrameAt = 0;\n\tframeAverage = 0;\n\tframe = 0;\n\tisGrabbed = false;\n\tseed = Math.random();\n\tprivate dragDelta = [0, 0];\n\tprivate context: WebGLRenderingContext;\n\tprivate textures: Map<Texture, WebGLRendererTexture> = new Map();\n\tprivate meshes: Map<Mesh<Vertex>, WebGLMesh<Vertex>> = new Map();\n\tprivate renderTargets: Map<RenderTexture, WebGLRenderTarget> = new Map();\n\n\tconstructor(el: HTMLElement) {\n\t\tsuper();\n\t\tif (el instanceof HTMLCanvasElement) {\n\t\t\tthis.canvas = el;\n\t\t} else {\n\t\t\tthis.canvas = document.createElement('canvas');\n\t\t\tif (el instanceof HTMLElement) {\n\t\t\t\tthis.attach(el);\n\t\t\t}\n\t\t}\n\n\t\tObject.assign(this.canvas.style, {\n\t\t\tposition: 'fixed',\n\t\t\tleft: 0,\n\t\t\tright: 0,\n\t\t\ttop: 0,\n\t\t\tbottom: 0,\n\t\t});\n\t}\n\n\tget isDragging(): boolean {\n\t\tif (Math.abs(this.dragDelta[0]) > 4 || Math.abs(this.dragDelta[1]) > 4) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * The canvas's parent element\n\t */\n\tget parentElement(): HTMLCanvasElement['parentElement'] {\n\t\treturn this.canvas.parentElement;\n\t}\n\n\t/**\n\t * The WebGL drawing context\n\t */\n\tget gl(): WebGLRenderingContext {\n\t\tif (this.context) {\n\t\t\treturn this.context;\n\t\t}\n\n\t\tconst options = {\n\t\t\tantialias: this.antiAlias,\n\t\t};\n\n\t\tthis.context = this.canvas.getContext('webgl', options) as WebGLRenderingContext;\n\t\tif (!this.context) {\n\t\t\tthis.parentElement.innerHTML = 'Failed to create a WebGL context';\n\t\t\tthrow 'Failed to create WebGL context';\n\t\t}\n\n\t\treturn this.context;\n\t}\n\n\tget width(): number {\n\t\treturn this.canvas.clientWidth;\n\t}\n\n\tget height(): number {\n\t\treturn this.canvas.clientHeight;\n\t}\n\n\t/**\n\t * Creates the WebGL buffers, compiles the shaders, etc.\n\t */\n\tprivate initWebGL() {\n\t\tconst gl = this.gl;\n\n\t\tgl.enable(gl.DEPTH_TEST);\n\t\tgl.enable(gl.BLEND);\n\t\tgl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\t\tthis.defaultShader = this.createShader(defaultVertSource, defaultFragSource);\n\t}\n\n\tgrab(lock: boolean = false) {\n\t\tif (lock) {\n\t\t\tthis.canvas.requestPointerLock();\n\t\t}\n\t\tthis.isGrabbed = true;\n\t\tthis.addEventListeners();\n\t}\n\n\trelease() {\n\t\tthis.isGrabbed = false;\n\t\tdocument.exitPointerLock();\n\t\tthis.removeEventListeners();\n\t}\n\n\tprivate addEventListeners() {\n\t\tdocument.addEventListener('pointerlockchange', this.onPointerLockChange);\n\t\twindow.addEventListener('keydown', this.onKeyDown);\n\t\twindow.addEventListener('keyup', this.onKeyUp);\n\t\twindow.addEventListener('mousemove', this.onMouseMove);\n\t\twindow.addEventListener('mouseup', this.onMouseUp);\n\t\twindow.addEventListener('mousedown', this.onMouseDown);\n\t\twindow.addEventListener('wheel', this.onWheel, { passive: false });\n\t\twindow.addEventListener('DOMMouseScroll', this.onWheel, { passive: false });\n\t}\n\n\tprivate removeEventListeners() {\n\t\tthis.heldKeys.clear();\n\t\tdocument.removeEventListener('pointerlockchange', this.onPointerLockChange);\n\t\twindow.removeEventListener('keydown', this.onKeyDown);\n\t\twindow.removeEventListener('keyup', this.onKeyUp);\n\t\twindow.removeEventListener('mousemove', this.onMouseMove);\n\t\twindow.removeEventListener('mouseup', this.onMouseUp);\n\t\twindow.removeEventListener('mousedown', this.onMouseDown);\n\t\twindow.removeEventListener('wheel', this.onWheel);\n\t\twindow.removeEventListener('DOMMouseScroll', this.onWheel);\n\t}\n\n\tonPointerLockChange = () => {\n\t\tif (!this.isGrabbed) {\n\t\t\tthis.removeEventListeners();\n\t\t}\n\t};\n\n\tonKeyDown = (e: KeyboardEvent) => {\n\t\tthis.heldKeys.add(e.key.toLowerCase());\n\t};\n\n\tonKeyUp = (e: KeyboardEvent) => {\n\t\tthis.heldKeys.delete(e.key.toLowerCase());\n\t};\n\n\tonMouseDown = (e: MouseEvent) => {\n\t\tthis.dragDelta[0] = 0;\n\t\tthis.dragDelta[1] = 0;\n\t\tthis.mouseButtons.add(e.button);\n\t};\n\n\tonMouseUp = (e: MouseEvent) => {\n\t\tsetTimeout(() => {\n\t\t\tthis.dragDelta[0] = 0;\n\t\t\tthis.dragDelta[1] = 0;\n\t\t}, 1);\n\t\tthis.mouseButtons.delete(e.button);\n\t};\n\n\tonMouseMove = (e: MouseEvent) => {\n\t\tif (this.mouseButtons.size > 0) {\n\t\t\tthis.dragDelta[0] += e.movementX;\n\t\t\tthis.dragDelta[1] += e.movementY;\n\t\t}\n\t\tthis.mousePosition[0] = e.clientX;\n\t\tthis.mousePosition[1] = e.clientY;\n\t\tthis.mouseMovement[0] += e.movementX;\n\t\tthis.mouseMovement[1] += e.movementY;\n\t};\n\n\tonWheel = (e: ExtWheelEvent) => {\n\t\t// Ignore Firefox 'onwheel'\n\t\tif (!e.axis && !e.wheelDelta) return;\n\t\te.preventDefault();\n\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\tif (!e.wheelDelta && e.detail) {\n\t\t\t// Firefox (DOMMouseScroll)\n\t\t\tconst amount = e.detail * 53 / 3;\n\t\t\tif (e.axis === e.HORIZONTAL_AXIS) {\n\t\t\t\tdx = amount;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdy = amount;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Proper wheel event\n\t\t\tdx = e.deltaX;\n\t\t\tdy = e.deltaY;\n\t\t}\n\n\t\tthis.wheelMovement[0] += dx;\n\t\tthis.wheelMovement[1] += dy;\n\t};\n\n\tclear() {\n\t\tconst gl = this.gl;\n\t\tgl.clearDepth(1.0);\n\t\tgl.clearColor(...this.backgroundColor);\n\t\tgl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\t}\n\n\tdrawActorWithShader(shader: Shader, actor: Actor, projection?: Matrix4, options: { parentModel?: Matrix4 } = {}) {\n\t\tif (!actor.visible) return;\n\t\tconst { model, material, children } = actor;\n\t\tconst { parentModel } = options;\n\n\t\tconst actorModel = parentModel ? parentModel.multiply(model) : model;\n\n\t\tif (material) {\n\t\t\tactor.uniforms['uMaterial.color'] = material.color.length === 3 ? [...material.color, 1.0] : material.color;\n\t\t\tactor.uniforms['uFillColor'] = actor.uniforms['uMaterial.color'];\n\t\t\tactor.uniforms['uMaterial.hasTexture'] = !!material.texture;\n\t\t\tactor.uniforms['uMaterial.hasNormalMap'] = !!material.normalMap;\n\t\t\tactor.uniforms['uMaterial.hasSpecularMap'] = !!material.specularMap;\n\t\t\tactor.uniforms['uMaterial.hasDisplacementMap'] = !!material.displacementMap;\n\t\t\tactor.uniforms['uMaterial.castsShadows'] = material.castsShadows;\n\t\t\tactor.uniforms['uMaterial.receivesShadows'] = material.receivesShadows;\n\t\t\tactor.uniforms['uMaterial.emissive'] = material.emissive;\n\t\t\tactor.uniforms['uMaterial.displacementMultiplier'] = material.displacementMultiplier;\n\t\t\tif (material.texture) {\n\t\t\t\tactor.uniforms['uMaterial.texture'] = this.bindTexture(material.texture);\n\t\t\t}\n\t\t\tif (material.normalMap) {\n\t\t\t\tactor.uniforms['uMaterial.normalMap'] = this.bindTexture(material.normalMap);\n\t\t\t}\n\t\t\tif (material.specularMap) {\n\t\t\t\tactor.uniforms['uMaterial.specularMap'] = this.bindTexture(material.specularMap);\n\t\t\t}\n\t\t\tif (material.displacementMap) {\n\t\t\t\tactor.uniforms['uMaterial.displacementMap'] = this.bindTexture(material.displacementMap);\n\t\t\t}\n\t\t}\n\n\t\tif (projection) {\n\t\t\tshader.setUniform('uViewProj', projection);\n\t\t}\n\t\tshader.setUniform('uModel', actorModel);\n\n\t\tfor (const uniformName in actor.uniforms) {\n\t\t\tshader.setUniform(uniformName, actor.uniforms[uniformName]);\n\t\t}\n\n\n\t\t// Find mesh to draw\n\t\tconst mesh = actor.getComponentsOfType(StaticMesh)[0]?.mesh;\n\t\tif (mesh) {\n\t\t\tlet glMesh = this.meshes.get(mesh);\n\t\t\tif (!glMesh) {\n\t\t\t\tthis.uploadMesh(mesh);\n\t\t\t\tglMesh = this.meshes.get(mesh);\n\t\t\t}\n\n\t\t\tshader.bind(glMesh);\n\t\t\tif (actor.hasInstances) {\n\t\t\t\tshader.bindInstances(this.gl, glMesh);\n\t\t\t\tglMesh.drawInstances();\n\t\t\t} else {\n\t\t\t\tglMesh.draw();\n\t\t\t}\n\t\t}\n\n\t\t// Draw children\n\t\tfor (const child of children) {\n\t\t\tthis.drawActorWithShader(shader, child, projection, { ...options, parentModel: actorModel });\n\t\t}\n\t}\n\n\tdrawActor(actor: Actor, projection?: Matrix4, options: { parentModel?: Matrix4, uniforms?: UniformValues } = {}) {\n\t\tif (!actor.visible) return;\n\t\tconst { model, material, children } = actor;\n\t\tconst { parentModel } = options;\n\t\tconst actorModel = parentModel ? parentModel.multiply(model) : model;\n\n\t\tif (material) {\n\t\t\tactor.uniforms['uMaterial.color'] = material.color.length === 3 ? [...material.color, 1.0] : material.color;\n\t\t\tactor.uniforms['uMaterial.hasTexture'] = !!material.texture;\n\t\t\tactor.uniforms['uMaterial.hasNormalMap'] = !!material.normalMap;\n\t\t\tactor.uniforms['uMaterial.hasSpecularMap'] = !!material.specularMap;\n\t\t\tactor.uniforms['uMaterial.hasDisplacementMap'] = !!material.displacementMap;\n\t\t\tactor.uniforms['uMaterial.castsShadows'] = material.castsShadows;\n\t\t\tactor.uniforms['uMaterial.receivesShadows'] = material.receivesShadows;\n\t\t\tactor.uniforms['uMaterial.emissive'] = material.emissive;\n\t\t\tactor.uniforms['uMaterial.displacementMultiplier'] = material.displacementMultiplier;\n\t\t\tif (material.texture) {\n\t\t\t\tactor.uniforms['uMaterial.texture'] = this.bindTexture(material.texture);\n\t\t\t}\n\t\t\tif (material.normalMap) {\n\t\t\t\tactor.uniforms['uMaterial.normalMap'] = this.bindTexture(material.normalMap);\n\t\t\t}\n\t\t\tif (material.specularMap) {\n\t\t\t\tactor.uniforms['uMaterial.specularMap'] = this.bindTexture(material.specularMap);\n\t\t\t}\n\t\t\tif (material.displacementMap) {\n\t\t\t\tactor.uniforms['uMaterial.displacementMap'] = this.bindTexture(material.displacementMap);\n\t\t\t}\n\t\t}\n\n\t\t// TODO support multiple meshes on one actor?\n\t\tconst mesh = actor.getComponentsOfType(StaticMesh)[0]?.mesh;\n\n\t\tif (actor.shader && !actor.shader.compiled) {\n\t\t\tactor.shader.make(this.gl);\n\t\t}\n\n\t\t// FIXME reuse this\n\t\tconst view = this.camera.view.inverse();\n\n\t\tif (mesh instanceof Mesh) {\n\t\t\tconst gl = this.gl;\n\t\t\tconst shader = actor.shader || this.defaultShader;\n\t\t\tconst uniforms = shader.uniforms;\n\t\t\tshader.use();\n\n\t\t\tlet glMesh = this.meshes.get(mesh);\n\t\t\tif (!glMesh) {\n\t\t\t\tthis.uploadMesh(mesh);\n\t\t\t\tglMesh = this.meshes.get(mesh);\n\t\t\t}\n\n\t\t\t// FIXME deprecate all this\n\t\t\tif (projection) {\n\t\t\t\tgl.uniformMatrix4fv(uniforms.uViewProj.location, false, projection.toArray());\n\t\t\t}\n\t\t\tgl.uniformMatrix4fv(uniforms.uView.location, false, view.toArray());\n\t\t\tgl.uniform4fv(uniforms.uFogColor.location, this.backgroundColor);\n\t\t\tgl.uniform1f(uniforms.uLineWidth.location, this.lineWidth);\n\t\t\tgl.uniform1f(uniforms.uTime.location, performance.now());\n\t\t\tgl.uniform2fv(uniforms.uResolution.location, [this.camera.width, this.camera.height]);\n\t\t\tgl.uniform1f(uniforms.uSeed.location, this.seed);\n\t\t\tgl.uniformMatrix4fv(uniforms.uModel.location, false, actorModel.toArray());\n\t\t\tif (material?.color) {\n\t\t\t\tgl.uniform4fv(uniforms.uFillColor.location, actor.uniforms['uMaterial.color'] as number[]);\n\t\t\t}\n\n\t\t\tif (options?.uniforms) {\n\t\t\t\tfor (const uniformName in options.uniforms) {\n\t\t\t\t\tif (shader.uniforms[uniformName]) {\n\t\t\t\t\t\tshader.setUniform(uniformName, options.uniforms[uniformName]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const uniformName in actor.uniforms) {\n\t\t\t\tshader.setUniform(uniformName, actor.uniforms[uniformName]);\n\t\t\t}\n\n\n\t\t\tshader.bind(glMesh);\n\t\t\tif (actor.hasInstances) {\n\t\t\t\tshader.bindInstances(gl, glMesh);\n\t\t\t\tglMesh.drawInstances();\n\t\t\t} else {\n\t\t\t\tglMesh.draw();\n\t\t\t}\n\t\t}\n\n\t\tfor (const child of children) {\n\t\t\tthis.drawActor(child, projection, { ...options, parentModel: actorModel });\n\t\t}\n\t}\n\n\tuploadMesh(mesh: Mesh) {\n\t\tconst gl = this.gl;\n\n\t\t// Link a Mesh with its WebGLMesh\n\t\tlet glMesh = this.meshes.get(mesh);\n\t\tif (!glMesh) {\n\t\t\tglMesh = new WebGLMesh(gl);\n\t\t\tthis.meshes.set(mesh, glMesh);\n\t\t}\n\t\tglMesh.upload(mesh);\n\t}\n\n\tuploadMeshInstances<I extends Instance = Instance>(mesh: Mesh, instances: I[]) {\n\t\tconst gl = this.gl;\n\n\t\t// Link a Mesh with its WebGLMesh\n\t\tlet glMesh = this.meshes.get(mesh);\n\t\tif (!glMesh) {\n\t\t\tglMesh = new WebGLMesh(gl);\n\t\t\tthis.meshes.set(mesh, glMesh);\n\t\t\tglMesh.upload(mesh);\n\t\t}\n\t\tglMesh.uploadInstances(instances);\n\t}\n\n\tremoveMesh(mesh: Mesh<Vertex>) {\n\t\tconst glMesh = this.meshes.get(mesh);\n\t\tif (!glMesh) return;\n\t\tthrow 'not yet implemented';\n\t}\n\n\tuploadTexture(texture: Texture, unit: number = null): number {\n\t\tconst gl = this.gl;\n\n\t\t// Link a Texture with its WebGLRendererTexture\n\t\tlet glTexture = this.textures.get(texture);\n\t\tif (!glTexture) {\n\t\t\tglTexture = WebGLRendererTexture.fromTexture(gl, texture);\n\t\t\tthis.textures.set(texture, glTexture);\n\t\t}\n\t\tif (!unit && !glTexture.unit) {\n\t\t\tunit = this.textures.size;\n\t\t}\n\t\tglTexture.upload(texture, unit != null ? unit : glTexture.unit);\n\n\t\treturn unit;\n\t}\n\n\tbindTexture(texture: Texture): number {\n\t\tlet glTexture = this.textures.get(texture);\n\t\tif (!glTexture) {\n\t\t\tthis.uploadTexture(texture);\n\t\t\tglTexture = this.textures.get(texture);\n\t\t}\n\t\treturn glTexture.bind();\n\t}\n\n\tunbindTexture(texture: Texture) {\n\t\tlet glTexture = this.textures.get(texture);\n\t\tif (!glTexture) {\n\t\t\treturn;\n\t\t}\n\t\tglTexture.unbind();\n\t}\n\n\tcreateShader(vertSource: string, fragSource: string, options?: ShaderOptions): Shader {\n\t\treturn new Shader(this.gl, vertSource, fragSource, options);\n\t}\n\n\t/**\n\t * Wait for next animation frame and redraw everything\n\t */\n\tasync drawScene(scene: Scene, target?: RenderTexture): Promise<number> {\n\t\treturn new Promise((resolve) => {\n\t\t\tconst draw = () => {\n\t\t\t\tconst now = performance.now();\n\t\t\t\tconst dt = (now - this.lastFrameAt) / 1000.0;\n\t\t\t\tthis.drawSync(scene, target);\n\n\t\t\t\tthis.frame++;\n\t\t\t\tif (DEBUG_ENABLED && this.frame % 60 === 0) {\n\t\t\t\t\tconst frameRate = (performance.now() - this.frameAverage) / 60;\n\t\t\t\t\tthis.frameAverage = performance.now();\n\t\t\t\t\tconst fps = (1 / (frameRate / 1000)) | 0;\n\t\t\t\t\tthis.debugEl.innerHTML = `${fps} fps`;\n\t\t\t\t}\n\n\t\t\t\tresolve(dt);\n\t\t\t};\n\n\t\t\tif (target) {\n\t\t\t\tthis.drawSync(scene, target);\n\t\t\t\tresolve(0);\n\t\t\t} else if (this.vsync) {\n\t\t\t\twindow.requestAnimationFrame(draw);\n\t\t\t} else {\n\t\t\t\tsetTimeout(draw, 0);\n\t\t\t}\n\t\t});\n\t}\n\n\tdrawSync(scene: Scene, texture?: RenderTexture) {\n\t\t// Drawing to a texture\n\t\tlet target;\n\t\tif (texture) {\n\t\t\ttarget = this.renderTargets.get(texture);\n\t\t\tif (!target) {\n\t\t\t\tthis.uploadTexture(texture);\n\t\t\t\tconst glTexture = this.textures.get(texture);\n\t\t\t\ttarget = new WebGLRenderTarget(this.gl, texture.size, glTexture);\n\t\t\t\tif (texture.attachment === Attachment.DEPTH) {\n\t\t\t\t\ttarget.attachment = this.gl.DEPTH_ATTACHMENT;\n\t\t\t\t}\n\n\t\t\t\tthis.renderTargets.set(texture, target);\n\t\t\t}\n\t\t\t\n\t\t\t// Resize to match size of texture\n\t\t\tthis.updateSize(texture.size, texture.size);\n\t\t\ttarget.bind();\n\t\t}\n\n\t\tthis.backgroundColor = [...scene.backgroundColor];\n\t\tconst now = performance.now();\n\t\tthis.lastFrameAt = now;\n\n\t\tthis.gl.viewport(0, 0, this.camera.width, this.camera.height);\n\t\tthis.clear();\n\n\t\t// Uniforms\n\t\tconst proj = this.camera.projection.clone();\n\t\tconst view = this.camera.view.inverse();\n\t\tconst viewProj = proj.multiply(view);\n\n\t\t// Batch shaders together\n\t\tconst shaderMap = new Map<Shader, Actor[]>();\n\t\tfor (const actor of scene.actors) {\n\t\t\tconst shader = actor.shader;\n\t\t\tif (!shader) continue;\n\t\t\tif (!shaderMap.get(shader)) {\n\t\t\t\tshaderMap.set(shader, [])\n\t\t\t}\n\t\t\tshaderMap.get(shader).push(actor);\n\t\t}\n\n\t\tfor (const shader of shaderMap.keys()) {\n\t\t\tif (!shader.compiled) {\n\t\t\t\tshader.make(this.gl);\n\t\t\t}\n\t\t\tshader.use();\n\n\n\t\t\t// Various global uniforms\n\t\t\tshader.setUniform('uView', view);\n\t\t\tshader.setUniform('uFogColor', this.backgroundColor);\n\t\t\tshader.setUniform('uLineWidth', this.lineWidth);\n\t\t\tshader.setUniform('uTime', performance.now());\n\t\t\tshader.setUniform('uResolution', [this.camera.width, this.camera.height]);\n\t\t\tshader.setUniform('uSeed', this.seed);\n\n\t\t\t// Scene defined uniforms\n\t\t\tfor (const uniformName in scene.uniforms) {\n\t\t\t\tshader.setUniform(uniformName, scene.uniforms[uniformName]);\n\t\t\t}\n\n\t\t\t// Lights\n\t\t\tconst lightCount = scene.lights.length;\n\t\t\tshader.setUniform('uLightCount', lightCount);\n\t\t\tfor (let i = 0; i < lightCount; i++) {\n\t\t\t\tconst position = scene.lights[i].position;\n\t\t\t\tconst light = scene.lights[i].getComponentsOfType(Light)[0] as Light;\n\t\t\t\tshader.setUniform(`uLights[${i}].position`, position);\n\t\t\t\tshader.setUniform(`uLights[${i}].diffuse`, light.diffuse);\n\t\t\t\tshader.setUniform(`uLights[${i}].ambient`, light.ambient);\n\t\t\t}\n\n\t\t\t// Draw actors with this shader\n\t\t\tfor (const actor of shaderMap.get(shader)) {\n\t\t\t\tthis.drawActorWithShader(shader, actor, viewProj);\n\t\t\t}\n\t\t}\n\n\t\t// Cleanup after drawing to texture\n\t\tif (texture) {\n\t\t\ttarget.unbind();\n\t\t\t// FIXME depth attachment check is so we don't resize the light (which is assigned to this.camera)\n\t\t\tif (texture.attachment != Attachment.DEPTH) {\n\t\t\t\tthis.updateSize();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Update the framebuffer of the canvas to match its container's size\n\t */\n\tupdateSize(width?: number, height?: number) {\n\t\tif (!this.parentElement) {\n\t\t\treturn;\n\t\t}\n\t\tconst parentWidth = this.parentElement.clientWidth * this.scale | 0;\n\t\tconst parentHeight = this.parentElement.clientHeight * this.scale | 0;\n\t\twidth = width != null ? width : parentWidth;\n\t\theight = height != null ? height : parentHeight;\n\t\tthis.camera.resize(width, height);\n\n\t\tthis.canvas.style.imageRendering = 'crisp-edges'; // Firefox\n\t\tthis.canvas.style.imageRendering = 'pixelated'; // Webkit\n\t\tthis.canvas.style.width = this.parentElement.clientWidth + 'px';\n\t\tthis.canvas.style.height = this.parentElement.clientHeight + 'px';\n\t\tthis.canvas.setAttribute('width', parentWidth.toString());\n\t\tthis.canvas.setAttribute('height', parentHeight.toString());\n\t}\n\n\taddEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: AddEventListenerOptions) {\n\t\tif (!this.canvas) return;\n\t\tthis.canvas.addEventListener(type, listener, options);\n\t}\n\n\tremoveEventListener(type: string, listener: EventListenerOrEventListenerObject, options?: EventListenerOptions) {\n\t\tif (!this.canvas) return;\n\t\tthis.canvas.removeEventListener(type, listener, options);\n\t}\n\n\t/**\n\t * Insert the canvas into a HTMLElement\n\t */\n\tattach(el: HTMLElement = null) {\n\t\tel?.appendChild(this.canvas);\n\t\twindow.addEventListener('resize', this.updateSize.bind(this, null, null));\n\t\tthis.updateSize();\n\t\tthis.initWebGL();\n\t\tthis.addEventListeners();\n\n\t\tif (DEBUG_ENABLED) {\n\t\t\tthis.debugEl = document.createElement('div');\n\t\t\tthis.canvas.parentElement?.appendChild(this.debugEl);\n\t\t\tObject.assign(this.debugEl.style, {\n\t\t\t\tposition: 'fixed',\n\t\t\t\tborderRadius: '12px',\n\t\t\t\tzIndex: 10,\n\t\t\t\tright: '10px',\n\t\t\t\ttop: '10px',\n\t\t\t\tcolor: 'red',\n\t\t\t\tfontSize: '32px',\n\t\t\t\tbackground: 'rgba(0, 0, 0, 0.5)',\n\t\t\t\tpadding: '10px',\n\t\t\t});\n\t\t}\n\t}\n}\n","export default \"#define GLSLIFY 1\\nuniform mat4 uViewProj;\\nuniform mat4 uModel;\\nuniform vec4 uFogColor;\\nuniform float uLineWidth;\\n\\nattribute vec3 position;\\nattribute vec3 barycentric;\\nattribute vec4 color;\\n\\nvarying vec4 vFogColor;\\nvarying float vFogDepth;\\nvarying vec3 vBarycentric;\\nvarying float vLineWidth;\\nvarying vec4 vColor;\\n\\nfloat fog_dist = 1000.0;\\n\\nvoid main(void) {\\n\\tmat4 mvp = uModel * uViewProj;\\n\\n\\tgl_Position = vec4(position, 1.0) * mvp;\\n\\tvFogDepth = max(0.0, min(1.0, gl_Position.z / fog_dist));\\n\\tvFogColor = uFogColor;\\n\\tvLineWidth = uLineWidth;\\n\\n\\tvColor = color;\\n\\tvBarycentric = barycentric;\\n}\\n\";","export default \"precision mediump float;\\n\\nvarying vec4 vFogColor;\\nvarying float vFogDepth;\\nvarying vec3 vBarycentric;\\nvarying float vLineWidth;\\nvarying vec4 vColor;\\n\\n#extension GL_OES_standard_derivatives : enable\\n#define GLSLIFY 1\\n\\nfloat edgeDistance(vec3 barycentric) {\\n\\tvec3 d = fwidth(barycentric);\\n\\tvec3 a = smoothstep(vec3(0.0), d * 2.0, barycentric);\\n\\treturn min(min(a.x, a.y), a.z);\\n}\\n\\nvoid main(void) {\\n\\tvec4 lineColor = vColor;\\n\\tvec4 faceColor = vec4(0.0, 0.0, 0.0, vColor.a);\\n\\tvec4 color;\\n\\tfloat d = edgeDistance(vBarycentric);\\n\\tif (d < 1.0) {\\n\\t\\tcolor = mix(lineColor, faceColor, d);\\n\\t}\\n\\telse {\\n\\t\\tcolor = faceColor;\\n\\t}\\n\\n\\tgl_FragColor = mix(color, vFogColor, vFogDepth);\\n}\\n\";","import { Actor, ActorInstance } from './actor';\nimport { Texture } from './texture';\nimport { Renderer } from './renderer';\nimport { Color } from './material';\nimport { StaticMesh } from './components/static_mesh';\nimport { Light as LightComponent } from './components/light';\nimport { UniformValues } from './shader';\nimport { RenderTexture, Attachment } from './render_texture';\nimport { Light } from './light';\nimport { normalize } from './geom';\n\nexport class Scene {\n\tactors: Actor[] = [];\n\ttextures: Map<number, Texture> = new Map();\n\trenderer: Renderer;\n\tbackgroundColor: Color = [0.0, 0.0, 0.0, 1.0];\n\tshadowMap: RenderTexture;\n\tlight: Light;\n\tlights: Actor[] = [];\n\tcastShadows: false;\n\tuniforms?: UniformValues = {\n\t\tuShadowMap: null,\n\t\tuLight: null,\n\t\tuLightDir: null,\n\t};\n\n\tconstructor(renderer: Renderer) {\n\t\tthis.renderer = renderer;\n\t}\n\n\taddActor(actor: Actor): number {\n\t\tconst { children } = actor;\n\n\t\tconst uploadActor = (actor: Actor) => {\n\t\t\t// Keep track of lights\n\t\t\tif (actor.hasComponentOfType(LightComponent)) {\n\t\t\t\tthis.lights.push(actor);\n\t\t\t}\n\n\t\t\t// Upload the mesh\n\t\t\tfor (const component of actor.getComponentsOfType(StaticMesh)) {\n\t\t\t\tthis.renderer.uploadMesh(component.mesh);\n\t\t\t}\n\n\t\t\t// Upload textures\n\t\t\tif (actor.material?.texture) {\n\t\t\t\tthis.addTexture(actor.material.texture);\n\t\t\t}\n\t\t\tif (actor.material?.normalMap) {\n\t\t\t\tthis.addTexture(actor.material.normalMap);\n\t\t\t}\n\t\t\tif (actor.material?.specularMap) {\n\t\t\t\tthis.addTexture(actor.material.specularMap);\n\t\t\t}\n\t\t\tif (actor.material?.displacementMap) {\n\t\t\t\tthis.addTexture(actor.material.displacementMap);\n\t\t\t}\n\n\t\t\tthis.uploadActorInstances(actor);\n\t\t};\n\n\t\tuploadActor(actor);\n\n\t\tfor (const child of children) {\n\t\t\tuploadActor(child);\n\t\t}\n\n\n\t\tthis.actors.push(actor);\n\t\treturn this.actors.length - 1;\n\t}\n\n\tuploadActorInstances(actor: Actor) {\n\t\tconst { hasInstances } = actor;\n\t\tif (!hasInstances) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst data = Array.from(actor.instances.values()).map((i: ActorInstance) => i.data)\n\n\t\tfor (const component of actor.getComponentsOfType(StaticMesh)) {\n\t\t\tthis.renderer.uploadMeshInstances(component.mesh, data);\n\t\t}\n\t}\n\n\taddTexture(texture: Texture): number {\n\t\tconst id = this.renderer.uploadTexture(texture);\n\t\tthis.textures.set(id, texture);\n\t\treturn id;\n\t}\n\n\tgetIdOfTexture(texture: Texture): number | null {\n\t\tfor (let [id, value] of this.textures.entries()) {\n\t\t\tif (value === texture) return id;\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tupdateTexture(textureOrId: Texture | number) {\n\t\tif (typeof textureOrId === 'number') {\n\t\t\tconst texture = this.textures.get(textureOrId);\n\t\t\tif (!texture) {\n\t\t\t\tthrow `Unable to find texture ${textureOrId}`;\n\t\t\t}\n\t\t\tthis.renderer.uploadTexture(texture, textureOrId);\n\t\t} else {\n\t\t\tconst id = this.getIdOfTexture(textureOrId);\n\t\t\tif (id == null) {\n\t\t\t\tthrow `Attempted to upload an unknown texture`;\n\t\t\t}\n\t\t\tthis.renderer.uploadTexture(textureOrId, id);\n\t\t}\n\t}\n\n\tbindTexture(textureOrId: Texture | number): number {\n\t\tconst texture = typeof textureOrId === 'number' ? this.textures.get(textureOrId) : textureOrId;\n\t\tif (!texture) {\n\t\t\tthrow `Unable to find texture`;\n\t\t}\n\t\treturn this.renderer.bindTexture(texture);\n\t}\n\n\tunbindTexture(textureOrId: Texture | number) {\n\t\tconst texture = typeof textureOrId === 'number' ? this.textures.get(textureOrId) : textureOrId;\n\t\tif (!texture) {\n\t\t\tthrow `Unable to find texture`;\n\t\t}\n\t\tthis.renderer.unbindTexture(texture);\n\t}\n\n\tasync draw(): Promise<number> {\n\t\tif (this.castShadows) {\n\t\t\tthis.updateShadowMap();\n\t\t}\n\t\tthis.updateLightView();\n\t\treturn await this.renderer.drawScene(this);\n\t}\n\n\tprotected createShadowMap() {\n\t\tconst gl = (this.renderer as any).gl as WebGLRenderingContext;\n\n\t\tconst ext = gl.getExtension('WEBGL_depth_texture');\n\t\tif (!ext) {\n\t\t\tthrow `WEBGL_depth_texture extension is not supported`;\n\t\t}\n\n\t\tthis.shadowMap = new RenderTexture(1024, Attachment.DEPTH);\n\t}\n\n\tprotected updateShadowMap() {\n\t\tif (!this.light) return;\n\t\tif (!this.shadowMap) this.createShadowMap();\n\n\t\tconst hiddenActors = [];\n\t\tfor (const actor of this.actors) {\n\t\t\tif (actor.visible && actor.material && !actor.material.castsShadows) {\n\t\t\t\tactor.visible = false;\n\t\t\t\thiddenActors.push(actor);\n\t\t\t}\n\t\t}\n\t\tthis.disableShadows();\n\t\tconst oldCamera = this.renderer.camera;\n\t\tthis.renderer.camera = this.light;\n\t\tthis.renderer.drawScene(this, this.shadowMap);\n\t\tthis.renderer.camera = oldCamera;\n\t\tthis.enableShadows();\n\t\tfor (const actor of hiddenActors) {\n\t\t\tactor.visible = true;\n\t\t}\n\t}\n\n\tprotected updateLightView() {\n\t\tif (!this.light) return;\n\t\tconst proj = this.light.projection.clone();\n\t\tconst view = this.light.view.inverse();\n\t\tconst viewProj = proj.multiply(view);\n\t\tconst forward = this.light.view.multiplyVector4([0.0, 0.0, 1.0, 0.0]);\n\t\tconst lightDir = normalize([forward[0], forward[1], forward[2]]);\n\n\t\tthis.uniforms.uLightDir = lightDir;\n\t\tthis.uniforms.uLight = viewProj;\n\t}\n\n\tprivate enableShadows() {\n\t\tthis.uniforms.uShadowMap = this.bindTexture(this.shadowMap);\n\t}\n\n\tprivate disableShadows() {\n\t\tthis.unbindTexture(this.shadowMap);\n\t\tthis.uniforms.uShadowMap = null;\n\t}\n}\n","import { Color } from './material';\nimport { BasicCamera } from './camera';\n\nexport class Light extends BasicCamera {\n\tcolor: Color = [1.0, 1.0, 1.0, 1.0];\n\tcastsShadows = false;\n}\n","import { Shader } from '../shader';\nimport vertexSource from './material.vert.glsl';\nimport vertexSourceSphere from './material_sphere.vert.glsl';\nimport fragmentSource from './material.frag.glsl';\nimport fragmentSourceSphere from './material_sphere.frag.glsl';\n\nconst MAX_LIGHT_COUNT = 8;\n\ntype UniformMap = Shader['uniforms'];\n\nexport class MaterialShader extends Shader {\n\tmake(gl: WebGLRenderingContext, vertSource?: string, fragSource?: string) {\n\t\tconst lightUniforms: UniformMap = {\n\t\t\tuLightCount: {\n\t\t\t\ttype: WebGLRenderingContext.INT,\n\t\t\t},\n\t\t};\n\t\tfor (let i = 0; i < MAX_LIGHT_COUNT; i++) {\n\t\t\tconst uniformName = `uLights[${i}]`;\n\t\t\t// @prettier-ignore\n\t\t\tlightUniforms[`${uniformName}.position`]  = { type: WebGLRenderingContext.FLOAT_VEC3 };\n\t\t\tlightUniforms[`${uniformName}.ambient`]   = { type: WebGLRenderingContext.FLOAT_VEC3 };\n\t\t\tlightUniforms[`${uniformName}.diffuse`]   = { type: WebGLRenderingContext.FLOAT_VEC3 };\n\t\t\tlightUniforms[`${uniformName}.specular`]  = { type: WebGLRenderingContext.FLOAT_VEC3 };\n\t\t\tlightUniforms[`${uniformName}.constant`]  = { type: WebGLRenderingContext.FLOAT };\n\t\t\tlightUniforms[`${uniformName}.linear`]    = { type: WebGLRenderingContext.FLOAT };\n\t\t\tlightUniforms[`${uniformName}.quadratic`] = { type: WebGLRenderingContext.FLOAT };\n\t\t}\n\n\t\tsuper.make(gl, vertSource || vertexSource, fragSource || fragmentSource, {\n\t\t\tattributes: {\n\t\t\t\tcolor: {\n\t\t\t\t\ttype: WebGLRenderingContext.FLOAT,\n\t\t\t\t\tsize: 4,\n\t\t\t\t},\n\t\t\t\tnormal: {\n\t\t\t\t\ttype: WebGLRenderingContext.FLOAT,\n\t\t\t\t\tsize: 3,\n\t\t\t\t},\n\t\t\t\tuv: {\n\t\t\t\t\ttype: WebGLRenderingContext.FLOAT,\n\t\t\t\t\tsize: 2,\n\t\t\t\t},\n\t\t\t},\n\t\t\tuniforms: {\n\t\t\t\t...lightUniforms,\n\t\t\t\t// uMaterial\n\t\t\t\t\"uMaterial.color\": {\n\t\t\t\t\ttype: WebGLRenderingContext.FLOAT_VEC4,\n\t\t\t\t},\n\t\t\t\t\"uMaterial.castsShadows\": {\n\t\t\t\t\ttype: WebGLRenderingContext.BOOL,\n\t\t\t\t},\n\t\t\t\t\"uMaterial.receivesShadows\": {\n\t\t\t\t\ttype: WebGLRenderingContext.BOOL,\n\t\t\t\t},\n\t\t\t\t\"uMaterial.displacementMultiplier\": {\n\t\t\t\t\ttype: WebGLRenderingContext.FLOAT,\n\t\t\t\t},\n\t\t\t\t\"uMaterial.hasTexture\": {\n\t\t\t\t\ttype: WebGLRenderingContext.BOOL,\n\t\t\t\t},\n\t\t\t\t\"uMaterial.hasNormalMap\": {\n\t\t\t\t\ttype: WebGLRenderingContext.BOOL,\n\t\t\t\t},\n\t\t\t\t\"uMaterial.hasSpecularMap\": {\n\t\t\t\t\ttype: WebGLRenderingContext.BOOL,\n\t\t\t\t},\n\t\t\t\t\"uMaterial.hasDisplacementMap\": {\n\t\t\t\t\ttype: WebGLRenderingContext.BOOL,\n\t\t\t\t},\n\t\t\t\t\"uMaterial.texture\": {\n\t\t\t\t\ttype: WebGLRenderingContext.INT,\n\t\t\t\t},\n\t\t\t\t\"uMaterial.normalMap\": {\n\t\t\t\t\ttype: WebGLRenderingContext.INT,\n\t\t\t\t},\n\t\t\t\t\"uMaterial.specularMap\": {\n\t\t\t\t\ttype: WebGLRenderingContext.INT,\n\t\t\t\t},\n\t\t\t\t\"uMaterial.displacementMap\": {\n\t\t\t\t\ttype: WebGLRenderingContext.INT,\n\t\t\t\t},\n\t\t\t\t\"uMaterial.emissive\": {\n\t\t\t\t\ttype: WebGLRenderingContext.BOOL,\n\t\t\t\t},\n\t\t\t\tuTexture: {\n\t\t\t\t\ttype: WebGLRenderingContext.INT,\n\t\t\t\t},\n\t\t\t\tuNormalMap: {\n\t\t\t\t\ttype: WebGLRenderingContext.INT,\n\t\t\t\t},\n\t\t\t\tuLight: {\n\t\t\t\t\ttype: WebGLRenderingContext.FLOAT_MAT4,\n\t\t\t\t},\n\t\t\t\tuLightDir: {\n\t\t\t\t\ttype: WebGLRenderingContext.FLOAT_VEC3,\n\t\t\t\t},\n\t\t\t\tuShadowMap: {\n\t\t\t\t\ttype: WebGLRenderingContext.INT,\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n}\n\nexport class SphereMaterialShader extends MaterialShader {\n\tmake(gl: WebGLRenderingContext) {\n\t\tsuper.make(gl, vertexSourceSphere, fragmentSourceSphere);\n\t}\n}\n","export default \"#define GLSLIFY 1\\nuniform mat4 uViewProj;\\nuniform mat4 uView;\\nuniform mat4 uModel;\\nuniform mat4 uLight;\\n\\nattribute vec3 position;\\nattribute vec3 normal;\\nattribute vec2 uv;\\n\\nvarying vec3 vNormal;\\nvarying vec3 vViewNormal;\\nvarying vec4 vPosition;\\nvarying vec3 vBasePosition;\\nvarying vec2 vTexCoord;\\nvarying vec4 vPositionInLight;\\n\\nvoid main(void) {\\n\\tmat4 mvp = uModel  * uViewProj;\\n\\tgl_Position = vec4(position, 1.0) * mvp;\\n\\tvBasePosition = position;\\n\\tvPosition = vec4(position, 1.0) * uModel;\\n\\t//vNormal = normalize((vec4(normal, 0.0) * uModel)).xyz;\\n\\tvNormal = normal;\\n\\tvViewNormal = normalize((vec4(normal, 0.0) * uModel * uView)).xyz;\\n\\tvPositionInLight = vec4(position, 1.0) * uModel * uLight;\\n\\tvTexCoord = uv;\\n}\\n\";","export default \"precision highp float;\\n#define GLSLIFY 1\\n\\nstruct Material {\\n\\tbool castsShadows;\\n\\tbool receivesShadows;\\n\\tbool hasTexture;\\n\\tbool hasNormalMap;\\n\\tbool hasSpecularMap;\\n\\tbool hasDisplacementMap;\\n\\tbool emissive;\\n\\tvec4 color;\\n\\tfloat displacementMultiplier;\\n\\tsampler2D texture;\\n\\tsampler2D normalMap;\\n\\tsampler2D specularMap;\\n\\tsampler2D displacementMap;\\n};\\n\\nstruct Light {\\n\\tvec3 position;\\n\\tvec3 ambient;\\n\\tvec3 diffuse;\\n\\tvec3 specular;\\n\\n\\tfloat constant;\\n\\tfloat linear;\\n\\tfloat quadratic;\\n};\\n\\nuniform mat4 uModel;\\nuniform vec4 uFillColor;\\nuniform mat4 uView;\\nuniform sampler2D uShadowMap;\\nuniform vec3 uLightDir;\\nuniform Material uMaterial;\\nuniform int uLightCount;\\nuniform Light uLights[32];\\n\\nvarying vec3 vNormal;\\nvarying vec3 vViewNormal;\\nvarying vec4 vPosition;\\nvarying vec2 vTexCoord;\\nvarying vec4 vPositionInLight;\\n\\nvoid main(void) {\\n\\tvec3 texNormal;\\n\\tif (uMaterial.hasNormalMap) {\\n\\t\\ttexNormal = normalize(vec4(normalize(vNormal) * texture2D(uMaterial.normalMap, vTexCoord).rgb, 0.0) * uModel * uView).xyz;\\n\\t}\\n\\telse {\\n\\t\\ttexNormal = normalize(vec4(normalize(vNormal), 0.0) * uModel * uView).xyz;\\n\\t}\\n\\tvec4 texColor;\\n\\tif (uMaterial.hasTexture) {\\n\\t\\ttexColor = texture2D(uMaterial.texture, vTexCoord);\\n\\t} else {\\n\\t\\ttexColor = uMaterial.color;\\n\\t}\\n\\tfloat texSpecular = 0.0;\\n\\tif (uMaterial.hasSpecularMap) {\\n\\t\\ttexSpecular = texture2D(uMaterial.specularMap, vTexCoord).r;\\n\\t}\\n\\n\\tif (uMaterial.emissive) {\\n\\t\\tgl_FragColor = texColor;\\n\\t\\treturn;\\n\\t}\\n\\n\\tvec4 vertPos4 = vPosition * uView;\\n\\tvec3 vertPos = vertPos4.xyz / vertPos4.w;\\n\\n\\tvec3 ambient = vec3(0.0);\\n\\tvec3 diffuse = vec3(0.0);\\n\\tvec3 specular = vec3(0.0);\\n\\n\\tfor (int i = 0; i < 32; i++) {\\n\\t\\tif (i >= uLightCount) break;\\n\\n\\t\\tvec4 lightPos4 = vec4(uLights[i].position, 1.0) * uView;\\n\\t\\tvec3 lightPos = lightPos4.xyz / lightPos4.w;\\n\\n\\t\\tvec3 lightDir = normalize(lightPos - vertPos);\\n\\t\\tvec3 lightColor = uLights[i].diffuse;\\n\\t\\tambient += uLights[i].ambient;\\n\\n\\t\\tfloat diff = max(dot(texNormal, lightDir), 0.0);\\n\\t\\tdiffuse += diff * lightColor;\\n\\n\\t\\tfloat lambertian = max(dot(texNormal, lightDir), 0.0);\\n\\t\\tfloat spec = 0.0;\\n\\n\\t\\tif (lambertian > 0.0) {\\n\\t\\t\\tvec3 reflectDir = reflect(-lightDir, texNormal);\\n\\t\\t\\tvec3 viewDir = normalize(-vertPos);\\n\\n\\t\\t\\tfloat specAngle = max(dot(reflectDir, viewDir), 0.0);\\n\\t\\t\\tspec = pow(specAngle, 64.0) * texSpecular;\\n\\t\\t}\\n\\t\\tspecular += spec * lightColor;\\n\\t}\\n\\n\\tfloat shade = 0.0;\\n\\n\\tif (uMaterial.receivesShadows) {\\n\\t\\tfloat edge = 1.0/1024.0;\\n\\t\\tvec3 shadowPos = (vPositionInLight.xyz / vPositionInLight.w) * 0.5 + 0.5;\\n\\n\\t\\tfloat shadows[9];\\n\\n\\t\\tshadows[0] = texture2D(uShadowMap, vec2(shadowPos.x, shadowPos.y)).r;\\n\\t\\tshadows[1] = texture2D(uShadowMap, vec2(shadowPos.x - edge, shadowPos.y)).r;\\n\\t\\tshadows[2] = texture2D(uShadowMap, vec2(shadowPos.x + edge, shadowPos.y)).r;\\n\\t\\tshadows[3] = texture2D(uShadowMap, vec2(shadowPos.x, shadowPos.y - edge)).r;\\n\\t\\tshadows[4] = texture2D(uShadowMap, vec2(shadowPos.x, shadowPos.y + edge)).r;\\n\\t\\tshadows[5] = texture2D(uShadowMap, vec2(shadowPos.x - edge, shadowPos.y - edge)).r;\\n\\t\\tshadows[6] = texture2D(uShadowMap, vec2(shadowPos.x + edge, shadowPos.y - edge)).r;\\n\\t\\tshadows[7] = texture2D(uShadowMap, vec2(shadowPos.x - edge, shadowPos.y + edge)).r;\\n\\t\\tshadows[8] = texture2D(uShadowMap, vec2(shadowPos.x + edge, shadowPos.y + edge)).r;\\n\\n\\t\\tfloat distanceFromLight = shadowPos.z;\\n\\n\\t\\tfloat bias = 0.00001;\\n\\t\\tfor (int i = 0; i < 9; i++) {\\n\\t\\t\\tif (distanceFromLight > shadows[i] + bias) {\\n\\t\\t\\t\\tshade += 0.08;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\tvec3 shadowColor = vec3(0.0);\\n\\n\\tvec3 color = mix(texColor.rgb, shadowColor, shade);\\n\\tcolor = (ambient + diffuse + specular) * color;\\n\\tgl_FragColor = vec4(color, texColor.a);\\n}\\n\";","export default \"#define GLSLIFY 1\\nstruct Material {\\n\\tbool castsShadows;\\n\\tbool receivesShadows;\\n\\tbool hasTexture;\\n\\tbool hasNormalMap;\\n\\tbool hasSpecularMap;\\n\\tbool hasDisplacementMap;\\n\\tbool emissive;\\n\\tvec4 color;\\n\\tfloat displacementMultiplier;\\n\\tsampler2D texture;\\n\\tsampler2D normalMap;\\n\\tsampler2D specularMap;\\n\\tsampler2D displacementMap;\\n};\\n\\n#define PI 3.1415926535897932384626433832795\\n\\nuniform mat4 uViewProj;\\nuniform mat4 uView;\\nuniform mat4 uModel;\\nuniform mat4 uLight;\\nuniform Material uMaterial;\\n\\nattribute vec3 position;\\nattribute vec3 normal;\\nattribute vec2 uv;\\n\\nvarying vec3 vNormal;\\nvarying vec3 vViewNormal;\\nvarying vec4 vPosition;\\nvarying vec3 vBasePosition;\\nvarying vec2 vTexCoord;\\nvarying vec4 vPositionInLight;\\n\\nvec2 toLonLat(vec3 point) {\\n\\tvec3 v = normalize(point);\\n\\tfloat lat = acos(v.y) - PI / 2.0;\\n\\tfloat lon = atan(v.z, v.x) + PI / 2.0;\\n\\treturn vec2(lon, lat);\\n}\\n\\nvec2 lonLatToUV(vec2 ll) {\\n\\tfloat x = -ll.x / PI / 2.0;\\n\\tfloat y = ll.y / PI + 0.5;\\n\\treturn vec2(fract(x), fract(y));\\n}\\n\\nvoid main(void) {\\n\\tmat4 mvp = uModel  * uViewProj;\\n\\tvec2 uv = lonLatToUV(toLonLat(position));\\n\\tvec3 pos = position;\\n\\tif (uMaterial.hasDisplacementMap) {\\n\\t\\tvec3 texNormal = texture2D(uMaterial.displacementMap, uv).rgb;\\n\\t\\tpos += normal * texNormal * uMaterial.displacementMultiplier;\\n\\t}\\n\\tgl_Position = vec4(pos, 1.0) * mvp;\\n\\tvBasePosition = pos;\\n\\tvPosition = vec4(pos, 1.0) * uModel;\\n\\t//vNormal = normalize((vec4(normal, 0.0) * uModel)).xyz;\\n\\tvNormal = normal;\\n\\tvViewNormal = normalize((vec4(normal, 0.0) * uModel * uView)).xyz;\\n\\tvPositionInLight = vec4(pos, 1.0) * uModel * uLight;\\n\\tvTexCoord = uv;\\n}\\n\";","export default \"precision highp float;\\n#define GLSLIFY 1\\n\\nstruct Material {\\n\\tbool castsShadows;\\n\\tbool receivesShadows;\\n\\tbool hasTexture;\\n\\tbool hasNormalMap;\\n\\tbool hasSpecularMap;\\n\\tbool hasDisplacementMap;\\n\\tbool emissive;\\n\\tvec4 color;\\n\\tfloat displacementMultiplier;\\n\\tsampler2D texture;\\n\\tsampler2D normalMap;\\n\\tsampler2D specularMap;\\n\\tsampler2D displacementMap;\\n};\\n\\nstruct Light {\\n\\tvec3 position;\\n\\tvec3 ambient;\\n\\tvec3 diffuse;\\n\\tvec3 specular;\\n\\n\\tfloat constant;\\n\\tfloat linear;\\n\\tfloat quadratic;\\n};\\n\\nuniform mat4 uModel;\\nuniform vec4 uFillColor;\\nuniform mat4 uView;\\nuniform sampler2D uShadowMap;\\nuniform vec3 uLightDir;\\nuniform Material uMaterial;\\nuniform int uLightCount;\\nuniform Light uLights[32];\\n\\nvarying vec3 vNormal;\\nvarying vec3 vViewNormal;\\nvarying vec4 vPosition;\\nvarying vec2 vTexCoord;\\nvarying vec4 vPositionInLight;\\nvarying vec3 vBasePosition;\\n\\n#define PI 3.1415926535897932384626433832795\\n\\nvec2 toLonLat(vec3 point) {\\n\\tvec3 v = normalize(point);\\n\\tfloat lat = acos(v.y) - PI / 2.0;\\n\\tfloat lon = atan(v.z, v.x) + PI / 2.0;\\n\\treturn vec2(lon, lat);\\n}\\n\\nvec2 lonLatToUV(vec2 ll) {\\n\\tfloat x = -ll.x / PI / 2.0;\\n\\tfloat y = ll.y / PI + 0.5;\\n\\treturn vec2(fract(x), fract(y));\\n}\\n\\nvoid main(void) {\\n\\tvec2 uv = lonLatToUV(toLonLat(vBasePosition));\\n\\n\\tvec4 texColor;\\n\\tif (uMaterial.hasTexture) {\\n\\t\\ttexColor = texture2D(uMaterial.texture, uv);\\n\\t} else {\\n\\t\\ttexColor = uMaterial.color;\\n\\t}\\n\\n\\tvec3 texNormal;\\n\\tif (uMaterial.hasNormalMap) {\\n\\t\\ttexNormal = normalize(vec4(normalize(vNormal) * texture2D(uMaterial.normalMap, uv).rgb, 0.0) * uModel * uView).xyz;\\n\\t}\\n\\telse {\\n\\t\\ttexNormal = normalize(vec4(normalize(vNormal), 0.0) * uModel * uView).xyz;\\n\\t}\\n\\n\\tfloat texSpecular = 0.0;\\n\\tif (uMaterial.hasSpecularMap) {\\n\\t\\ttexSpecular = texture2D(uMaterial.specularMap, uv).r;\\n\\t}\\n\\n\\tif (uMaterial.emissive) {\\n\\t\\tgl_FragColor = texColor;\\n\\t\\treturn;\\n\\t}\\n\\n\\tvec4 vertPos4 = vPosition * uView;\\n\\tvec3 vertPos = vertPos4.xyz / vertPos4.w;\\n\\n\\tvec3 ambient = vec3(0.0);\\n\\tvec3 diffuse = vec3(0.0);\\n\\tvec3 specular = vec3(0.0);\\n\\n\\tfor (int i = 0; i < 32; i++) {\\n\\t\\tif (i >= uLightCount) break;\\n\\n\\t\\tvec4 lightPos4 = vec4(uLights[i].position, 1.0) * uView;\\n\\t\\tvec3 lightPos = lightPos4.xyz / lightPos4.w;\\n\\n\\t\\tvec3 lightDir = normalize(lightPos - vertPos);\\n\\t\\tvec3 lightColor = uLights[i].diffuse;\\n\\t\\tambient += uLights[i].ambient;\\n\\n\\t\\tfloat diff = max(dot(texNormal, lightDir), 0.0);\\n\\t\\tdiffuse += diff * lightColor;\\n\\n\\t\\tfloat lambertian = max(dot(texNormal, lightDir), 0.0);\\n\\t\\tfloat spec = 0.0;\\n\\n\\t\\tif (lambertian > 0.0) {\\n\\t\\t\\tvec3 reflectDir = reflect(-lightDir, texNormal);\\n\\t\\t\\tvec3 viewDir = normalize(-vertPos);\\n\\n\\t\\t\\tfloat specAngle = max(dot(reflectDir, viewDir), 0.0);\\n\\t\\t\\tspec = pow(specAngle, 64.0) * texSpecular;\\n\\t\\t}\\n\\t\\tspecular += spec * lightColor;\\n\\t}\\n\\n\\tfloat shade = 0.0;\\n\\n\\tif (uMaterial.receivesShadows) {\\n\\t\\tfloat edge = 1.0/1024.0;\\n\\t\\tvec3 shadowPos = (vPositionInLight.xyz / vPositionInLight.w) * 0.5 + 0.5;\\n\\n\\t\\tfloat shadows[9];\\n\\n\\t\\tshadows[0] = texture2D(uShadowMap, vec2(shadowPos.x, shadowPos.y)).r;\\n\\t\\tshadows[1] = texture2D(uShadowMap, vec2(shadowPos.x - edge, shadowPos.y)).r;\\n\\t\\tshadows[2] = texture2D(uShadowMap, vec2(shadowPos.x + edge, shadowPos.y)).r;\\n\\t\\tshadows[3] = texture2D(uShadowMap, vec2(shadowPos.x, shadowPos.y - edge)).r;\\n\\t\\tshadows[4] = texture2D(uShadowMap, vec2(shadowPos.x, shadowPos.y + edge)).r;\\n\\t\\tshadows[5] = texture2D(uShadowMap, vec2(shadowPos.x - edge, shadowPos.y - edge)).r;\\n\\t\\tshadows[6] = texture2D(uShadowMap, vec2(shadowPos.x + edge, shadowPos.y - edge)).r;\\n\\t\\tshadows[7] = texture2D(uShadowMap, vec2(shadowPos.x - edge, shadowPos.y + edge)).r;\\n\\t\\tshadows[8] = texture2D(uShadowMap, vec2(shadowPos.x + edge, shadowPos.y + edge)).r;\\n\\n\\t\\tfloat distanceFromLight = shadowPos.z;\\n\\n\\t\\tfloat bias = 0.00001;\\n\\t\\tfor (int i = 0; i < 9; i++) {\\n\\t\\t\\tif (distanceFromLight > shadows[i] + bias) {\\n\\t\\t\\t\\tshade += 0.08;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\tvec3 shadowColor = vec3(0.0);\\n\\n\\tvec3 color = mix(texColor.rgb, shadowColor, shade);\\n\\tcolor = (ambient + diffuse + specular) * color;\\n\\tgl_FragColor = vec4(color, texColor.a);\\n}\\n\";","import { Shader } from '../shader';\nimport vertexSource from './sprite.vert.glsl';\nimport fragmentSource from './sprite.frag.glsl';\n\nexport class SpriteShader extends Shader {\n\tmake(gl: WebGLRenderingContext) {\n\t\tsuper.make(gl, vertexSource, fragmentSource, {\n\t\t\tattributes: {\n\t\t\t\tuv: {\n\t\t\t\t\ttype: WebGLRenderingContext.FLOAT,\n\t\t\t\t\tsize: 2,\n\t\t\t\t},\n\t\t\t},\n\t\t\tuniforms: {\n\t\t\t\tuSampler: {\n\t\t\t\t\ttype: WebGLRenderingContext.INT,\n\t\t\t\t},\n\t\t\t\tuContrast: {\n\t\t\t\t\ttype: WebGLRenderingContext.FLOAT,\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n}\n","export default \"#define GLSLIFY 1\\nuniform mat4 uViewProj;\\nuniform mat4 uModel;\\n\\nattribute vec3 position;\\nattribute vec2 uv;\\n\\nvarying vec2 vTexCoord;\\n\\nvoid main(void) {\\n\\tmat4 mvp = uModel * uViewProj;\\n\\tgl_Position = vec4(position, 1.0) * mvp;\\n\\tvTexCoord = vec2(uv.x, 1.0 - uv.y);\\n}\\n\\n\";","export default \"precision mediump float;\\n#define GLSLIFY 1\\n\\nuniform float uTime;\\nuniform sampler2D uSampler;\\nuniform float uContrast;\\n\\nvarying vec2 vTexCoord;\\n\\nvoid main(void) {\\n\\tfloat contrast = uContrast > 0.0 ? uContrast : 1.0;\\n\\tgl_FragColor = (texture2D(uSampler, vTexCoord) - (1.0 - (1.0 / contrast))) * contrast;\\n}\\n\";","import { Shader } from '../shader';\nimport vertexSource from './simple.vert.glsl';\nimport fragmentSource from './simple.frag.glsl';\n\nexport class SimpleShader extends Shader {\n\tmake(gl: WebGLRenderingContext) {\n\t\tsuper.make(gl, vertexSource, fragmentSource, {\n\t\t\tattributes: {\n\t\t\t\tcolor: {\n\t\t\t\t\ttype: WebGLRenderingContext.FLOAT,\n\t\t\t\t\tsize: 4,\n\t\t\t\t},\n\t\t\t\tnormal: {\n\t\t\t\t\ttype: WebGLRenderingContext.FLOAT,\n\t\t\t\t\tsize: 3,\n\t\t\t\t},\n\t\t\t\tuv: {\n\t\t\t\t\ttype: WebGLRenderingContext.FLOAT,\n\t\t\t\t\tsize: 2,\n\t\t\t\t},\n\t\t\t},\n\t\t\tuniforms: {\n\t\t\t\tuLight: {\n\t\t\t\t\ttype: WebGLRenderingContext.FLOAT_MAT4,\n\t\t\t\t},\n\t\t\t\tuLightDir: {\n\t\t\t\t\ttype: WebGLRenderingContext.FLOAT_VEC3,\n\t\t\t\t},\n\t\t\t\tuShadowMap: {\n\t\t\t\t\ttype: WebGLRenderingContext.INT,\n\t\t\t\t},\n\t\t\t},\n\t\t});\n\t}\n}\n","export default \"#define GLSLIFY 1\\nuniform mat4 uViewProj;\\nuniform mat4 uView;\\nuniform mat4 uModel;\\nuniform mat4 uLight;\\n\\nattribute vec3 position;\\nattribute vec3 normal;\\nattribute vec4 color;\\nattribute vec2 uv;\\n\\nvarying vec4 vColor;\\nvarying vec3 vNormal;\\nvarying vec3 vPosition;\\nvarying vec4 vPositionInLight;\\nvarying vec2 vTexCoord;\\n\\nvoid main(void) {\\n\\tmat4 mvp = uModel  * uViewProj;\\n\\tgl_Position = vec4(position, 1.0) * mvp;\\n\\tvColor = color;\\n\\tvPosition = (vec4(position, 1.0) * uModel * uView).xyz;\\n\\tvPositionInLight = vec4(position, 1.0) * uModel * uLight;\\n\\tvNormal = normalize((vec4(normal, 0.0) * uModel)).xyz;\\n\\tvTexCoord = uv;\\n}\\n\";","export default \"precision mediump float;\\n#define GLSLIFY 1\\n\\nuniform float uTime;\\nuniform vec4 uFillColor;\\nuniform sampler2D uShadowMap;\\nuniform vec3 uLightDir;\\n\\nvarying vec4 vColor;\\nvarying vec3 vNormal;\\nvarying vec3 vPosition;\\nvarying vec4 vPositionInLight;\\nvarying vec2 vTexCoord;\\n\\nvoid main(void) {\\n\\tvec3 lightColor = vec3(1.0);\\n\\tvec3 ambient = 0.1 * lightColor;\\n\\n\\tfloat diff = max(dot(vNormal, uLightDir), 0.0);\\n\\tvec3 diffuse = diff * lightColor;\\n\\n\\tvec3 viewDir = normalize(-vPosition);\\n\\tvec3 reflectDir = reflect(-uLightDir, vNormal);\\n\\tfloat spec = pow(max(dot(viewDir, reflectDir), 0.0), 128.0);\\n\\tvec3 specular = 0.5 * spec * lightColor;\\n\\n\\tvec3 color = (ambient + diffuse + specular) * vColor.rgb;\\n\\n\\tif (uFillColor.a > 0.0) {\\n\\t\\tfloat shade = 0.0;\\n\\n\\t\\tfloat edge = 1.0/1024.0;\\n\\t\\tvec3 shadowPos = (vPositionInLight.xyz / vPositionInLight.w) * 0.5 + 0.5;\\n\\n\\t\\tfloat shadows[9];\\n\\n\\t\\tshadows[0] = texture2D(uShadowMap, vec2(shadowPos.x, shadowPos.y)).r;\\n\\t\\tshadows[1] = texture2D(uShadowMap, vec2(shadowPos.x - edge, shadowPos.y)).r;\\n\\t\\tshadows[2] = texture2D(uShadowMap, vec2(shadowPos.x + edge, shadowPos.y)).r;\\n\\t\\tshadows[3] = texture2D(uShadowMap, vec2(shadowPos.x, shadowPos.y - edge)).r;\\n\\t\\tshadows[4] = texture2D(uShadowMap, vec2(shadowPos.x, shadowPos.y + edge)).r;\\n\\t\\tshadows[5] = texture2D(uShadowMap, vec2(shadowPos.x - edge, shadowPos.y - edge)).r;\\n\\t\\tshadows[6] = texture2D(uShadowMap, vec2(shadowPos.x + edge, shadowPos.y - edge)).r;\\n\\t\\tshadows[7] = texture2D(uShadowMap, vec2(shadowPos.x - edge, shadowPos.y + edge)).r;\\n\\t\\tshadows[8] = texture2D(uShadowMap, vec2(shadowPos.x + edge, shadowPos.y + edge)).r;\\n\\n\\t\\tfloat distanceFromLight = shadowPos.z;\\n\\n\\t\\tfloat bias = 0.0001;\\n\\t\\tfor (int i = 0; i < 9; i++) {\\n\\t\\t\\tif (distanceFromLight > shadows[i] + bias) {\\n\\t\\t\\t\\tshade += 0.08;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tvec3 shadowColor = vec3(0.0);\\n\\t\\tgl_FragColor = vec4(mix(uFillColor.rgb, shadowColor, shade), vColor.a);\\n\\t} else {\\n\\t\\tgl_FragColor = vec4(color, vColor.a);\\n\\t}\\n}\\n\";","import { Mesh } from '../mesh';\nimport { Point2, Point3, Vector3, Matrix4 } from '../geom';\n\ntype Face = [number[], number[], number[]];\n\nexport type ObjVertex = {\n\tposition: Point3;\n\tnormal: Vector3;\n\tuv: Point2;\n};\n\nexport interface ObjOptions {\n\tflipFaces?: boolean;\n\tscale?: number;\n}\n\nexport interface ObjFile {\n\tvertices: Point3[];\n\tnormals: Vector3[];\n\tuvs: Point2[];\n}\n\nexport class Obj extends Mesh<ObjVertex> {\n\tconstructor(data: string, options?: ObjOptions) {\n\t\tlet { vertices, normals, uvs } = parseObj(data);\n\t\tif (options?.scale) {\n\t\t\tconst scaling = Matrix4.scaling(options.scale, options.scale, options.scale);\n\t\t\tvertices = vertices.map((v) => scaling.transformPoint3(v));\n\t\t}\n\t\tif (options?.flipFaces) {\n\t\t\tfor (let i = 0; i < vertices.length; i += 3) {\n\t\t\t\tconst v0 = vertices[i];\n\t\t\t\tconst v1 = vertices[i + 2];\n\t\t\t\tvertices[i] = v1;\n\t\t\t\tvertices[i + 2] = v0;\n\t\t\t}\n\t\t}\n\n\t\tconst geom: ObjVertex[] = vertices.map((position, i) => {\n\t\t\treturn {\n\t\t\t\tposition,\n\t\t\t\tnormal: normals[i],\n\t\t\t\tuv: uvs[i],\n\t\t\t};\n\t\t});\n\t\tsuper(geom);\n\t}\n\n\tstatic async fromUrl(url: string): Promise<Obj> {\n\t\tconst response = await fetch(url);\n\t\tconst data = await response.text();\n\t\treturn new Obj(data);\n\t}\n}\n\nfunction parseObj(data: string): ObjFile {\n\tconst vertices: Point3[] = [];\n\tconst faces: Face[] = [];\n\tconst normals: Vector3[] = [];\n\tconst uvs: Point2[] = [];\n\n\tfor (const line of data.split('\\n')) {\n\t\tconst leader = line.split(' ')[0];\n\t\tswitch (leader) {\n\t\t\t// Vertex\n\t\t\tcase 'v':\n\t\t\t\tvertices.push(parseObjVertex(line));\n\t\t\t\tbreak;\n\n\t\t\t// Face\n\t\t\tcase 'f':\n\t\t\t\tfaces.push(parseObjFace(line));\n\t\t\t\tbreak;\n\n\t\t\t// Vertex Texture\n\t\t\tcase 'vt':\n\t\t\t\tuvs.push(parseObjUV(line));\n\t\t\t\tbreak;\n\n\t\t\t// Vertex Normal\n\t\t\tcase 'vn':\n\t\t\t\tnormals.push(parseObjNormal(line));\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn {\n\t\tvertices: (faces as any).flat().map((f: number[]) => vertices[f[0]]),\n\t\tnormals: (faces as any).flat().map((f: number[]) => normals[f[2]]),\n\t\tuvs: (faces as any).flat().map((f: number[]) => uvs[f[1]]),\n\t};\n}\n\nfunction parseObjVertex(line: string): Point3 {\n\treturn line\n\t\t.split(' ')\n\t\t.filter((s) => s)\n\t\t.slice(1)\n\t\t.map(parseFloat) as Point3;\n}\n\nfunction parseObjNormal(line: string): Vector3 {\n\treturn line\n\t\t.split(' ')\n\t\t.filter((s) => s)\n\t\t.slice(1)\n\t\t.map(parseFloat) as Vector3;\n}\n\nfunction parseObjUV(line: string): Point2 {\n\tconst p = line\n\t\t.split(' ')\n\t\t.filter((s) => s)\n\t\t.slice(1)\n\t\t.map(i => parseFloat(i)) as Point2;\n\n\treturn [p[0], 1 - p[1]];\n}\n\nfunction parseObjFace(line: string): Face {\n\treturn line\n\t\t.split(' ')\n\t\t.filter((s) => s)\n\t\t.slice(1)\n\t\t.map((f) => f.split('/').map(i => parseInt(i, 10) - 1)) as Face;\n}\n","import { Mesh } from '../mesh';\nimport { Point3, Point2, Vector3 } from '../geom';\nimport { Color } from '../material';\n\nexport type CubeVertex = {\n\tposition: Point3;\n\tuv: Point2;\n\tnormal: Vector3;\n\tcolor: Color;\n};\n\nexport class Cube extends Mesh<CubeVertex> {\n\tconstructor() {\n\t\tconst data: CubeVertex[] = new Array(FACE_VERTICES.length / 3);\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\t// prettier-ignore\n\t\t\tconst position: Point3 = [\n\t\t\t\tFACE_VERTICES[i * 3 + 0],\n\t\t\t\tFACE_VERTICES[i * 3 + 1],\n\t\t\t\tFACE_VERTICES[i * 3 + 2],\n\t\t\t];\n\t\t\t// prettier-ignore\n\t\t\tconst uv: Point2 = [\n\t\t\t\tFACE_UV[(i * 2 + 0) % FACE_UV.length],\n\t\t\t\tFACE_UV[(i * 2 + 1) % FACE_UV.length],\n\t\t\t];\n\n\t\t\tconst normal: Vector3 = [0.0, 0.0, 0.0];\n\t\t\tdata[i] = { position, uv, normal, color: [0.0, 1.0, 0.0, 1.0] };\n\t\t}\n\n\t\tsuper(data);\n\t\tthis.calculateNormals();\n\t}\n}\n\n// prettier-ignore\nconst FACE_UV = [\n\t1.0, 0.0,\n\t0.0, 0.0,\n\t1.0, 1.0,\n\n\t0.0, 1.0,\n\t1.0, 1.0,\n\t0.0, 0.0,\n];\n\n// prettier-ignore\nconst FACE_VERTICES = [\n\t// Far\n\t-1.0, 1.0, -1.0,\n\t1.0, 1.0, -1.0,\n\t-1.0, -1.0, -1.0,\n\n\t1.0, -1.0, -1.0,\n\t-1.0, -1.0, -1.0,\n\t1.0, 1.0, -1.0,\n\n\t// Near\n\t1.0, 1.0, 1.0,\n\t-1.0, 1.0, 1.0,\n\t1.0, -1.0, 1.0,\n\n\t-1.0, -1.0, 1.0,\n\t1.0, -1.0, 1.0,\n\t-1.0, 1.0, 1.0,\n\n\t// Left\n\t-1.0, 1.0, 1.0,\n\t-1.0, 1.0, -1.0,\n\t-1.0, -1.0, 1.0,\n\n\t-1.0, -1.0, -1.0,\n\t-1.0, -1.0, 1.0,\n\t-1.0, 1.0, -1.0,\n\n\t// Right\n\t1.0, 1.0, -1.0,\n\t1.0, 1.0, 1.0,\n\t1.0, -1.0, -1.0,\n\n\t1.0, -1.0, 1.0,\n\t1.0, -1.0, -1.0,\n\t1.0, 1.0, 1.0,\n\n\t// Top\n\t1.0, 1.0, -1.0,\n\t-1.0, 1.0, -1.0,\n\t1.0, 1.0, 1.0,\n\n\t-1.0, 1.0, 1.0,\n\t1.0, 1.0, 1.0,\n\t-1.0, 1.0, -1.0,\n\n\t// Bottom\n\t1.0, -1.0, -1.0,\n\t1.0, -1.0, 1.0,\n\t-1.0, -1.0, -1.0,\n\n\t-1.0, -1.0, 1.0,\n\t-1.0, -1.0, -1.0,\n\t1.0, -1.0, 1.0,\n];\n","import { Mesh, Geometry } from '../mesh';\nimport { Point3, Point2, Vector3, normalize, cross, addVector3, multiplyVector3 } from '../geom';\nimport { Color } from '../material';\n\nexport type SphereVertex = {\n\tposition: Point3;\n\tuv: Point2;\n\tnormal: Vector3;\n\tcolor: Color;\n};\n\nexport class Sphere extends Mesh<SphereVertex> {\n\tconstructor(lonSegments: number, latSegments: number) {\n\t\tconst data: SphereVertex[] = new Array(lonSegments * latSegments * 6);\n\n\t\tlet i = 0;\n\t\tfor (let y = latSegments * -0.5; y < latSegments * 0.5; y++) {\n\t\t\tconst lat0 = Math.PI * (y / latSegments);\n\t\t\tconst lat1 = Math.PI * ((y + 1) / latSegments);\n\n\t\t\tfor (let x = lonSegments * -0.5; x < lonSegments * 0.5; x++) {\n\t\t\t\tconst lon0 = 2 * Math.PI * (x / lonSegments);\n\t\t\t\tconst lon1 = 2 * Math.PI * ((x + 1) / lonSegments);\n\n\t\t\t\tconst quad: [number, number][] = [\n\t\t\t\t\t[lon1, lat1],\n\t\t\t\t\t[lon0, lat1],\n\t\t\t\t\t[lon0, lat0],\n\t\t\t\t\t[lon1, lat0],\n\t\t\t\t\t[lon1, lat1],\n\t\t\t\t\t[lon0, lat0],\n\t\t\t\t];\n\n\t\t\t\tfor (const p of quad) {\n\t\t\t\t\tconst position = sphericalToCartesian(p[0], p[1]);\n\t\t\t\t\tconst normal = normalize(position);\n\t\t\t\t\tconst vertex: SphereVertex = {\n\t\t\t\t\t\tposition,\n\t\t\t\t\t\tnormal,\n\t\t\t\t\t\tuv: sphericalToUV(p[0], p[1]),\n\t\t\t\t\t\tcolor: [1.0, 0.0, 0.0, 1.0],\n\t\t\t\t\t};\n\n\t\t\t\t\tdata[i++] = vertex;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tsuper(data);\n\t}\n}\n\nexport class CubeSphere extends Mesh<SphereVertex> {\n\tconstructor(res: number) {\n\t\tsuper([\n\t\t\tnew CubeSphereFace(res, [0, 1, 0]),\n\t\t\tnew CubeSphereFace(res, [0, -1, 0]),\n\n\t\t\tnew CubeSphereFace(res, [1, 0, 0]),\n\t\t\tnew CubeSphereFace(res, [-1, 0, 0]),\n\n\t\t\tnew CubeSphereFace(res, [0, 0, 1]),\n\t\t\tnew CubeSphereFace(res, [0, 0, -1]),\n\t\t]);\n\t}\n}\n\nexport class CubeSphereFace extends Geometry<SphereVertex> {\n\tconstructor(res: number, up: Point3) {\n\t\tconst data: SphereVertex[] = new Array(res * res);\n\t\tconst axisA: Point3 = [up[1], up[2], up[0]];\n\t\tconst axisB = cross(up, axisA);\n\n\t\tconst vertices = new Array(res * res);\n\t\tconst triangles = new Array((res - 1) * (res - 1));\n\n\t\tlet tri = 0;\n\t\tconst sub = 1 / (res - 1);\n\t\tfor (let y = 0; y < res; y++) {\n\t\t\tfor (let x = 0; x < res; x++) {\n\t\t\t\tconst p: Point2 = [\n\t\t\t\t\tx * sub,\n\t\t\t\t\ty * sub,\n\t\t\t\t];\n\t\t\t\tconst hp = [\n\t\t\t\t\t(p[0] - 0.5) * 2.0,\n\t\t\t\t\t(p[1] - 0.5) * 2.0,\n\t\t\t\t];\n\t\t\t\tlet position = up;\n\t\t\t\tposition = addVector3(position, multiplyVector3([hp[0], hp[0], hp[0]], axisA));\n\t\t\t\tposition = addVector3(position, multiplyVector3([hp[1], hp[1], hp[1]], axisB));\n\t\t\t\tposition = normalize(position);\n\t\t\t\tconst vertex: SphereVertex = {\n\t\t\t\t\tposition,\n\t\t\t\t\tnormal: position,\n\t\t\t\t\tuv: [0, 0],\n\t\t\t\t\tcolor: [1.0, 0.0, 0.0, 1.0],\n\t\t\t\t};\n\t\t\t\tconst i = x + y * res;\n\t\t\t\tvertices[i] = vertex;\n\n\t\t\t\tif (x < res - 1 && y < res - 1) {\n\t\t\t\t\ttriangles[tri++] = i;\n\t\t\t\t\ttriangles[tri++] = i + res + 1;\n\t\t\t\t\ttriangles[tri++] = i + res;\n\t\t\t\t\ttriangles[tri++] = i;\n\t\t\t\t\ttriangles[tri++] = i + 1;\n\t\t\t\t\ttriangles[tri++] = i + res + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < triangles.length; i++) {\n\t\t\tdata[i] = vertices[triangles[i]];\n\t\t}\n\t\tsuper(data);\n\t}\n}\n\nfunction sphericalToCartesian(lon: number, lat: number): Point3 {\n\treturn [\n\t\tMath.cos(lat) * Math.sin(lon),\n\t\tMath.sin(lat),\n\t\tMath.cos(lat) * Math.cos(lon),\n\t];\n}\n\nfunction sphericalToUV(lon: number, lat: number): Point2 {\n\tconst x = lon / Math.PI / 2 + 0.5;\n\tconst y = -lat / Math.PI + 0.5;\n\treturn [x, y];\n}\n","import { Mesh } from '../mesh';\nimport { Point3, Point2, Vector3 } from '../geom';\nimport { Color } from '../material';\n\nexport type Vertex = {\n\tposition: Point3;\n\tuv: Point2;\n\tcolor: Color;\n\tnormal: Vector3;\n};\n\nexport class Quad extends Mesh<Vertex> {\n\tconstructor() {\n\t\tsuper([\n\t\t\t{ position: [1.0, 1.0, 0.0], uv: [1.0, 0.0], color: [0.0, 0.0, 0.0, 1.0], normal: [0.0, 0.0, 1.0] },\n\t\t\t{ position: [-1.0, 1.0, 0.0], uv: [0.0, 0.0], color: [0.0, 0.0, 0.0, 1.0], normal: [0.0, 0.0, 1.0] },\n\t\t\t{ position: [1.0, -1.0, 0.0], uv: [1.0, 1.0], color: [0.0, 0.0, 0.0, 1.0], normal: [0.0, 0.0, 1.0] },\n\n\t\t\t{ position: [-1.0, -1.0, 0.0], uv: [0.0, 1.0], color: [0.0, 0.0, 0.0, 1.0], normal: [0.0, 0.0, 1.0] },\n\t\t\t{ position: [1.0, -1.0, 0.0], uv: [1.0, 1.0], color: [0.0, 0.0, 0.0, 1.0], normal: [0.0, 0.0, 1.0] },\n\t\t\t{ position: [-1.0, 1.0, 0.0], uv: [0.0, 0.0], color: [0.0, 0.0, 0.0, 1.0], normal: [0.0, 0.0, 1.0] },\n\t\t]);\n\t\tthis.calculateNormals();\n\t}\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(235);\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"sourceRoot":""}